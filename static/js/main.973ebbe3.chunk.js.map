{"version":3,"sources":["components/Navigation/NavListView/NavListView.js","components/Navigation/NavigationView.js","Containers/Naviagtion/Navigations.js","components/TasksList/TasksPreviewInCard/TaskPreviewInCard.js","components/Card/Card.js","components/List/ListButtons/ListButtons.js","components/List/ListInput/ListInput.js","components/List/ListOptions/ListOptions.js","components/List/ListOptions/ListMove/ListMoveView.js","Containers/List/ListMove.js","components/List/ListView.js","Containers/List/List.js","components/CoreField/CoreFieldView.js","Containers/CoreField/CoreField.js","Style/MediaQuery/mq.js","components/ThemeField/ThemeFieldView.js","Containers/ThemeField/ThemeField.js","components/OptionCover/OptionCoverListView/OptionCoverListView.js","components/CopyCard/CopyCardView.js","Containers/CopyCard/CopyCard.js","components/MoveToAnotherList/MoveToAnotherListBox.js","components/Labels/LabelView/LabelsNameColors.js","components/Labels/LabelView/LabelsChooseColors.js","components/Labels/LabelsView.js","Containers/Labels/Labels.js","components/DatePicker/Calendar.js","components/DatePicker/DatePickerView.js","Containers/DatePicker/DatePicker.js","components/OptionCover/OptionCoverView.js","Containers/OptionCover/OptionCover.js","components/DetailCover/DetailElements/DetailInputElement.js","components/DetailCover/DetailElements/DetalSuggestedElement/DetailSuggestedElement.js","components/TasksList/TasksListView.js","Containers/TasksList/TasksList.js","components/DetailCover/DetailTools/DetailCoverNav/DetailCoverNav.js","components/TasksList/SubtasksOptionView/SubtasksOptionView.js","Containers/TasksList/SubtasksOption/SubtasksOption.js","components/TasksList/TasksListInDetailCoverView/TasksListInDetailCoverView.js","Containers/TasksList/TasksListInDetailCover/TasksListInDetailCover.js","components/DetailCover/DetailTools/DetailCoverMarks/DetailCoverMarks.js","components/DetailCover/DetailTools/DetailTools.js","components/DetailCover/DetailCoverView/DetailCoverView.js","Containers/DetailCover/DetailCover.js","Containers/Main/main.js","Style/GlobalStyle/globalStyle.js","components/App.js","serviceWorker.js","index.js"],"names":["StyledList","styled","li","props","lastEle","Link","a","NavListView","elementHoverEnter","elementHoverLeave","themeFunction","linkTitle","className","onMouseEnter","e","onMouseLeave","onClick","StyledNav","nav","StyledUl","ul","StyledInput","input","navigationElements","Navigation","map","element","key","placeholder","Navigations","themeToggle","themeOption","this","NavigationView","Component","StyledSubTasksCounter","h4","card","StyledIcon","span","TaskPreviewInCard","totalTasks","unActiveTasks","style","backgroundColor","color","StyledContentWrap","div","StyledContent","h3","StyledEdit","StyledTermInCard","Card","state","selected","scrollHeight","taskk","offsetX","offsetY","cardH","mouseDownFeature","target","classList","document","getElementById","task","id","clientHeight","setState","nativeEvent","zIndex","addEventListener","mouseMoveFeature","mouseUpFeature","cursor","position","transform","boxShadow","scrollPosition","wholeList","addNewCardFeature","deleteCardFeatureByMove","listId","scrollHeighFromMain","Math","floor","taskId","getAttribute","draggedCard","draggedCardChildren","children","draggenCardLabelsChildren","draggedCardTermChildren","draggedCardTasksList","pageX","mouseLeaveFeature","forEach","ele","textContent","i","length","isDragAndDropTrue","clearAllBlankSpan","removeEventListener","left","getBoundingClientRect","width","top","pageY","height","allBlankSpan","querySelectorAll","all","borderRadius","labelFontSizeToggle","hideFontSizeLabel","setHideFontSizeLabel","taskName","inputTitle","taskDetailsFunction","visibilityOptionFunction","matchedTasksList","listOfAllTasksList","filter","totalOfSubTasks","unActiveSubtasks","onDoubleClick","onMouseDown","border","priority","fontSize","pointerEvents","badges","labelId","name","currentListName","date","classN","statusColor","fontColor","day","monthName","status","StyledAddButton","button","StyledSpanX","ListButtons","showAddField","textAreaValue","swapAddFieldFeature","StyledInputCover","ListInput","selectedList","listOptionToggle","setListTitle","onChange","value","StyledOptionList","StyledX","StyledTitle","ListOptions","deleteList","addNewCardFromList","moveListVisibilityFunc","deleteCardsFromListFunc","StyledMoveListWrap","StyledButton","StyledSelectDiv","StyledPossibleMoveOptions","StyledAvailableEle","disabled","StyledSelectText","smallerText","ListMoveView","togglePossibleMoveForList","possibleMoveListVisi","availableLists","setThisPlaceToDiv","moveThisList","list","currentList","ListMove","querySelector","availableDiv","copyWholeList","currentListIndex","findIndex","find","splice","setWholeList","index","StyledTextArea","textarea","showStyle","ListView","tasks","setTextAreaValue","listVisi","moveListVisibility","List","hideAll","searchingClass","includes","showListHandle","setListInput","updateListTitle","buttonId","addNewCard","addNewCardFeatureByKey","which","preventDefault","deleteCard","clientX","clientY","display","marginRight","draggedListIndex","moveListToAnotherPlace","filterWholeList","deletedList","everyCardId","push","main","mainWidth","offsetWidth","scroll","behavior","title","moveList","StyledMain","StyledListInput","StyledWrapList","StyledWrapAddListBtn","bgc","CoreFieldView","mousePositionX","listOption","showList","showAddListHandle","listInputHandle","listInputValue","addNewList","addNewListByKey","onScroll","onMouseMove","onKeyPress","MainField","useState","updatedScrollPosition","isDragDropTrue","isDragDropTrueFeature","scrollLeft","isTrue","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","StyledColorDiv","StyledThemeDivTitle","StyledThemeDiv","showTheme","ThemeFieldView","changeColor","blockOfColors","block","mainColor","navColor","listColor","inputColor","ThemeField","setWhichColor","StyledListBlock","OptionCoverListView","handleLabelsVisibility","addPriorityForCards","optionCoverData","changeListInDetails","matchedPriority","toggleDateVisibility","clickedCardId","StyledReplaceTitle","alignCenter","biggerMargin","StyledCheckedBox","StyledCheckIcon","StyledCheckBoxTitle","StyledSuggestList","biggerFont","CopyCardView","changeCopyTextArea","copyTextArea","matchedColorsToThisCard","toggleCanCopyLables","canCopyLabels","moveCardToAnotherList","taskTitleList","optionCover","CopyCard","taskTitle","StyledChangeListDetails","rightPosition","topPosition","MoveToAnotherListBox","byElement","copyVisibility","StyledBack","StyledNameLabels","optionCoverPosition","StyledLabelTitle","StyledLabelInput","marginTop","StyledName","StyledWrapColors","StyledColorSquar","LabelsNameColors","nameLabelVisibility","filteredColors","detailCover","nameLabelInput","nameLabelInputValue","choosedSquar","saveNameLabel","currentSquarEdit","StyledLabels","StyledLabelWrapEle","StyledLabelElement","StyledIconCheck","StyledNameSox","LabelsChooseColors","toggleLabelColorToCard","generateCheckIcon","searchLabelColor","searchInputLabel","useEffect","LabelsView","labelVisibility","Labels","currentMatchedColors","toggle","colorId","from","isAnyTextAlready","parentNode","matchedBadges","listOfAllBadges","currentCheckIcon","substr","listOfAllTasksId","labelColors","setLabelColors","matchedLabelInCard","copyOfLabelColor","colorName","addLabelColor","toUpperCase","StyledCalendar","StyledCalendarDays","darkerColor","col","cur","Calendar","days","emptyFields","howManyDaysMonth","todayDay","setThisDayFunc","StyledDateTitle","StyledText","h2","biggerFontSize","StyledDateWrap","StyledColumnDate","redButton","StyledWrapDateInputs","StyledDateInput","StyledWarnSpan","DatePickerView","todayMonth","todayYear","todayMonthName","hour","minutes","toggleMonths","choosedDateFunction","choosedTimeFunction","setThisDataFunctiion","DatePicker","time","todayFullDate","todayWeekDay","months","updateFlag","action","preventMonthLenghtFlag","displayingMonthLength","blankPlace","emptyFilter","contentFilter","backMonthLenght","generateOtherMonth","firstOfMonth","stepBackMonthLength","empty","unshift","mappingArrayWithContent","whichWay","thisDay","month","year","buttonType","patternDay","patternMonth","patternYear","patternHour","patternMinutes","toD","toM","toY","test","currDate","Date","currD","getDate","currM","getMonth","currY","getFullYear","currH","getHours","currMin","getMinutes","shorcutMonth","toggleTermToCard","counterModulo","slice","getDay","todayFull","hours","todayWithZero","monthWithZero","nextMonthFromDay","nextMonthDay","nextMonthDayArr","firstDayOfPrevMonth","StyledCover","StyledOptionBox","StyledSaveButton","StyledWrapLabels","StyledWrapTextAndLabels","StyledDate","StyledWrapTerms","OptionCover","taskTitleFeature","updateCard","labelsVisibility","toggleDetailMove","dateVisibility","matchedTerms","setOptionCoverPostion","taskData","mainOffsetTop","offsetTop","coverBox","coverBoxHeight","offsetHeight","currentListScrollNow","scrollTop","listIndex","positionY","positionX","listOfAllPriorityTasks","listOfAllTerms","OptionCoverView","StyledTaskName","Detail_Input","idUpdatedList","StyledLightText","StyledStrongText","strong","DetailSuggestedElement","visibilityChangeListInDetails","StyledNameTask","TasksListView","changeTasksListTitle","tasksListTitle","addTasksList","TasksList","listName","setListOfTasksList","subTasksList","activeSubtasks","StyledDetailNav","StyledDetailUl","StyledDetailList","first","DetailCoverNav","setTasksListVisibility","tasksListVisibility","StyledOptionWindow","StyledListElement","SubtasksOptionView","subTaskToCard","subTaskDelete","SubtasksOption","subTaskNameOptionClicked","subTaskIndex","subTaskClicked","active","subTaskOptionsVisiToggle","StyledWrap","StyledListTitle","StyledBarWrap","StyledTasksList","StyledGreyButton","marginTop0","StyledPerecntage","StyledBarContainer","StyledBarInner","StyledSubTaskWrap","StyledSubTaskName","StyledWarnningSpan","StyledEllipsis","TasksListInDetailCoverView","subTaskToggle","subTaskToggleVisi","subTaskInupChange","subTaskInputValue","addSubTaskFunc","makeThisTaskDone","deleteTasksList","subTaskOptionsVisi","textDecoration","TasksListInDetailCover","toggleForUpdate","matchedList","opacity","matchedTasksListIndex","subTaskId","subTaskActive","subTaskName","StyledDetailMarks","StyledDetailDescription","marginLeft","biggerSize","pointer","StyledLabelsWrap","StyledPlaceholder","greyBgc","hoverBgc","StyledCommentOptionWrap","StyledComment","StyledTermWrap","StyledTerm","StyledStatus","DetailCoverMarks","toggleCommentFeature","toggleCommentVisibility","commentChange","commentValue","addCommentToCard","listOfAllComments","editCommentToCard","termDoneCheckbox","matchedListTasks","margin","term","comment","StyledDetailToolsWrap","DetailTools","StyledDetail","DetailCoverView","DetailInputElement","DetailCover","setListOfAllComments","commentIndexToDelete","matchedComments","React","Main","showThemeOption","showThemeOptionFunction","numberOfTask","numberOfTaskFunction","whichColor","visibilityOptionsCover","setVisibilityOptionCover","setOptionCoverData","visibilityTaskDetails","setVisibilityTaskDetails","setTaskTitleList","setTaskName","setTaskId","setIdUpdatedList","setChangeListInDetails","setToggleDetailMove","setLabelsVisibility","labelsVisibilityDetailsComp","setLabelsVisibilityDetailsComp","setToggle","setListOfAllTasksId","setListOfPriority","setListOfallTerms","setToggleCommentVisibility","setCopyVisibility","setDateVisibility","hideTheme","activeList","newTask","correctList","matchedComment","theBiggestId","max","matchedDate","cover","byButton","matchedPriorityIndex","matchedCommentIndex","matchedTermIndex","indexOfBadgedToDelete","indexOfTaskListToDelete","matchedIdList","taskIndex","arrayClassList","item","currentLiColor","Color","lighten","nameUpdatedTask","nameUpdatedList","cardId","updatedTitle","clickedListId","byOptionCover","copy","deleteFromList","addToList","unicalIdForCopy","copyCard","copyId","preventCardId","lablesToCopy","commentToCopy","dateToCopy","beforeDoneState","alreadyExistedBadges","matchedBages","nameBadge","createLabelsElement","indexToDelete","remove","nameLabel","currentTask","newLabel","createElement","add","setAttribute","appendChild","existingTermIndex","innerHTML","currentCard","termSpan","beforeColor","beforeStatus","termToDeleteIndex","CoreField","biggerThanLast","theBiggest","activeInput","offsetLeft","clickedCard","clickedCardWrapLabel","newTitle","addToThisIndex","splicedElement","blank","matchedTerm","currentCardTerm","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.973ebbe3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledList = styled.li`\r\n  width: ${(props) => (props.lastEle ? \"auto\" : \"75px\")};\r\n  height: 100%;\r\n  text-align: center;\r\n  background-color: #76ce8e;\r\n  border-radius: 4px;\r\n  transition: 0.1s linear;\r\n  margin-right: 4px;\r\n  margin-left: ${(props) => (props.lastEle ? \"auto\" : \"initial\")};\r\n  padding: ${(props) => (props.lastEle ? \"initial\" : \"8px 0px\")};\r\n`;\r\n\r\nconst Link = styled.a`\r\n  text-decoration: none;\r\n  font-size: 1.5rem;\r\n  color: #fff;\r\n`;\r\n\r\nfunction NavListView({\r\n  elementHoverEnter,\r\n  elementHoverLeave,\r\n  themeFunction,\r\n  linkTitle,\r\n}) {\r\n  return (\r\n    <StyledList\r\n      className=\"list\"\r\n      onMouseEnter={(e) => elementHoverEnter(e)}\r\n      onMouseLeave={(e) => elementHoverLeave(e)}\r\n      onClick={themeFunction}\r\n    >\r\n      <Link>{linkTitle}</Link>\r\n    </StyledList>\r\n  );\r\n}\r\n\r\nexport default NavListView;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NavListView from \"./NavListView/NavListView\";\r\n\r\nconst StyledNav = styled.nav`\r\n  width: 100vw;\r\n  height: 40px;\r\n  background-color: #40a35b;\r\n  padding: 0px 4px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledUl = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  flex-shrink: 1;\r\n  width: 100%;\r\n  height: 40px;\r\n  list-style: none;\r\n  cursor: pointer;\r\n  padding: 4px 0px;\r\n`;\r\n\r\nconst StyledList = styled.li`\r\n  width: ${(props) => (props.lastEle ? \"auto\" : \"75px\")};\r\n  height: 100%;\r\n  text-align: center;\r\n  background-color: #76ce8e;\r\n  border-radius: 4px;\r\n  transition: 0.1s linear;\r\n  margin-right: 4px;\r\n  margin-left: ${(props) => (props.lastEle ? \"auto\" : \"initial\")};\r\n  padding: ${(props) => (props.lastEle ? \"initial\" : \"8px 0px\")};\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 120px;\r\n  height: 100%;\r\n  border-radius: 4px;\r\n  padding: 7.5px;\r\n  background-color: #79be8c;\r\n  font-size: 1.6rem;\r\n  color: #fff;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    background-color: #64b37a;\r\n  }\r\n\r\n  &::placeholder {\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst navigationElements = [\"Your list\", \"Theme\", \"Help\"];\r\n\r\nconst Navigation = ({\r\n  elementHoverEnter,\r\n  elementHoverLeave,\r\n  themeFunction,\r\n}) => {\r\n  return (\r\n    <StyledNav className=\"nav\">\r\n      <StyledUl>\r\n        {navigationElements.map((element) => (\r\n          <NavListView\r\n            themeFunction={element === \"Theme\" ? themeFunction : null}\r\n            elementHoverEnter={(e) => elementHoverEnter(e)}\r\n            elementHoverLeave={(e) => elementHoverLeave(e)}\r\n            linkTitle={element}\r\n            key={element}\r\n          />\r\n        ))}\r\n        <StyledList lastEle>\r\n          <StyledInput className=\"item\" placeholder=\"Search...\" />\r\n        </StyledList>\r\n      </StyledUl>\r\n    </StyledNav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport NavigationView from \"../../components/Navigation/NavigationView\";\r\n\r\nclass Navigations extends Component {\r\n  themeFunction = () => {\r\n    this.props.themeToggle(!this.props.themeOption);\r\n  };\r\n\r\n  render() {\r\n    const { elementHoverEnter, elementHoverLeave } = this.props;\r\n    return (\r\n      <>\r\n        <NavigationView\r\n          elementHoverEnter={elementHoverEnter}\r\n          elementHoverLeave={elementHoverLeave}\r\n          themeFunction={this.themeFunction}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigations;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledSubTasksCounter = styled.h4`\r\n  align-self: ${(props) => (props.card ? \"null\" : \"flex-start\")};\r\n  border-radius: 4px;\r\n  padding: 2.5px 5px;\r\n  margin: ${(props) => (props.card ? \"5px 0px 0px 3px\" : \"0px 0px 0px 3px\")};\r\n  font-size: 12px;\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 5px;\r\n  font-size: 12.5px;\r\n  vertical-align: middle;\r\n`;\r\n\r\nfunction TaskPreviewInCard({ totalTasks, unActiveTasks, card }) {\r\n  return (\r\n    <>\r\n      {totalTasks !== 0 ? (\r\n        <StyledSubTasksCounter\r\n          card={card}\r\n          style={{\r\n            backgroundColor: `${\r\n              unActiveTasks === totalTasks ? \"#61BD4F\" : \"initial\"\r\n            }`,\r\n            color: `${unActiveTasks === totalTasks ? \"#fff\" : \"#999\"}`,\r\n          }}\r\n        >\r\n          <StyledIcon className=\"fas fa-check-double\" />\r\n          {unActiveTasks}/{totalTasks}\r\n        </StyledSubTasksCounter>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskPreviewInCard;\r\n","import React, { Component } from \"react\";\r\nimport TasksPreviewCard from \"../TasksList/TasksPreviewInCard/TaskPreviewInCard\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledContentWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  pointer-events: none;\r\n  padding: 2px;\r\n`;\r\n\r\nconst StyledContent = styled.h3`\r\n  flex-grow: 1;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #172b4d;\r\n`;\r\n\r\nconst StyledEdit = styled.span`\r\n  margin: 0 5px;\r\n  align-self: center;\r\n  pointer-events: initial;\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 5px;\r\n  font-size: 12.5px;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst StyledTermInCard = styled.span`\r\n  color: #888;\r\n  font-size: 12.5px;\r\n  letter-spacing: 0.5px;\r\n  margin-left: 3px;\r\n`;\r\n\r\nclass Card extends Component {\r\n  state = {\r\n    selected: false,\r\n    scrollHeight: 0,\r\n    taskk: \"\",\r\n    offsetX: \"\",\r\n    offsetY: \"\",\r\n    cardH: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      taskk: this.props.task.taskName,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.removeEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n  }\r\n\r\n  mouseDownFeature = (e) => {\r\n    if (e.target.classList[0] !== \"card\") return;\r\n    const card = document.getElementById(this.props.task.id);\r\n    const cardH = card.clientHeight;\r\n    this.setState({\r\n      selected: true,\r\n      offsetX: e.nativeEvent.offsetX,\r\n      offsetY: e.nativeEvent.offsetY,\r\n      cardH: cardH,\r\n    });\r\n\r\n    e.target.style.zIndex = 999;\r\n    document.addEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.addEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n  };\r\n\r\n  mouseUpFeature = (e) => {\r\n    const card = document.getElementById(this.props.task.id);\r\n    if (e.target.classList[0] !== \"card\") return;\r\n    card.style.cursor = \"pointer\";\r\n    card.style.position = \"static\";\r\n    card.style.transform = \"rotate(0deg)\";\r\n    card.style.boxShadow = null;\r\n    card.style.zIndex = 0;\r\n\r\n    const {\r\n      scrollPosition,\r\n      wholeList,\r\n      addNewCardFeature,\r\n      deleteCardFeatureByMove,\r\n      listId,\r\n    } = this.props;\r\n\r\n    const scrollHeighFromMain = Math.floor(scrollPosition);\r\n    const taskId = card.getAttribute(\"id\");\r\n    const draggedCard = document.getElementById(taskId);\r\n\r\n    const draggedCardChildren = draggedCard.children;\r\n    const draggenCardLabelsChildren = [...draggedCardChildren[0].children]; //Weard thing that is need to properly dragging without doubling card content?\r\n    const draggedCardTermChildren = [...draggedCard.children[2].children]; //Weard thing that is need to properly dragging without doubling card content?\r\n    const draggedCardTasksList = [...draggedCard.children[3].children]; //Weard thing that is need to properly dragging without doubling card content?\r\n\r\n    if (e.pageX < 285 - scrollHeighFromMain) {\r\n      if (wholeList[0].id === listId) return this.mouseLeaveFeature(card); //When put card in this same place call it\r\n      draggenCardLabelsChildren.forEach((ele) => {\r\n        ele.textContent = \"\";\r\n      });\r\n      draggedCardTermChildren.forEach((ele) => {\r\n        ele.textContent = \"\";\r\n      });\r\n      draggedCardTasksList.forEach((ele) => {\r\n        ele.textContent = \"\";\r\n      });\r\n      deleteCardFeatureByMove(listId, taskId);\r\n      addNewCardFeature(wholeList[0].id, card.textContent, taskId);\r\n    }\r\n\r\n    for (let i = 1; i <= 10; i++) {\r\n      if (\r\n        e.pageX > 285 * i - scrollHeighFromMain &&\r\n        e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n        wholeList.length >= i + 1\r\n      ) {\r\n        if (wholeList[i].id === listId) return this.mouseLeaveFeature(card); //When put card in this same place\r\n        draggenCardLabelsChildren.forEach((ele) => {\r\n          ele.textContent = \"\";\r\n        });\r\n        draggedCardTermChildren.forEach((ele) => {\r\n          ele.textContent = \"\";\r\n        });\r\n        draggedCardTasksList.forEach((ele) => {\r\n          ele.textContent = \"\";\r\n        });\r\n        deleteCardFeatureByMove(listId, taskId);\r\n        addNewCardFeature(wholeList[i].id, card.textContent, taskId);\r\n      }\r\n    }\r\n\r\n    this.props.isDragAndDropTrue(false);\r\n    this.props.clearAllBlankSpan();\r\n\r\n    document.removeEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.removeEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n\r\n    this.setState({\r\n      selected: false,\r\n    });\r\n  };\r\n\r\n  mouseMoveFeature = (e) => {\r\n    const scrollHeighFromMain = Math.floor(this.props.scrollPosition);\r\n    const card = document.getElementById(this.props.task.id);\r\n\r\n    if (this.state.selected) {\r\n      card.style.left = `${e.pageX - card.getBoundingClientRect().width / 2}px`;\r\n      card.style.top = `${e.pageY - card.getBoundingClientRect().height / 2}px`;\r\n\r\n      card.style.position = \"fixed\";\r\n      card.style.cursor = \"grabbing\";\r\n      card.style.transform = \"rotate(5deg)\";\r\n      card.style.boxShadow = \"0px 10px 20px 0.6px rgba(0,0,0,0.25)\";\r\n      card.style.zIndex = 999;\r\n\r\n      const allBlankSpan = document.querySelectorAll(\".blank\");\r\n      allBlankSpan.forEach((all) => {\r\n        all.style.width = \"0\";\r\n        all.style.height = \"0\";\r\n        all.style.backgroundColor = \"transparent\";\r\n      });\r\n\r\n      for (let i = 1; i < 10; i++) {\r\n        if (e.pageX < 285 - scrollHeighFromMain) {\r\n          allBlankSpan[0].style.width = \"100%\";\r\n          allBlankSpan[0].style.height = `${this.state.cardH}px`;\r\n          allBlankSpan[0].style.backgroundColor = \"#dddfe5\";\r\n          allBlankSpan[0].style.borderRadius = \"5px\";\r\n        } else if (\r\n          e.pageX > 285 * i - scrollHeighFromMain &&\r\n          e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n          this.props.wholeList.length >= i + 1\r\n        ) {\r\n          allBlankSpan[i].style.width = \"100%\";\r\n          allBlankSpan[i].style.height = `${this.state.cardH}px`;\r\n          allBlankSpan[i].style.backgroundColor = \"#dddfe5\";\r\n          allBlankSpan[i].style.borderRadius = \"5px\";\r\n        }\r\n      }\r\n    }\r\n\r\n    this.props.isDragAndDropTrue(true);\r\n  };\r\n\r\n  mouseLeaveFeature = (card) => {\r\n    const target = card;\r\n    target.style.cursor = \"pointer\";\r\n    target.style.position = \"static\";\r\n    target.style.transform = \"rotate(0deg)\";\r\n    target.style.zIndex = 0;\r\n    this.props.clearAllBlankSpan();\r\n    this.props.isDragAndDropTrue(false);\r\n\r\n    document.removeEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.removeEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n\r\n    this.setState({\r\n      selected: false,\r\n    });\r\n  };\r\n\r\n  labelFontSizeToggle = (hideFontSizeLabel) => {\r\n    this.props.setHideFontSizeLabel(!hideFontSizeLabel);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      task,\r\n      inputTitle,\r\n      listId,\r\n      taskDetailsFunction,\r\n      visibilityOptionFunction,\r\n      hideFontSizeLabel,\r\n      listOfAllTasksList,\r\n    } = this.props;\r\n\r\n    const matchedTasksList = listOfAllTasksList.filter(\r\n      (ele) => ele.id === task.id\r\n    );\r\n\r\n    let unActiveTasks = 0;\r\n    let totalTasks = 0;\r\n\r\n    matchedTasksList.forEach((ele) => {\r\n      totalTasks += ele.totalOfSubTasks;\r\n      unActiveTasks += ele.unActiveSubtasks;\r\n    });\r\n\r\n    return (\r\n      <div\r\n        id={task.id}\r\n        className=\"card\"\r\n        onDoubleClick={(e) =>\r\n          taskDetailsFunction(task.taskName, inputTitle, listId, task.id)\r\n        }\r\n        onMouseDown={(e) => this.mouseDownFeature(e)}\r\n        style={{\r\n          border: task.priority === \"priority\" ? \"1px solid #db4a36\" : null,\r\n        }}\r\n      >\r\n        <div\r\n          className=\"card_wrapLabel\"\r\n          onClick={() => this.labelFontSizeToggle(hideFontSizeLabel)}\r\n          style={{\r\n            fontSize: hideFontSizeLabel ? 0 : \"12px\",\r\n            pointerEvents: \"none\",\r\n          }}\r\n        >\r\n          {task.badges.map((ele) => (\r\n            <div\r\n              key={ele.color}\r\n              id={ele.labelId}\r\n              className=\"labelElement\"\r\n              style={{ backgroundColor: ele.color, pointerEvents: \"none\" }}\r\n            >\r\n              {ele.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <StyledContentWrap>\r\n          <StyledContent>{task.taskName}</StyledContent>\r\n          <StyledEdit\r\n            className=\"fas fa-highlighter\"\r\n            onClick={(e) =>\r\n              visibilityOptionFunction(\r\n                e,\r\n                true,\r\n                task,\r\n                listId,\r\n                task.currentListName,\r\n                task.id\r\n              )\r\n            }\r\n          />\r\n        </StyledContentWrap>\r\n\r\n        <div\r\n          style={{ width: \"100%\", pointerEvents: \"none\" }}\r\n          id={`${task.id}term`}\r\n        >\r\n          {task.date.map((ele) => (\r\n            <StyledTermInCard\r\n              key={ele.id}\r\n              className={ele.classN}\r\n              style={{ backgroundColor: ele.statusColor, color: ele.fontColor }}\r\n            >\r\n              <StyledIcon className=\"far fa-clock\" />\r\n              {`${ele.day} ${ele.monthName} ${ele.status}`}\r\n            </StyledTermInCard>\r\n          ))}\r\n        </div>\r\n        <div>\r\n          <TasksPreviewCard\r\n            unActiveTasks={unActiveTasks}\r\n            totalTasks={totalTasks}\r\n            card={true}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledAddButton = styled.button`\r\n  background-color: #5aac44;\r\n  border-radius: 5px;\r\n  color: white;\r\n  padding: 8px 20px;\r\n  margin: 5px 0px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #67ba50;\r\n  }\r\n`;\r\n\r\nconst StyledSpanX = styled.span`\r\n  font-size: 2.3rem;\r\n  vertical-align: middle;\r\n  color: #666;\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction ListButtons({\r\n  showAddField,\r\n  id,\r\n  textAreaValue,\r\n  addNewCardFeature,\r\n  swapAddFieldFeature,\r\n}) {\r\n  return (\r\n    <>\r\n      {showAddField ? (\r\n        <>\r\n          <StyledAddButton onClick={() => addNewCardFeature(id, textAreaValue)}>\r\n            Add Card\r\n          </StyledAddButton>\r\n          <StyledSpanX\r\n            className=\"fas fa-times\"\r\n            onClick={() => swapAddFieldFeature(\"SpanX\")}\r\n          />\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListButtons;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledInput = styled.input`\r\n  width: 220px;\r\n  background-color: #ebecf0;\r\n  border-radius: 1px;\r\n  padding: 5px 4px;\r\n  font-size: 1.4rem;\r\n  font-weight: 600;\r\n  color: #172b4d;\r\n\r\n  &:focus {\r\n    background-color: white;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n\r\n  &::placeholder {\r\n    font-weight: 400;\r\n    color: #779;\r\n  }\r\n`;\r\n\r\nconst StyledInputCover = styled.div`\r\n  display: inline-block;\r\n  width: 220px;\r\n  background-color: #ebecf0;\r\n  border-radius: 1px;\r\n  padding: 5px 4px;\r\n  font-size: 1.4rem;\r\n  font-weight: 600;\r\n  color: #172b4d;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nfunction ListInput({\r\n  selectedList,\r\n  id,\r\n  inputTitle,\r\n  listOptionToggle,\r\n  setListTitle,\r\n}) {\r\n  return (\r\n    <>\r\n      {selectedList ? (\r\n        <StyledInputCover\r\n          onChange={(e) => setListTitle(e, id)}\r\n          className=\"input\"\r\n        >\r\n          {inputTitle}\r\n        </StyledInputCover>\r\n      ) : (\r\n        <StyledInput\r\n          value={inputTitle}\r\n          onChange={(e) => setListTitle(e, id)}\r\n          className=\"input\"\r\n          placeholder=\"Add any title...\"\r\n        />\r\n      )}\r\n      <span\r\n        className=\"fas fa-ellipsis-h listOptions\"\r\n        id={`${id}ellips`}\r\n        onClick={(e) => listOptionToggle(e)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListInput;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledOptionList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: 43px;\r\n  left: 230px;\r\n  width: 280px;\r\n  height: 310px;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n  box-shadow: 0px 0.5px 0px 0.5px #aaa;\r\n  z-index: 999;\r\n  cursor: initial;\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  position: absolute;\r\n  top: 12px;\r\n  right: 12px;\r\n  font-size: 14px;\r\n  color: #aaa;\r\n  cursor: pointer;\r\n`;\r\nconst StyledTitle = styled.h3`\r\n  width: 100%;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  border-bottom: 1px solid #ccc;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #aaa;\r\n`;\r\n\r\nconst StyledUl = styled.ul`\r\n  list-style: none;\r\n  border-bottom: 1px solid #ccc;\r\n  padding: 7.5px 0px;\r\n\r\n  &:nth-last-child(1) {\r\n    border-bottom: none;\r\n  }\r\n`;\r\nconst StyledList = styled.li`\r\n  padding: 10px;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  color: #172b4d;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #f1f2f5;\r\n  }\r\n`;\r\n\r\nfunction ListOptions({\r\n  deleteList,\r\n  listId,\r\n  addNewCardFromList,\r\n  moveListVisibilityFunc,\r\n  deleteCardsFromListFunc,\r\n}) {\r\n  return (\r\n    <StyledOptionList className=\"listOptions\">\r\n      <StyledX className=\"fas fa-times\" />\r\n      <StyledTitle className=\"listOptions\">List Actions</StyledTitle>\r\n      <StyledUl className=\"listOptions\">\r\n        <StyledList onClick={() => addNewCardFromList()}>\r\n          Add card...\r\n        </StyledList>\r\n        <StyledList>Copy list...</StyledList>\r\n        <StyledList\r\n          onClick={() => moveListVisibilityFunc()}\r\n          className=\"listOptions\"\r\n        >\r\n          Move list...\r\n        </StyledList>\r\n      </StyledUl>\r\n\r\n      <StyledUl className=\"listOptions\">\r\n        <StyledList>Move every card in this list...</StyledList>\r\n        <StyledList onClick={() => deleteCardsFromListFunc(listId)}>\r\n          Archive every card in this list...\r\n        </StyledList>\r\n      </StyledUl>\r\n      <StyledUl className=\"listOptions\">\r\n        <StyledList onClick={() => deleteList(listId)}>\r\n          Archive this list\r\n        </StyledList>\r\n      </StyledUl>\r\n    </StyledOptionList>\r\n  );\r\n}\r\n\r\nexport default ListOptions;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMoveListWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: 43px;\r\n  left: 230px;\r\n  width: 280px;\r\n  height: 150px;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n  box-shadow: 0px 0.5px 0px 0.5px #aaa;\r\n  z-index: 999;\r\n  cursor: initial;\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  position: absolute;\r\n  top: 12px;\r\n  right: 12px;\r\n  font-size: 14px;\r\n  color: #aaa;\r\n  cursor: pointer;\r\n`;\r\nconst StyledTitle = styled.h3`\r\n  width: 100%;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  border-bottom: 1px solid #ccc;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #aaa;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: #5aac44;\r\n  border-radius: 4px;\r\n  margin: 0 auto;\r\n  margin-top: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: #6abc54;\r\n  }\r\n`;\r\n\r\nconst StyledSelectDiv = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 95%;\r\n  height: 45px;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 2.5px 5px;\r\n  margin: 5px auto;\r\n  margin-top: 15px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledPossibleMoveOptions = styled.div`\r\n  position: absolute;\r\n  top: 40px;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  border: 1px solid black;\r\n`;\r\n\r\nconst StyledAvailableEle = styled.div`\r\n  width: 100%;\r\n  height: 25px;\r\n  line-height: 25px;\r\n  font-size: 15px;\r\n  padding: 2.5px 5px;\r\n  pointer-events: ${(props) => (props.disabled ? \"none\" : \"initial\")};\r\n  color: ${(props) => (props.disabled ? \"#999\" : \"initial\")};\r\n  cursor: ${(props) => (props.disabled ? \"initial\" : \"pointer\")};\r\n\r\n  &:hover {\r\n    background-color: #2099df;\r\n  }\r\n`;\r\n\r\nconst StyledSelectText = styled.h3`\r\n  width: 100%;\r\n  padding: 2.5px 5px;\r\n  font-weight: 500;\r\n  font-size: ${(props) => (props.smallerText ? \"11px\" : \"13px\")};\r\n  color: ${(props) => (props.smallerText ? \"#999\" : \"#333\")};\r\n`;\r\n\r\nfunction ListMoveView({\r\n  togglePossibleMoveForList,\r\n  possibleMoveListVisi,\r\n  availableLists,\r\n  setThisPlaceToDiv,\r\n  moveThisList,\r\n  listId,\r\n}) {\r\n  return (\r\n    <StyledMoveListWrap className=\"listOptions\">\r\n      <StyledX className=\"fas fa-times\" />\r\n      <StyledTitle className=\"listOptions\">Move list</StyledTitle>\r\n      <StyledSelectDiv\r\n        onClick={() => togglePossibleMoveForList()}\r\n        className=\"listOptions\"\r\n      >\r\n        <StyledSelectText smallerText className=\"listOptions\">\r\n          Position\r\n        </StyledSelectText>\r\n        <StyledSelectText className=\"available listOptions\">\r\n          Select list place\r\n        </StyledSelectText>\r\n        {possibleMoveListVisi ? (\r\n          <StyledPossibleMoveOptions>\r\n            {availableLists.map((ele) => (\r\n              <StyledAvailableEle\r\n                key={ele.list}\r\n                disabled={ele.currentList === \"true\" ? true : false}\r\n                onClick={(e) => setThisPlaceToDiv(e)}\r\n                className=\"listOptions\"\r\n              >\r\n                {ele.list}\r\n                {`${ele.currentList === \"true\" ? \" (Actual)\" : \"\"}`}\r\n              </StyledAvailableEle>\r\n            ))}\r\n          </StyledPossibleMoveOptions>\r\n        ) : null}\r\n      </StyledSelectDiv>\r\n      <StyledButton onClick={() => moveThisList(listId)}>Move It</StyledButton>\r\n    </StyledMoveListWrap>\r\n  );\r\n}\r\n\r\nexport default ListMoveView;\r\n","import React, { Component } from \"react\";\r\nimport ListMoveView from \"../../components/List/ListOptions/ListMove/ListMoveView\";\r\n\r\nclass ListMove extends Component {\r\n  setThisPlaceToDiv = (e) => {\r\n    const availableDiv = document.querySelector(\".available\");\r\n    availableDiv.textContent = e.target.textContent;\r\n  };\r\n\r\n  moveThisList = () => {\r\n    const availableDiv = document.querySelector(\".available\").textContent;\r\n    if (availableDiv !== \"Select list place\") {\r\n      const copyWholeList = [...this.props.wholeList];\r\n      const currentListIndex = copyWholeList.findIndex(\r\n        (ele) => ele.id === this.props.listId\r\n      );\r\n\r\n      const currentList = copyWholeList.find(\r\n        (ele) => ele.id === this.props.listId\r\n      );\r\n\r\n      copyWholeList.splice(currentListIndex, 1); //Delete list from current place\r\n      copyWholeList.splice(availableDiv - 1, 0, currentList); //Delete nothing from according place, but put there preview deleted list\r\n\r\n      this.props.setWholeList(copyWholeList);\r\n      this.props.moveListVisibilityFunc();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      togglePossibleMoveForList,\r\n      possibleMoveListVisi,\r\n      wholeList,\r\n      listId,\r\n    } = this.props;\r\n\r\n    const availableLists = wholeList.map((ele, index) => {\r\n      return {\r\n        list: index + 1,\r\n        currentList: `${ele.id === this.props.listId}`,\r\n      };\r\n    });\r\n\r\n    return (\r\n      <ListMoveView\r\n        togglePossibleMoveForList={togglePossibleMoveForList}\r\n        possibleMoveListVisi={possibleMoveListVisi}\r\n        availableLists={availableLists}\r\n        setThisPlaceToDiv={this.setThisPlaceToDiv}\r\n        moveThisList={this.moveThisList}\r\n        listId={listId}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListMove;\r\n","import React from \"react\";\r\nimport Card from \"../../components/Card/Card\";\r\nimport ListButtons from \"./ListButtons/ListButtons\";\r\nimport ListInput from \"./ListInput/ListInput\";\r\nimport ListOptions from \"./ListOptions/ListOptions\";\r\nimport ListMove from \"../../Containers/List/ListMove\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 100%;\r\n  height: ${(props) => (props.showStyle ? \"60px\" : \"31px\")};\r\n  background-color: ${(props) => (props.showStyle ? \"#fff\" : \"#ebecf0\")};\r\n  border-radius: 5px;\r\n  padding: 7.5px;\r\n  color: #779;\r\n  resize: none;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  box-shadow: ${(props) =>\r\n    props.showStyle ? \"0px 0.5px 0px 0.5px #aaa\" : \"none\"};\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.showStyle ? null : \"#dddfe5\")};\r\n  }\r\n`;\r\n\r\nfunction ListView({\r\n  mouseDownFeature,\r\n  selectedList,\r\n  listOptionToggle,\r\n  wholeList,\r\n  setWholeList,\r\n  id,\r\n  tasks,\r\n  scrollPosition,\r\n  isDragAndDropTrue,\r\n  visibilityOptionFunction,\r\n  taskDetailsFunction,\r\n  inputTitle,\r\n  clearAllBlankSpan,\r\n  showAddField,\r\n  textAreaValue,\r\n  setTextAreaValue,\r\n  swapAddFieldFeature,\r\n  setListTitle,\r\n  addNewCardFeature,\r\n  deleteCardFeatureByMove,\r\n  hideFontSizeLabel,\r\n  setHideFontSizeLabel,\r\n  listOfAllTasksList,\r\n  listVisi,\r\n  deleteList,\r\n  addNewCardFromList,\r\n  moveListVisibilityFunc,\r\n  moveListVisibility,\r\n  possibleMoveListVisi,\r\n  togglePossibleMoveForList,\r\n  deleteCardsFromListFunc,\r\n}) {\r\n  return (\r\n    <div\r\n      className=\"lists\"\r\n      id={`list${id}`}\r\n      onMouseDown={(e) => mouseDownFeature(e)}\r\n    >\r\n      <ListInput\r\n        selectedList={selectedList}\r\n        id={id}\r\n        inputTitle={inputTitle}\r\n        listOptionToggle={listOptionToggle}\r\n        setListTitle={setListTitle}\r\n        listVisi={listVisi}\r\n      />\r\n\r\n      {tasks.map((task) => (\r\n        <Card\r\n          wholeList={wholeList}\r\n          key={task.id}\r\n          task={task}\r\n          listId={id}\r\n          addNewCardFeature={addNewCardFeature}\r\n          deleteCardFeatureByMove={deleteCardFeatureByMove}\r\n          scrollPosition={scrollPosition}\r\n          isDragAndDropTrue={isDragAndDropTrue}\r\n          visibilityOptionFunction={visibilityOptionFunction}\r\n          taskDetailsFunction={taskDetailsFunction}\r\n          inputTitle={inputTitle}\r\n          clearAllBlankSpan={clearAllBlankSpan}\r\n          hideFontSizeLabel={hideFontSizeLabel}\r\n          setHideFontSizeLabel={setHideFontSizeLabel}\r\n          listOfAllTasksList={listOfAllTasksList}\r\n        />\r\n      ))}\r\n      <div className=\"blank\" />\r\n      <StyledTextArea\r\n        value={showAddField ? textAreaValue : \"Add Another Card\"}\r\n        onChange={(e) => setTextAreaValue(e)}\r\n        onClick={() => swapAddFieldFeature(\"textArea\")}\r\n        showStyle={showAddField}\r\n        placeholder=\"Add title for this card...\"\r\n      />\r\n      <ListButtons\r\n        showAddField={showAddField}\r\n        id={id}\r\n        textAreaValue={textAreaValue}\r\n        addNewCardFeature={addNewCardFeature}\r\n        swapAddFieldFeature={swapAddFieldFeature}\r\n      />\r\n      {listVisi ? (\r\n        <ListOptions\r\n          deleteList={deleteList}\r\n          listId={id}\r\n          addNewCardFromList={addNewCardFromList}\r\n          moveListVisibilityFunc={moveListVisibilityFunc}\r\n          deleteCardsFromListFunc={deleteCardsFromListFunc}\r\n        />\r\n      ) : null}\r\n      {moveListVisibility ? (\r\n        <ListMove\r\n          togglePossibleMoveForList={togglePossibleMoveForList}\r\n          possibleMoveListVisi={possibleMoveListVisi}\r\n          moveListVisibilityFunc={moveListVisibilityFunc}\r\n          wholeList={wholeList}\r\n          listId={id}\r\n          setWholeList={setWholeList}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\nexport default ListView;\r\n","import React, { Component } from \"react\";\r\nimport ListView from \"../../components/List/ListView\";\r\n\r\nclass List extends Component {\r\n  state = {\r\n    inputTitle: \"\",\r\n    showAddField: false,\r\n    textAreaValue: \"\",\r\n    selectedList: false,\r\n    listVisi: false,\r\n    moveListVisibility: false,\r\n    possibleMoveListVisi: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"click\", this.hideAll);\r\n    document.addEventListener(\"keypress\", (e) =>\r\n      this.addNewCardFeatureByKey(e, this.props.id, this.state.textAreaValue)\r\n    );\r\n    const main = document.querySelector(\".main\");\r\n    const mainWidth = main.offsetWidth;\r\n    main.scroll({\r\n      left: mainWidth + 285 * (this.props.wholeList.length + 1),\r\n      behavior: \"smooth\",\r\n    });\r\n\r\n    this.setState({\r\n      inputTitle: this.props.title,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"click\", this.hideAll);\r\n    document.removeEventListener(\"keypress\", (e) =>\r\n      this.addNewCardFeatureByKey(e, this.props.id, this.state.textAreaValue)\r\n    );\r\n    document.removeEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.removeEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n  }\r\n\r\n  hideAll = (e) => {\r\n    const searchingClass = e.target.className;\r\n    if (\r\n      searchingClass.includes(\"main\") ||\r\n      searchingClass.includes(\"input\") ||\r\n      searchingClass.includes(\"nav\") ||\r\n      searchingClass.includes(\"wrapList\") ||\r\n      searchingClass.includes(\"singleListWrap\")\r\n    ) {\r\n      this.setState({\r\n        showAddField: false,\r\n        listVisi: false,\r\n        moveListVisibility: false,\r\n      });\r\n      this.props.showListHandle(false);\r\n      this.props.setListInput(\"\");\r\n    }\r\n\r\n    if (!searchingClass.includes(\"listOptions\")) {\r\n      this.setState({\r\n        listVisi: false,\r\n        moveListVisibility: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  setListTitle = (e, listId) => {\r\n    this.setState({\r\n      inputTitle: e.target.value,\r\n    });\r\n    this.props.updateListTitle(e.target.value, listId);\r\n  };\r\n\r\n  swapAddFieldFeature = (buttonId) => {\r\n    if (buttonId === \"textArea\") {\r\n      this.setState({\r\n        showAddField: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showAddField: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  setTextAreaValue = (e) => {\r\n    this.setState({\r\n      textAreaValue: e.target.value,\r\n    });\r\n  };\r\n\r\n  addNewCardFeature = (listId, textAreaValue, taskId) => {\r\n    this.props.addNewCard(listId, textAreaValue, taskId);\r\n    this.setState({\r\n      showAddField: false,\r\n      textAreaValue: \"\",\r\n    });\r\n  };\r\n\r\n  addNewCardFeatureByKey = (e, listId, textAreaValue, taskId) => {\r\n    if (e.which === 13 && this.state.showAddField) {\r\n      e.preventDefault();\r\n      this.props.addNewCard(listId, textAreaValue, taskId);\r\n      this.setState({\r\n        textAreaValue: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteCardFeatureByMove = (listId, taskId) => {\r\n    this.props.deleteCard(listId, taskId);\r\n    this.setState({\r\n      textAreaValue: \"\",\r\n    });\r\n  };\r\n\r\n  mouseDownFeature = (e) => {\r\n    if (e.target.classList[0] !== \"lists\") return;\r\n    this.setState({\r\n      selectedList: true,\r\n    });\r\n    e.target.style.zIndex = 999;\r\n    e.target.style.cursor = \"grabbing\";\r\n    e.target.style.boxShadow = \"0px 10px 20px 0.6px rgba(0,0,0,0.25)\";\r\n\r\n    document.addEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.addEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n  };\r\n\r\n  mouseMoveFeature = (e) => {\r\n    const list = document.getElementById(`list${this.props.id}`);\r\n    const scrollHeighFromMain = Math.floor(this.props.scrollPosition);\r\n    if (this.state.selectedList && list.classList[0] === \"lists\") {\r\n      list.style.left = `${e.clientX - 135}px`;\r\n      list.style.top = `${e.clientY - 45}px`;\r\n      list.style.position = \"fixed\";\r\n      list.style.transform = \"rotate(5deg)\";\r\n\r\n      const allBlankSpan = document.querySelectorAll(\".frontBlankList\");\r\n      allBlankSpan.forEach((all) => {\r\n        all.style.display = \"none\";\r\n      });\r\n\r\n      for (let i = 1; i < 10; i++) {\r\n        if (e.pageX < 285 - scrollHeighFromMain) {\r\n          allBlankSpan[0].style.width = \"275px\";\r\n          allBlankSpan[0].style.height = \"10px\";\r\n          allBlankSpan[0].style.backgroundColor = \"rgba(0,0,0,0.15)\";\r\n          allBlankSpan[0].style.marginRight = \"10px\";\r\n          allBlankSpan[0].style.borderRadius = \"4px\";\r\n          allBlankSpan[0].style.display = \"initial\";\r\n          allBlankSpan[0].style.position = \"absolute\";\r\n          allBlankSpan[0].style.top = \"-17.5px\";\r\n        } else if (\r\n          e.pageX > 285 * i - scrollHeighFromMain &&\r\n          e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n          this.props.wholeList.length >= i + 1\r\n        ) {\r\n          allBlankSpan[i].style.width = \"275px\";\r\n          allBlankSpan[i].style.height = \"10px\";\r\n          allBlankSpan[i].style.backgroundColor = \"rgba(0,0,0,0.15)\";\r\n          allBlankSpan[i].style.marginRight = \"10px\";\r\n          allBlankSpan[i].style.borderRadius = \"4px\";\r\n          allBlankSpan[i].style.display = \"initial\";\r\n          allBlankSpan[i].style.position = \"absolute\";\r\n          allBlankSpan[i].style.top = \"-17.5px\";\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  mouseUpFeature = (e) => {\r\n    const list = document.getElementById(`list${this.props.id}`);\r\n    if (list.classList[0] !== \"lists\") return;\r\n    list.style.position = \"static\";\r\n    list.style.cursor = \"pointer\";\r\n    list.style.zIndex = null;\r\n    list.style.boxShadow = null;\r\n    list.style.transform = null;\r\n\r\n    const { scrollPosition, wholeList } = this.props;\r\n    const scrollHeighFromMain = Math.floor(scrollPosition);\r\n\r\n    const allBlankSpan = document.querySelectorAll(\".frontBlankList\");\r\n    allBlankSpan.forEach((all) => {\r\n      all.style.display = \"none\";\r\n    });\r\n\r\n    const draggedListIndex = this.props.wholeList.findIndex(\r\n      (list) => list.id === this.props.id\r\n    );\r\n\r\n    if (e.pageX < 285 - scrollHeighFromMain) {\r\n      this.props.moveListToAnotherPlace(draggedListIndex, 0);\r\n    }\r\n\r\n    for (let i = 1; i < 10; i++) {\r\n      if (\r\n        e.pageX > 285 * i - scrollHeighFromMain &&\r\n        e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n        wholeList.length >= i + 1\r\n      ) {\r\n        this.props.moveListToAnotherPlace(draggedListIndex, i);\r\n      }\r\n    }\r\n    document.removeEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.removeEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n    this.setState({\r\n      selectedList: false,\r\n    });\r\n  };\r\n\r\n  listOptionToggle = (e) => {\r\n    //Toggle for general listOptions visibility\r\n    this.setState({\r\n      listVisi: !this.state.listVisi,\r\n    });\r\n  };\r\n\r\n  deleteList = (listId) => {\r\n    const copyWholeList = [...this.props.wholeList];\r\n    const filterWholeList = copyWholeList.filter((list) => list.id !== listId); //Delete current list by id\r\n    const deletedList = copyWholeList.filter((list) => list.id === listId);\r\n    const everyCardId = []; //All card id container\r\n    deletedList[0].tasks.forEach((ele) => {\r\n      everyCardId.push(ele.id); // Add card id to container\r\n    });\r\n    everyCardId.forEach((ele) => {\r\n      //Use deleteCard function to every card which id is in container\r\n      this.props.deleteCard(listId, ele, \"byButton\");\r\n    });\r\n    this.props.setWholeList(filterWholeList);\r\n  };\r\n\r\n  addNewCardFromList = () => [\r\n    //Just redirect to addCard textArea\r\n    this.setState({\r\n      listVisi: false,\r\n      showAddField: true,\r\n    }),\r\n  ];\r\n\r\n  moveListVisibilityFunc = () => {\r\n    //Toggle for moveList visibility component\r\n    this.setState({\r\n      listVisi: false,\r\n      moveListVisibility: !this.state.moveListVisibility,\r\n    });\r\n  };\r\n\r\n  togglePossibleMoveForList = () => {\r\n    //Toggle for POSSIBLE postition to move\r\n    this.setState({\r\n      possibleMoveListVisi: !this.state.possibleMoveListVisi,\r\n    });\r\n  };\r\n\r\n  deleteCardsFromListFunc = (listId) => {\r\n    const copyWholeList = [...this.props.wholeList];\r\n    const currentList = copyWholeList.filter((list) => list.id === listId); //Finding currentList\r\n    const everyCardId = []; //All card id container\r\n    currentList[0].tasks.forEach((ele) => {\r\n      everyCardId.push(ele.id);\r\n    }); // Add card id to container\r\n    everyCardId.forEach((ele) => {\r\n      //Use deleteCard function to every card which id is in container\r\n      this.props.deleteCard(listId, ele, \"byButton\");\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      tasks,\r\n      wholeList,\r\n      setWholeList,\r\n      scrollPosition,\r\n      isDragAndDropTrue,\r\n      visibilityOptionFunction,\r\n      taskDetailsFunction,\r\n      clearAllBlankSpan,\r\n      hideFontSizeLabel,\r\n      setHideFontSizeLabel,\r\n      listOfAllTasksList,\r\n    } = this.props;\r\n    const {\r\n      showAddField,\r\n      textAreaValue,\r\n      inputTitle,\r\n      selectedList,\r\n      listVisi,\r\n      moveListVisibility,\r\n      possibleMoveListVisi,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"singleListWrap\">\r\n        <div className=\"frontBlankList\"></div>\r\n        <ListView\r\n          selectedList={selectedList}\r\n          listOptionToggle={this.listOptionToggle}\r\n          wholeList={wholeList}\r\n          setWholeList={setWholeList}\r\n          id={id}\r\n          tasks={tasks}\r\n          scrollPosition={scrollPosition}\r\n          isDragAndDropTrue={isDragAndDropTrue}\r\n          visibilityOptionFunction={visibilityOptionFunction}\r\n          taskDetailsFunction={taskDetailsFunction}\r\n          inputTitle={inputTitle}\r\n          clearAllBlankSpan={clearAllBlankSpan}\r\n          showAddField={showAddField}\r\n          textAreaValue={textAreaValue}\r\n          mouseDownFeature={this.mouseDownFeature}\r\n          setTextAreaValue={this.setTextAreaValue}\r\n          swapAddFieldFeature={this.swapAddFieldFeature}\r\n          setListTitle={this.setListTitle}\r\n          addNewCardFeature={this.addNewCardFeature}\r\n          deleteCardFeatureByMove={this.deleteCardFeatureByMove}\r\n          hideFontSizeLabel={hideFontSizeLabel}\r\n          setHideFontSizeLabel={setHideFontSizeLabel}\r\n          listOfAllTasksList={listOfAllTasksList}\r\n          listVisi={listVisi}\r\n          deleteList={this.deleteList}\r\n          addNewCardFromList={this.addNewCardFromList}\r\n          moveList={this.moveList}\r\n          moveListVisibilityFunc={this.moveListVisibilityFunc}\r\n          moveListVisibility={moveListVisibility}\r\n          possibleMoveListVisi={possibleMoveListVisi}\r\n          togglePossibleMoveForList={this.togglePossibleMoveForList}\r\n          deleteCardsFromListFunc={this.deleteCardsFromListFunc}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport List from \"../../Containers/List/List\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMain = styled.main`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  width: auto;\r\n  min-height: calc(100vh - 40px);\r\n  background-color: #4bbf6b;\r\n  padding: 40px 6px 0px 6px;\r\n  overflow-x: scroll;\r\n`;\r\n\r\nconst StyledListInput = styled.input`\r\n  width: 265px;\r\n  background-color: #76ce8e;\r\n  border-radius: 4px;\r\n  padding: 12px 7.5px;\r\n  text-align: left;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  box-shadow: 0px 0px 1px 0px #888;\r\n  font-size: 15px;\r\n\r\n  &::placeholder {\r\n    color: white;\r\n  }\r\n\r\n  &:focus {\r\n    background-color: #fff !important;\r\n    ::placeholder {\r\n      color: black;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledWrapList = styled.div`\r\n  display: flex;\r\n  width: auto;\r\n  flex-direction: row;\r\n  height: auto;\r\n  background-color: transparent;\r\n  margin-bottom: 10px;\r\n  padding: 3px 5px;\r\n  border-radius: 5px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  align-self: flex-start;\r\n  width: 50%;\r\n  background-color: #5aac44;\r\n  border-radius: 5px;\r\n  color: white;\r\n  padding: 8px 20px;\r\n  margin-top: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #67ba50;\r\n  }\r\n`;\r\n\r\nconst StyledWrapAddListBtn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  align-self: flex-start;\r\n  width: 275px;\r\n  border-radius: 4px;\r\n  padding: 0px 5px 5px 5px;\r\n  padding-top: ${(props) => (props.bgc ? \"5px\" : \"0px\")};\r\n  background-color: ${(props) => (props.bgc ? \"#ebecf0\" : \"transparent\")};\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nfunction CoreFieldView({\r\n  scroll,\r\n  mousePositionX,\r\n  wholeList,\r\n  listOption,\r\n  addNewCard,\r\n  deleteCard,\r\n  showListHandle,\r\n  setListInput,\r\n  scrollPosition,\r\n  isDragAndDropTrue,\r\n  visibilityOptionFunction,\r\n  taskDetailsFunction,\r\n  updateListTitle,\r\n  moveListToAnotherPlace,\r\n  clearAllBlankSpan,\r\n  showList,\r\n  showAddListHandle,\r\n  listInputHandle,\r\n  listInputValue,\r\n  addNewList,\r\n  addNewListByKey,\r\n  elementHoverEnter,\r\n  elementHoverLeave,\r\n  hideFontSizeLabel,\r\n  setHideFontSizeLabel,\r\n  listOfAllTasksList,\r\n  setWholeList,\r\n}) {\r\n  return (\r\n    <StyledMain\r\n      className=\"main\"\r\n      onScroll={(e) => scroll(e)}\r\n      onMouseMove={(e) => mousePositionX(e)}\r\n    >\r\n      <StyledWrapList className=\"wrapList\">\r\n        {wholeList.map((list) => (\r\n          <List\r\n            wholeList={wholeList}\r\n            key={list.id}\r\n            id={list.id}\r\n            title={list.title}\r\n            tasks={list.tasks}\r\n            listOption={listOption}\r\n            addNewCard={addNewCard}\r\n            deleteCard={deleteCard}\r\n            showListHandle={showListHandle}\r\n            setListInput={setListInput}\r\n            scrollPosition={scrollPosition}\r\n            isDragAndDropTrue={isDragAndDropTrue}\r\n            visibilityOptionFunction={visibilityOptionFunction}\r\n            taskDetailsFunction={taskDetailsFunction}\r\n            updateListTitle={updateListTitle}\r\n            moveListToAnotherPlace={moveListToAnotherPlace}\r\n            clearAllBlankSpan={clearAllBlankSpan}\r\n            hideFontSizeLabel={hideFontSizeLabel}\r\n            setHideFontSizeLabel={setHideFontSizeLabel}\r\n            listOfAllTasksList={listOfAllTasksList}\r\n            setWholeList={setWholeList}\r\n          />\r\n        ))}\r\n        <StyledWrapAddListBtn bgc={showList ? true : false}>\r\n          <StyledListInput\r\n            bgc={showList ? true : false}\r\n            placeholder=\"Add another list\"\r\n            onClick={showAddListHandle}\r\n            onChange={(e) => listInputHandle(e)}\r\n            className=\"list\"\r\n            value={listInputValue}\r\n            onKeyPress={(e) => addNewListByKey(e)}\r\n            onMouseEnter={(e) => elementHoverEnter(e)}\r\n            onMouseLeave={(e) => elementHoverLeave(e)}\r\n          />\r\n          {showList ? (\r\n            <StyledButton\r\n              onClick={() =>\r\n                addNewList(listInputValue, showListHandle, setListInput)\r\n              }\r\n            >\r\n              Add List\r\n            </StyledButton>\r\n          ) : null}\r\n        </StyledWrapAddListBtn>\r\n      </StyledWrapList>\r\n    </StyledMain>\r\n  );\r\n}\r\n\r\nexport default CoreFieldView;\r\n","import React, { useState } from \"react\";\r\nimport CoreFieldView from \"../../components/CoreField/CoreFieldView\";\r\n\r\nconst MainField = ({\r\n  wholeList,\r\n  listOption,\r\n  addNewCard,\r\n  deleteCard,\r\n  addNewList,\r\n  updateListTitle,\r\n  elementHoverEnter,\r\n  elementHoverLeave,\r\n  visibilityOptionFunction,\r\n  taskDetailsFunction,\r\n  moveListToAnotherPlace,\r\n  clearAllBlankSpan,\r\n  hideFontSizeLabel,\r\n  setHideFontSizeLabel,\r\n  listOfAllTasksList,\r\n  setWholeList,\r\n}) => {\r\n  const [showList, showListHandle] = useState(false);\r\n  const [scrollPosition, updatedScrollPosition] = useState(0);\r\n  const [isDragDropTrue, isDragDropTrueFeature] = useState(\"\");\r\n\r\n  const showAddListHandle = () => {\r\n    showListHandle(true);\r\n  };\r\n\r\n  const [listInputValue, setListInput] = useState(\"\");\r\n\r\n  const listInputHandle = (e) => {\r\n    setListInput(e.target.value);\r\n  };\r\n\r\n  const addNewListByKey = (e) => {\r\n    if (e.which === 13 && showList) {\r\n      addNewList(listInputValue, showListHandle, setListInput);\r\n      showListHandle(true);\r\n    }\r\n  };\r\n\r\n  const scroll = (e) => {\r\n    const scrollPosition = e.target.scrollLeft;\r\n    updatedScrollPosition(scrollPosition);\r\n  };\r\n\r\n  const mousePositionX = (e) => {\r\n    const main = document.querySelector(\".main\");\r\n    const mainWidth = main.offsetWidth;\r\n    const mousePositionX = e.clientX;\r\n    if (mousePositionX <= 75 && isDragDropTrue) {\r\n      main.scroll({\r\n        left: 0,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n\r\n    if (mousePositionX >= mainWidth - 75 && isDragDropTrue) {\r\n      main.scroll({\r\n        left: mainWidth + 285 * (wholeList.length + 1),\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const isDragAndDropTrue = (isTrue) => {\r\n    isDragDropTrueFeature(isTrue);\r\n  };\r\n\r\n  return (\r\n    <CoreFieldView\r\n      scroll={scroll}\r\n      mousePositionX={mousePositionX}\r\n      wholeList={wholeList}\r\n      listOption={listOption}\r\n      addNewCard={addNewCard}\r\n      deleteCard={deleteCard}\r\n      showListHandle={showListHandle}\r\n      setListInput={setListInput}\r\n      scrollPosition={scrollPosition}\r\n      isDragAndDropTrue={isDragAndDropTrue}\r\n      visibilityOptionFunction={visibilityOptionFunction}\r\n      taskDetailsFunction={taskDetailsFunction}\r\n      updateListTitle={updateListTitle}\r\n      moveListToAnotherPlace={moveListToAnotherPlace}\r\n      clearAllBlankSpan={clearAllBlankSpan}\r\n      showList={showList}\r\n      showAddListHandle={showAddListHandle}\r\n      listInputHandle={listInputHandle}\r\n      listInputValue={listInputValue}\r\n      addNewList={addNewList}\r\n      addNewListByKey={addNewListByKey}\r\n      elementHoverEnter={elementHoverEnter}\r\n      elementHoverLeave={elementHoverLeave}\r\n      hideFontSizeLabel={hideFontSizeLabel}\r\n      setHideFontSizeLabel={setHideFontSizeLabel}\r\n      listOfAllTasksList={listOfAllTasksList}\r\n      setWholeList={setWholeList}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MainField;\r\n","const size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n  desktop: \"2560px\",\r\n};\r\n\r\nexport const device = {\r\n  mobileS: `(min-width: ${size.mobileS})`,\r\n  mobileM: `(min-width: ${size.mobileM})`,\r\n  mobileL: `(min-width: ${size.mobileL})`,\r\n  tablet: `(min-width: ${size.tablet})`,\r\n  laptop: `(min-width: ${size.laptop})`,\r\n  laptopL: `(min-width: ${size.laptopL})`,\r\n  desktop: `(min-width: ${size.desktop})`,\r\n  desktopL: `(min-width: ${size.desktop})`,\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../Style/MediaQuery/mq\";\r\n\r\nconst StyledColorDiv = styled.div`\r\n  width: 75px;\r\n  height: 75px;\r\n  border-radius: 5px;\r\n  margin-right: 5px;\r\n  margin-left: 5px;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    opacity: 0.75;\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    width: 45%;\r\n    height: 85px;\r\n  }\r\n`;\r\n\r\nconst StyledThemeDivTitle = styled.h3`\r\n  width: 100%;\r\n  padding: 10px 0px;\r\n  text-align: center;\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst StyledThemeDiv = styled.div`\r\n  position: fixed;\r\n  bottom: 17.5px;\r\n  right: 0;\r\n  width: 100%;\r\n  transform: ${(props) =>\r\n    props.showTheme ? \"translateX(0px)\" : \"translateX(100vw)\"};\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  background-color: #f4f5f7;\r\n  padding: 10px;\r\n  transition: 0.3s linear;\r\n  z-index: 999;\r\n\r\n  @media ${device.laptop} {\r\n    top: calc(0% + 40px);\r\n    right: 0;\r\n    width: 375px;\r\n    align-content: flex-start;\r\n  }\r\n`;\r\n\r\nfunction ThemeFieldView({ themeOption, changeColor, blockOfColors }) {\r\n  return (\r\n    <StyledThemeDiv showTheme={themeOption}>\r\n      <StyledThemeDivTitle>Colors</StyledThemeDivTitle>\r\n      {blockOfColors.map((block) => (\r\n        <StyledColorDiv\r\n          onClick={() =>\r\n            changeColor(\r\n              block.mainColor,\r\n              block.navColor,\r\n              block.listColor,\r\n              block.inputColor\r\n            )\r\n          }\r\n          style={{ backgroundColor: block.mainColor }}\r\n          key={block.mainColor}\r\n        />\r\n      ))}\r\n    </StyledThemeDiv>\r\n  );\r\n}\r\n\r\nexport default ThemeFieldView;\r\n","import React from \"react\";\r\nimport ThemeFieldView from \"../../components/ThemeField/ThemeFieldView\";\r\n\r\nfunction ThemeField({ themeOption, setWhichColor }) {\r\n  const changeColor = (mainColor, navColor, listColor, inputColor) => {\r\n    const main = document.querySelector(\".main\");\r\n    main.style.backgroundColor = mainColor;\r\n\r\n    const nav = document.querySelector(\".nav\");\r\n    nav.style.backgroundColor = navColor;\r\n\r\n    const lists = document.querySelectorAll(\".list\");\r\n    lists.forEach((list) => {\r\n      list.style.backgroundColor = listColor;\r\n    });\r\n\r\n    const inputs = document.querySelectorAll(\".item\");\r\n    inputs.forEach((input) => {\r\n      input.style.backgroundColor = inputColor;\r\n    });\r\n\r\n    setWhichColor([listColor]);\r\n  };\r\n\r\n  const blockOfColors = [\r\n    {\r\n      mainColor: \"#0079BF\",\r\n      navColor: \"#0067A3\",\r\n      listColor: \"#3D99CE\",\r\n      inputColor: \"#4D95BE\",\r\n    },\r\n    {\r\n      mainColor: \"#D29034\",\r\n      navColor: \"#B37B2C\",\r\n      listColor: \"#DDAB65\",\r\n      inputColor: \"#C9A26C\",\r\n    },\r\n    {\r\n      mainColor: \"#519839\",\r\n      navColor: \"#458131\",\r\n      listColor: \"#7BB168\",\r\n      inputColor: \"#7DA76F\",\r\n    },\r\n    {\r\n      mainColor: \"#B04632\",\r\n      navColor: \"#963C2B\",\r\n      listColor: \"#C37263\",\r\n      inputColor: \"#B5766B\",\r\n    },\r\n    {\r\n      mainColor: \"#89609E\",\r\n      navColor: \"#755286\",\r\n      listColor: \"#A586B5\",\r\n      inputColor: \"#9E86AB\",\r\n    },\r\n    {\r\n      mainColor: \"#CD5A91\",\r\n      navColor: \"#AE4D7B\",\r\n      listColor: \"#D981AB\",\r\n      inputColor: \"#C682A3\",\r\n    },\r\n    {\r\n      mainColor: \"#4BBF6B\",\r\n      navColor: \"#40A35B\",\r\n      listColor: \"#76CE8E\",\r\n      inputColor: \"#79BE8C\",\r\n    },\r\n    {\r\n      mainColor: \"#00AECC\",\r\n      navColor: \"#0094AE\",\r\n      listColor: \"#3DC1D8\",\r\n      inputColor: \"#4DB4C6\",\r\n    },\r\n    {\r\n      mainColor: \"#838C91\",\r\n      navColor: \"#6F777B\",\r\n      listColor: \"#A1A8AB\",\r\n      inputColor: \"#9BA0A3\",\r\n    },\r\n  ];\r\n  return (\r\n    <ThemeFieldView\r\n      changeColor={changeColor}\r\n      themeOption={themeOption}\r\n      blockOfColors={blockOfColors}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ThemeField;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledListBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 150px;\r\n  height: 250px;\r\n`;\r\n\r\nconst StyledList = styled.li`\r\n  list-style: none;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  border-radius: 3px;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 5px;\r\n  padding: 7px 10px;\r\n  font-size: 14px;\r\n  color: white;\r\n  transition: 0.1s linear;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.75);\r\n    transform: translateX(7.5px);\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: 13px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nfunction OptionCoverListView({\r\n  deleteCard,\r\n  listId,\r\n  handleLabelsVisibility,\r\n  addPriorityForCards,\r\n  optionCoverData,\r\n  changeListInDetails,\r\n  matchedPriority,\r\n  toggleDateVisibility,\r\n}) {\r\n  return (\r\n    <StyledListBlock className=\"cover_listBlock\">\r\n      <ul>\r\n        <StyledList onClick={() => handleLabelsVisibility(true)}>\r\n          <StyledIcon className=\"fas fa-tag\" />\r\n          Edit labels\r\n        </StyledList>\r\n        <StyledList\r\n          className=\"suggested\"\r\n          onClick={() => changeListInDetails(\"byNavMove\")}\r\n        >\r\n          <StyledIcon className=\"fas fa-long-arrow-alt-right\" />\r\n          Move\r\n        </StyledList>\r\n        <StyledList\r\n          className=\"suggested\"\r\n          onClick={() => changeListInDetails(\"byNavCopy\")}\r\n        >\r\n          <StyledIcon className=\"far fa-clipboard\" />\r\n          Copy\r\n        </StyledList>\r\n        <StyledList onClick={() => toggleDateVisibility()} className=\"calendar\">\r\n          <StyledIcon className=\"far fa-clock calendaer\" />\r\n          Date Change\r\n        </StyledList>\r\n        <StyledList\r\n          onClick={(e) =>\r\n            addPriorityForCards(\r\n              e,\r\n              optionCoverData[0].clickedCardId,\r\n              \"optionCover\"\r\n            )\r\n          }\r\n          style={{\r\n            color: `${matchedPriority.length !== 0 ? \"#db4a36\" : \"#FFF\"}`,\r\n          }}\r\n        >\r\n          <StyledIcon\r\n            className=\"fas fa-exclamation-circle\"\r\n            style={{\r\n              color: `${matchedPriority.length !== 0 ? \"#db4a36\" : \"#FFF\"}`,\r\n            }}\r\n          />\r\n          Priority\r\n        </StyledList>\r\n        <StyledList\r\n          onClick={(e) =>\r\n            deleteCard(listId, optionCoverData[0].clickedCardId, \"byButton\")\r\n          }\r\n        >\r\n          <StyledIcon className=\"fas fa-archive\" />\r\n          Archive\r\n        </StyledList>\r\n      </ul>\r\n    </StyledListBlock>\r\n  );\r\n}\r\n\r\nexport default OptionCoverListView;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledReplaceTitle = styled.h3`\r\n  width: 100%;\r\n  position: relative;\r\n  flex-grow: 1;\r\n  text-align: ${(props) => (props.alignCenter ? \"center\" : \"left\")};\r\n  font-size: 1.5rem;\r\n  border-bottom: ${(props) => (props.border ? \"1px solid #aaa\" : \"null\")};\r\n  padding-bottom: 6px;\r\n  color: #555;\r\n  font-weight: 400;\r\n  margin-bottom: ${(props) => (props.biggerMargin ? \"27.5px\" : \"5px\")};\r\n\r\n  & > .fa-times {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 95%;\r\n  background-color: #f5f6f8;\r\n  margin: 0px auto 10px auto;\r\n  padding: 7.5px 5px;\r\n  border-radius: 3px;\r\n  min-height: 75px;\r\n  resize: none;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  box-shadow: 0px 0px 1px 1.5px #aaa;\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledCheckedBox = styled.span`\r\n  position: relative;\r\n  width: 17px;\r\n  height: 17px;\r\n  border-radius: 2px;\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledCheckIcon = styled.span`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 8px;\r\n`;\r\n\r\nconst StyledCheckBoxTitle = styled.span`\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst StyledSuggestList = styled.div`\r\n  width: 100%;\r\n  max-width: 275px;\r\n  word-break: break-all;\r\n  margin: 0 auto;\r\n  margin-bottom: 7px;\r\n  padding: 9px 7.5px;\r\n  font-size: 1.4rem;\r\n  background-color: #f5f6f8;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  color: black;\r\n  transition: 0.1s linear;\r\n  z-index: 9999;\r\n\r\n  &:hover {\r\n    background-color: #e6e8ed;\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: ${(props) => (props.biggerFont ? \"15.5px\" : \"13px\")};\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nfunction CopyCardView({\r\n  changeCopyTextArea,\r\n  copyTextArea,\r\n  matchedColorsToThisCard,\r\n  toggleCanCopyLables,\r\n  canCopyLabels,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  taskTitleList,\r\n  optionCover,\r\n  taskId,\r\n}) {\r\n  return (\r\n    <>\r\n      <StyledReplaceTitle className=\"suggested\">Title</StyledReplaceTitle>\r\n      <StyledTextArea\r\n        className=\"suggested\"\r\n        onChange={(e) => changeCopyTextArea(e)}\r\n        value={copyTextArea}\r\n      />\r\n      <StyledReplaceTitle className=\"suggested\">Keep...</StyledReplaceTitle>\r\n      <StyledCheckedBox\r\n        className=\"suggested\"\r\n        onClick={() => toggleCanCopyLables()}\r\n        style={{\r\n          backgroundColor: `${canCopyLabels ? \"#0079bf\" : \"#fff\"}`,\r\n          border: `${canCopyLabels ? \"2px solid #0079bf\" : \"2px solid #aaa\"}`,\r\n        }}\r\n      >\r\n        <StyledCheckIcon className=\"fas fa-check suggested\" />\r\n      </StyledCheckedBox>\r\n      <StyledCheckBoxTitle className=\"suggested\">\r\n        Labels ({matchedColorsToThisCard.length})\r\n      </StyledCheckBoxTitle>\r\n      <StyledReplaceTitle className=\"suggested\">\r\n        <StyledIcon className=\"fas fa-map-marker\" />\r\n        Copy to...\r\n      </StyledReplaceTitle>\r\n      {wholeList.map((list) => (\r\n        <StyledSuggestList\r\n          className=\"suggested\"\r\n          onClick={() =>\r\n            moveCardToAnotherList(\r\n              copyTextArea,\r\n              taskTitleList,\r\n              taskId,\r\n              list.id,\r\n              optionCover,\r\n              \"copy\",\r\n              canCopyLabels\r\n            )\r\n          }\r\n          key={list.id}\r\n        >\r\n          <StyledIcon biggerFont className=\"fas fa-long-arrow-alt-left\" />\r\n          {list.title}\r\n        </StyledSuggestList>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CopyCardView;\r\n","import React, { Component } from \"react\";\r\nimport CopyCardView from \"../../components/CopyCard/CopyCardView\";\r\n\r\nclass CopyCard extends Component {\r\n  state = {\r\n    copyTextArea: \"\",\r\n    canCopyLabels: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ copyTextArea: this.props.taskTitle });\r\n  }\r\n  changeCopyTextArea = (e) => {\r\n    this.setState({ copyTextArea: e.target.value });\r\n  };\r\n\r\n  toggleCanCopyLables = () => {\r\n    this.setState({\r\n      canCopyLabels: !this.state.canCopyLabels,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      matchedColorsToThisCard,\r\n      wholeList,\r\n      moveCardToAnotherList,\r\n      taskTitleList,\r\n      optionCover,\r\n      taskId,\r\n    } = this.props;\r\n    const { copyTextArea, canCopyLabels } = this.state;\r\n    return (\r\n      <CopyCardView\r\n        changeCopyTextArea={this.changeCopyTextArea}\r\n        copyTextArea={copyTextArea}\r\n        matchedColorsToThisCard={matchedColorsToThisCard}\r\n        toggleCanCopyLables={this.toggleCanCopyLables}\r\n        canCopyLabels={canCopyLabels}\r\n        wholeList={wholeList}\r\n        moveCardToAnotherList={moveCardToAnotherList}\r\n        taskTitleList={taskTitleList}\r\n        optionCover={optionCover}\r\n        taskId={taskId}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CopyCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CopyCard from \"../../Containers/CopyCard/CopyCard\";\r\n\r\nconst StyledChangeListDetails = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-wrap: wrap;\r\n  position: fixed;\r\n  right: ${(props) => (props.rightPosition ? \"-120px\" : \"null\")};\r\n  top: ${(props) => (props.topPosition ? \"0px\" : \"null\")};\r\n  width: 300px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  padding: 10px;\r\n  margin-bottom: 17.5px;\r\n`;\r\n\r\nconst StyledReplaceTitle = styled.h3`\r\n  width: 100%;\r\n  position: relative;\r\n  flex-grow: 1;\r\n  text-align: ${(props) => (props.alignCenter ? \"center\" : \"left\")};\r\n  font-size: 1.5rem;\r\n  border-bottom: ${(props) => (props.border ? \"1px solid #aaa\" : \"null\")};\r\n  padding-bottom: 6px;\r\n  color: #555;\r\n  font-weight: 400;\r\n  margin-bottom: ${(props) => (props.biggerMargin ? \"27.5px\" : \"5px\")};\r\n\r\n  & > .fa-times {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledSuggestList = styled.div`\r\n  width: 100%;\r\n  max-width: 275px;\r\n  word-break: break-all;\r\n  margin: 0 auto;\r\n  margin-bottom: 7px;\r\n  padding: 9px 7.5px;\r\n  font-size: 1.4rem;\r\n  background-color: #f5f6f8;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  color: black;\r\n  transition: 0.1s linear;\r\n  z-index: 9999;\r\n\r\n  &:hover {\r\n    background-color: #e6e8ed;\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: ${(props) => (props.biggerFont ? \"15.5px\" : \"13px\")};\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nfunction MoveToAnotherListBox({\r\n  taskTitle,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  taskId,\r\n  changeListInDetails,\r\n  taskTitleList,\r\n  byElement,\r\n  optionCover,\r\n  copyVisibility,\r\n  matchedColorsToThisCard,\r\n}) {\r\n  return (\r\n    <StyledChangeListDetails\r\n      className=\"replaceCard suggested\"\r\n      rightPosition={optionCover}\r\n      topPosition={optionCover}\r\n    >\r\n      <StyledReplaceTitle border alignCenter biggerMargin className=\"suggested\">\r\n        Replace Card\r\n        <span\r\n          className=\"fas fa-times\"\r\n          onClick={() => changeListInDetails(byElement)}\r\n        ></span>\r\n      </StyledReplaceTitle>\r\n      {copyVisibility ? (\r\n        <CopyCard\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          taskTitle={taskTitle}\r\n          taskTitleList={taskTitleList}\r\n          optionCover={optionCover}\r\n          taskId={taskId}\r\n        />\r\n      ) : (\r\n        <>\r\n          {\" \"}\r\n          <StyledReplaceTitle className=\"suggested\">\r\n            <StyledIcon className=\"fas fa-map-marker\" />\r\n            Suggested\r\n          </StyledReplaceTitle>\r\n          {wholeList.map((list) => (\r\n            <StyledSuggestList\r\n              className=\"suggested\"\r\n              onClick={() =>\r\n                moveCardToAnotherList(\r\n                  taskTitle,\r\n                  taskTitleList,\r\n                  taskId,\r\n                  list.id,\r\n                  optionCover\r\n                )\r\n              }\r\n              key={list.id}\r\n            >\r\n              <StyledIcon biggerFont className=\"fas fa-long-arrow-alt-left\" />\r\n              {list.title.length !== 0 ? list.title : \"No Name List\"}\r\n            </StyledSuggestList>\r\n          ))}\r\n        </>\r\n      )}\r\n    </StyledChangeListDetails>\r\n  );\r\n}\r\n\r\nexport default MoveToAnotherListBox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledBack = styled.span`\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledNameLabels = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: column;\r\n  top: ${(props) => (props.optionCoverPosition ? \"0px\" : \"null\")};\r\n  right: ${(props) => (props.optionCoverPosition ? \"0px\" : \"null\")};\r\n  width: 310px;\r\n  height: 350px;\r\n  transform: ${(props) =>\r\n    props.optionCoverPosition ? \"translate(130px)\" : \"null\"};\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  padding: 5px;\r\n  margin-bottom: 17.5px;\r\n`;\r\n\r\nconst StyledLabelTitle = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #42516e;\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n  margin: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledLabelInput = styled.input`\r\n  width: 95%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 7.5px 5px;\r\n  margin: 15px auto;\r\n  margin-top: ${(props) => (props.marginTop ? \"5px\" : \"15px\")};\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledName = styled.h3`\r\n  margin-left: 7px;\r\n  margin-top: 7px;\r\n`;\r\n\r\nconst StyledWrapColors = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  margin-top: 7px;\r\n`;\r\n\r\nconst StyledColorSquar = styled.div`\r\n  width: 18%;\r\n  height: 40px;\r\n  border-radius: 4px;\r\n  margin-right: 2.5px;\r\n  margin-left: 2.5px;\r\n  margin-bottom: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.85;\r\n  }\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: #5aac44;\r\n  border-radius: 4px;\r\n  margin: 0 auto;\r\n  margin-top: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: #6abc54;\r\n  }\r\n`;\r\n\r\nconst StyledTitle = styled.h4``;\r\n\r\nfunction LabelsNameColors({\r\n  nameLabelVisibility,\r\n  filteredColors,\r\n  detailCover,\r\n  optionCover,\r\n  nameLabelInput,\r\n  nameLabelInputValue,\r\n  choosedSquar,\r\n  saveNameLabel,\r\n  currentSquarEdit,\r\n}) {\r\n  return (\r\n    <StyledNameLabels\r\n      className=\"label\"\r\n      detailCover={detailCover}\r\n      optionCoverPosition={optionCover}\r\n      onKeyPress={(e) => saveNameLabel(e)}\r\n    >\r\n      <StyledLabelTitle className=\"label\">\r\n        <StyledBack\r\n          className=\"fas fa-angle-left label\"\r\n          onClick={(e) => nameLabelVisibility(e, false, null, \"back\")}\r\n        />\r\n        <StyledTitle>Change Label</StyledTitle>\r\n        <StyledX\r\n          className=\"fas fa-times\"\r\n          onClick={(e) => nameLabelVisibility(e, false, null)}\r\n        />\r\n      </StyledLabelTitle>\r\n      <StyledName>Name</StyledName>\r\n      <StyledLabelInput\r\n        className=\"label\"\r\n        marginTop\r\n        onChange={(e) => nameLabelInput(e)}\r\n        value={nameLabelInputValue}\r\n      />\r\n      <StyledName>Colors</StyledName>\r\n      <StyledWrapColors>\r\n        {filteredColors.map((color) => (\r\n          <StyledColorSquar\r\n            style={{\r\n              backgroundColor: `${color.color}`,\r\n              border:\r\n                currentSquarEdit === color.color ? \"1.5px solid black\" : null,\r\n            }}\r\n            className=\"label_colorSquar\"\r\n            key={color.color}\r\n            id={color.color}\r\n            onClick={(e) => choosedSquar(e, color.color)}\r\n          />\r\n        ))}\r\n      </StyledWrapColors>\r\n      <StyledButton className=\"label_saveBtn\" onClick={(e) => saveNameLabel(e)}>\r\n        SAVE\r\n      </StyledButton>\r\n    </StyledNameLabels>\r\n  );\r\n}\r\n\r\nexport default LabelsNameColors;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLabels = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: column;\r\n  top: ${(props) => (props.optionCoverPosition ? \"0px\" : \"null\")};\r\n  right: ${(props) => (props.optionCoverPosition ? \"0px\" : \"null\")};\r\n  width: 310px;\r\n  height: 555px;\r\n  transform: ${(props) =>\r\n    props.optionCoverPosition ? \"translate(130px)\" : \"null\"};\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  padding: 5px;\r\n  margin-bottom: 17.5px;\r\n`;\r\n\r\nconst StyledLabelWrapEle = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledLabelElement = styled.div`\r\n  position: relative;\r\n  width: 80%;\r\n  height: 35px;\r\n  border-radius: 5px;\r\n  margin: 0 10px;\r\n  margin-bottom: 4px;\r\n  list-style: none;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    border-left: 10px solid rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  align-self: center;\r\n  border-radius: 3px;\r\n  margin: 0 auto;\r\n  margin-bottom: 4px;\r\n  padding: 10.5px;\r\n  font-size: 15px;\r\n  color: #aaa;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #eee;\r\n  }\r\n`;\r\n\r\nconst StyledLabelTitle = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #42516e;\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n  margin: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledLabelInput = styled.input`\r\n  width: 95%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 7.5px 5px;\r\n  margin: 15px auto;\r\n  margin-top: ${(props) => (props.marginTop ? \"5px\" : \"15px\")};\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  margin-left: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledBack = styled.span`\r\n  font-size: 15px;\r\n  opacity: 0;\r\n`;\r\n\r\nconst StyledTitle = styled.h4``;\r\n\r\nconst StyledIconCheck = styled.div`\r\n  display: none;\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 17.5px;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 10px;\r\n  color: #fff;\r\n`;\r\n\r\nconst StyledNameSox = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  color: white;\r\n  font-weight: 600;\r\n  font-size: 13px;\r\n`;\r\nfunction LabelsChooseColors({\r\n  detailCover,\r\n  optionCover,\r\n  handleLabelsVisibility,\r\n  filteredColors,\r\n  nameLabelVisibility,\r\n  toggleLabelColorToCard,\r\n  taskId,\r\n  generateCheckIcon,\r\n  searchLabelColor,\r\n  searchInputLabel,\r\n}) {\r\n  useEffect(() => {\r\n    generateCheckIcon();\r\n  });\r\n\r\n  return (\r\n    <StyledLabels\r\n      className=\"label\"\r\n      optionCoverPosition={optionCover}\r\n      detailCover={detailCover}\r\n    >\r\n      <StyledLabelTitle className=\"label\">\r\n        <StyledBack className=\"fas fa-angle-left label\" />\r\n        <StyledTitle>Labels</StyledTitle>\r\n        <StyledX\r\n          className=\"fas fa-times\"\r\n          onClick={() => handleLabelsVisibility(false)}\r\n        />\r\n      </StyledLabelTitle>\r\n      <StyledLabelInput\r\n        placeholder=\"Search Labels...\"\r\n        className=\"label\"\r\n        onChange={(e) => searchLabelColor(e)}\r\n        value={searchInputLabel}\r\n      />\r\n      {filteredColors.map((color) => (\r\n        <StyledLabelWrapEle key={color.color} className=\"label\">\r\n          <StyledLabelElement\r\n            onClick={() => toggleLabelColorToCard(color.color, taskId)}\r\n            style={{ backgroundColor: `${color.color}` }}\r\n            className=\"label\"\r\n            id={color.color}\r\n          >\r\n            <StyledNameSox>{color.value}</StyledNameSox>\r\n            <StyledIconCheck\r\n              className=\"fas fa-check\"\r\n              id={`${color.color}Check`}\r\n            />\r\n          </StyledLabelElement>{\" \"}\r\n          <StyledIcon\r\n            className=\"fas fa-pen label\"\r\n            onClick={(e) => nameLabelVisibility(e, true, color.color, \"edit\")}\r\n          />\r\n        </StyledLabelWrapEle>\r\n      ))}\r\n    </StyledLabels>\r\n  );\r\n}\r\n\r\nexport default LabelsChooseColors;\r\n","import React from \"react\";\r\nimport LabelsNameColors from \"./LabelView/LabelsNameColors\";\r\nimport LabelsChooseColors from \"./LabelView/LabelsChooseColors\";\r\n\r\nfunction LabelsView({\r\n  handleLabelsVisibility,\r\n  detailCover,\r\n  optionCover,\r\n  nameLabelVisibility,\r\n  labelVisibility,\r\n  toggleLabelColorToCard,\r\n  taskId,\r\n  generateCheckIcon,\r\n  searchLabelColor,\r\n  searchInputLabel,\r\n  filteredColors,\r\n  nameLabelInput,\r\n  nameLabelInputValue,\r\n  choosedSquar,\r\n  saveNameLabel,\r\n  currentSquarEdit,\r\n}) {\r\n  return (\r\n    <>\r\n      {labelVisibility ? (\r\n        <LabelsNameColors\r\n          nameLabelVisibility={nameLabelVisibility}\r\n          filteredColors={filteredColors}\r\n          detailCover={detailCover}\r\n          nameLabelInput={nameLabelInput}\r\n          nameLabelInputValue={nameLabelInputValue}\r\n          choosedSquar={choosedSquar}\r\n          saveNameLabel={saveNameLabel}\r\n          currentSquarEdit={currentSquarEdit}\r\n          optionCover={optionCover}\r\n        />\r\n      ) : (\r\n        <LabelsChooseColors\r\n          detailCover={detailCover}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          filteredColors={filteredColors}\r\n          nameLabelVisibility={nameLabelVisibility}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          taskId={taskId}\r\n          generateCheckIcon={generateCheckIcon}\r\n          searchLabelColor={searchLabelColor}\r\n          searchInputLabel={searchInputLabel}\r\n          optionCover={optionCover}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LabelsView;\r\n","import React, { Component } from \"react\";\r\nimport LabelsView from \"../../components/Labels/LabelsView\";\r\n\r\nclass Labels extends Component {\r\n  state = {\r\n    labelVisibility: false,\r\n    searchInputLabel: \"\",\r\n    nameLabelInputValue: \"\",\r\n    currentMatchedColors: \"\",\r\n    currentSquarEdit: \"\",\r\n  };\r\n\r\n  nameLabelVisibility = (e, toggle, colorId, from) => {\r\n    if (from === \"back\") {\r\n      this.setState({\r\n        labelVisibility: toggle,\r\n      });\r\n      return;\r\n    }\r\n    if (colorId === null) {\r\n      this.setState({\r\n        labelVisibility: toggle,\r\n      });\r\n      this.props.handleLabelsVisibility(false);\r\n      return;\r\n    }\r\n    if (from === \"edit\") {\r\n      const isAnyTextAlready = e.target.parentNode.textContent;\r\n      this.setState({\r\n        labelVisibility: toggle,\r\n        currentSquarEdit: colorId,\r\n        currentMatchedColors: colorId,\r\n        nameLabelInputValue: isAnyTextAlready,\r\n      });\r\n    }\r\n  };\r\n\r\n  generateCheckIcon = () => {\r\n    const matchedBadges = this.props.listOfAllBadges.filter(\r\n      (ele) => ele.id === this.props.taskId\r\n    );\r\n    if (matchedBadges.length !== 0) {\r\n      matchedBadges.forEach((element) => {\r\n        const currentCheckIcon = document.getElementById(\r\n          `${element.color}Check`\r\n        );\r\n        if (currentCheckIcon) {\r\n          currentCheckIcon.style.display = \"block\";\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  searchLabelColor = (e) => {\r\n    this.setState({\r\n      searchInputLabel: e.target.value.substr(0, 17),\r\n    });\r\n  };\r\n\r\n  nameLabelInput = (e) => {\r\n    this.setState({\r\n      nameLabelInputValue: e.target.value.substr(0, 17),\r\n    });\r\n  };\r\n\r\n  choosedSquar = (e, colorId) => {\r\n    const allSquars = document.querySelectorAll(\".label_colorSquar\");\r\n    allSquars.forEach((ele) => {\r\n      ele.style.border = \"none\";\r\n    });\r\n    e.target.style.border = \"1.5px solid black\";\r\n\r\n    this.setState({\r\n      currentMatchedColors: colorId,\r\n    });\r\n  };\r\n\r\n  saveNameLabel = (e) => {\r\n    //Zmieniamy wartość name w badges ( renderuje sie nazwa w optionCover i detailCover lables)\r\n    const {\r\n      listOfAllBadges,\r\n      listOfAllTasksId,\r\n      labelColors,\r\n      setLabelColors,\r\n      handleLabelsVisibility,\r\n    } = this.props;\r\n\r\n    if (e.target.className.includes(\"label_saveBtn\") || e.which === 13) {\r\n      const { currentMatchedColors, nameLabelInputValue } = this.state;\r\n\r\n      if (currentMatchedColors.length === 0) return; // Return If color isn't choosed\r\n      const matchedBadges = listOfAllBadges.filter(\r\n        (ele) => ele.color === currentMatchedColors\r\n      );\r\n\r\n      matchedBadges.forEach((ele) => {\r\n        ele.name = nameLabelInputValue;\r\n      });\r\n\r\n      //Od razu pojawia się nazwa labeli w srodku labeli w CARD\r\n      listOfAllTasksId.forEach((ele) => {\r\n        const matchedLabelInCard = document.getElementById(\r\n          `${currentMatchedColors}${ele}`\r\n        );\r\n\r\n        if (matchedLabelInCard) {\r\n          matchedLabelInCard.textContent = nameLabelInputValue;\r\n        }\r\n      });\r\n\r\n      // zmieniamy odgórne labelColors by wszedzie wyswietlalo sie od razu i tak samo przy tworzeniu nowych\r\n      const index = labelColors.findIndex(\r\n        (ele) => ele.color === currentMatchedColors\r\n      );\r\n\r\n      const copyOfLabelColor = [...labelColors];\r\n      copyOfLabelColor.splice(index, 1, {\r\n        color: labelColors[index].color,\r\n        colorName: labelColors[index].colorName,\r\n        value: nameLabelInputValue,\r\n      });\r\n\r\n      //Update\r\n      setLabelColors(copyOfLabelColor);\r\n      this.nameLabelVisibility(false);\r\n      handleLabelsVisibility(false);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      handleLabelsVisibility,\r\n      detailCover,\r\n      optionCover,\r\n      addLabelColor,\r\n      optionCoverData,\r\n      toggleLabelColorToCard,\r\n      taskId,\r\n      labelColors,\r\n    } = this.props;\r\n\r\n    const {\r\n      searchInputLabel,\r\n      labelVisibility,\r\n      nameLabelInputValue,\r\n      currentSquarEdit,\r\n    } = this.state;\r\n\r\n    const copyOfColorsArray = [...labelColors];\r\n    const filteredColors = copyOfColorsArray.filter((ele) =>\r\n      ele.colorName.toUpperCase().includes(searchInputLabel.toUpperCase())\r\n    );\r\n    return (\r\n      <LabelsView\r\n        handleLabelsVisibility={handleLabelsVisibility}\r\n        detailCover={detailCover}\r\n        nameLabelVisibility={this.nameLabelVisibility}\r\n        labelVisibility={labelVisibility}\r\n        addLabelColor={addLabelColor}\r\n        optionCoverData={optionCoverData}\r\n        toggleLabelColorToCard={toggleLabelColorToCard}\r\n        taskId={taskId}\r\n        generateCheckIcon={this.generateCheckIcon}\r\n        searchLabelColor={this.searchLabelColor}\r\n        searchInputLabel={searchInputLabel}\r\n        filteredColors={filteredColors}\r\n        nameLabelInput={this.nameLabelInput}\r\n        nameLabelInputValue={nameLabelInputValue}\r\n        choosedSquar={this.choosedSquar}\r\n        saveNameLabel={this.saveNameLabel}\r\n        currentSquarEdit={currentSquarEdit}\r\n        optionCover={optionCover}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Labels;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledCalendar = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  height: 250px;\r\n  color: white;\r\n`;\r\n\r\nconst StyledCalendarDays = styled.div`\r\n  width: 36px;\r\n  height: 36px;\r\n  margin: 0 3px;\r\n  text-align: center;\r\n  line-height: 36px;\r\n  font-size: 13px;\r\n  font-weight: 600;\r\n  background-color: #fff;\r\n  color: ${(props) => (props.darkerColor ? \"#42516e\" : \"#aaa\")};\r\n  border: 0.5px solid #fff;\r\n  border-radius: 50%;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.bgc ? \"#73829f !important\" : \"#fff\")};\r\n    color: ${(props) => (props.col ? \"#fff !important\" : \"#42516e\")};\r\n    cursor: ${(props) => (props.cur ? \"pointer !important\" : \"inherit\")};\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nfunction Calendar({\r\n  days,\r\n  emptyFields,\r\n  howManyDaysMonth,\r\n  todayDay,\r\n  setThisDayFunc,\r\n}) {\r\n  return (\r\n    <StyledCalendar className=\"calendar\">\r\n      {days.map((ele) => (\r\n        <StyledCalendarDays key={ele} className=\"calendar\">\r\n          {ele}\r\n        </StyledCalendarDays>\r\n      ))}\r\n      {emptyFields.map((ele) => (\r\n        <StyledCalendarDays ele={ele.id} className=\"calendar\" />\r\n      ))}\r\n      {howManyDaysMonth.map((ele) => (\r\n        <>\r\n          <StyledCalendarDays\r\n            key={ele.id}\r\n            bgc\r\n            col\r\n            cur\r\n            darkerColor\r\n            onClick={(e) => setThisDayFunc(e, ele.id)}\r\n            className=\"calendarDays calendar\"\r\n            style={{\r\n              backgroundColor: `${ele.id === todayDay ? \"#42516e\" : \"#fff\"}`,\r\n              color: `${ele.id === todayDay ? \"#fff\" : \"#42516e\"}`,\r\n            }}\r\n          >\r\n            {ele.day}\r\n          </StyledCalendarDays>\r\n        </>\r\n      ))}\r\n    </StyledCalendar>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Calendar from \"./Calendar\";\r\n\r\nconst StyledChangeListDetails = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  align-content: flex-start;\r\n  flex-wrap: wrap;\r\n  position: fixed;\r\n  width: 300px;\r\n  height: 590px;\r\n  top: ${(props) => (props.optionCoverPosition ? \"0px\" : \"null\")};\r\n  right: ${(props) => (props.optionCoverPosition ? \"-120px\" : \"null\")};\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  margin-bottom: 17.5px;\r\n`;\r\n\r\nconst StyledDateTitle = styled.h3`\r\n  width: 100%;\r\n  position: relative;\r\n  flex-grow: 1;\r\n  text-align: center;\r\n  font-size: 1.5rem;\r\n  border-bottom: 1px solid #aaa;\r\n  padding-bottom: 6px;\r\n  color: #555;\r\n  font-weight: 400;\r\n  margin-bottom: 5px;\r\n  padding: 10px;\r\n\r\n  & > .fa-times {\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledText = styled.h2`\r\n  width: 100%;\r\n  text-align: center;\r\n  font-size: ${(props) => (props.biggerFontSize ? \"40px\" : \"25px\")};\r\n  margin-left: 5px;\r\n  margin-bottom: 5px;\r\n  padding: 5px;\r\n  color: white;\r\n`;\r\n\r\nconst StyledDateWrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  background-color: #5aac44;\r\n  padding: 5px 10px;\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin: 0 5px;\r\n  font-size: 45px;\r\n  align-self: center;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst StyledColumnDate = styled.div`\r\n  display: flex;\r\n  flex-grow: 1;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 40%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 7.5px 5px;\r\n  margin: 10px auto;\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: ${(props) => (props.redButton ? \"#CF513D\" : \"#5aac44\")};\r\n  border-radius: 4px;\r\n  margin: 10px auto;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n  align-self: center;\r\n\r\n  &:hover {\r\n    opacity: 0.85;\r\n  }\r\n`;\r\n\r\nconst StyledWrapDateInputs = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  width: 50%;\r\n`;\r\n\r\nconst StyledDateInput = styled.input`\r\n  width: 25%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  text-align: center;\r\n  border-radius: 3px;\r\n  padding: 5px 2.5px;\r\n  margin: 5px;\r\n  transition: 0.1s linear;\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf !important;\r\n  }\r\n`;\r\n\r\nconst StyledTitle = styled.h3`\r\n  width: 100%;\r\n  text-align: center;\r\n  font-size: 13px;\r\n  color: #888;\r\n`;\r\n\r\nconst StyledWarnSpan = styled.span`\r\n  width: 100%;\r\n  text-align: center;\r\n  margin: 2.5px 0;\r\n  color: #fff;\r\n`;\r\n\r\nfunction DatePickerView({\r\n  toggleDateVisibility,\r\n  todayDay,\r\n  todayMonth,\r\n  todayYear,\r\n  todayMonthName,\r\n  hour,\r\n  minutes,\r\n  days,\r\n  toggleMonths,\r\n  emptyFields,\r\n  howManyDaysMonth,\r\n  choosedDateFunction,\r\n  choosedTimeFunction,\r\n  setThisDataFunctiion,\r\n  setThisDayFunc,\r\n  optionCover,\r\n}) {\r\n  return (\r\n    <StyledChangeListDetails\r\n      optionCoverPosition={optionCover}\r\n      className=\"calendar\"\r\n    >\r\n      <StyledDateTitle className=\"calendar\">\r\n        Change Date{\" \"}\r\n        <span className=\"fas fa-times\" onClick={() => toggleDateVisibility()} />\r\n      </StyledDateTitle>\r\n      <StyledDateWrap className=\"calendar\">\r\n        <StyledIcon\r\n          className=\"fas fa-caret-left calendar\"\r\n          onClick={() => toggleMonths(\"Minus\")}\r\n        />\r\n        <StyledColumnDate className=\"calendar\">\r\n          <StyledText className=\"calendar\">{todayMonthName}</StyledText>\r\n          <StyledText biggerFontSize className=\"calendar\">\r\n            {todayDay}\r\n          </StyledText>\r\n          <StyledText className=\"calendar\">{todayYear}</StyledText>\r\n        </StyledColumnDate>\r\n\r\n        <StyledIcon\r\n          className=\"fas fa-caret-right calendar\"\r\n          onClick={() => toggleMonths(\"Add\")}\r\n        />\r\n      </StyledDateWrap>\r\n      <Calendar\r\n        days={days}\r\n        todayDay={todayDay}\r\n        emptyFields={emptyFields}\r\n        howManyDaysMonth={howManyDaysMonth}\r\n        setThisDayFunc={setThisDayFunc}\r\n        className=\"calendar\"\r\n      />\r\n      <StyledWrapDateInputs className=\"calendar\">\r\n        <StyledTitle className=\"calendar\">Date</StyledTitle>\r\n        <StyledDateInput\r\n          value={todayDay}\r\n          onChange={(e) => choosedDateFunction(e)}\r\n          name=\"todayDay\"\r\n          className=\"calendar dayInput\"\r\n        />\r\n        <StyledDateInput\r\n          value={todayMonth}\r\n          onChange={(e) => choosedDateFunction(e)}\r\n          name=\"todayMonth\"\r\n          className=\"calendar monthInput\"\r\n        />\r\n        <StyledDateInput\r\n          value={todayYear}\r\n          onChange={(e) => choosedDateFunction(e)}\r\n          name=\"todayYear\"\r\n          className=\"calendar yearInput\"\r\n        />\r\n        <StyledWarnSpan className=\"calendar warnSpanDate\">\r\n          e.g 21.9.2020\r\n        </StyledWarnSpan>\r\n      </StyledWrapDateInputs>\r\n\r\n      <StyledWrapDateInputs className=\"calendar\">\r\n        <StyledTitle className=\"calendar\">Time</StyledTitle>\r\n        <StyledDateInput\r\n          value={hour}\r\n          onChange={(e) => choosedTimeFunction(e)}\r\n          className=\"calendar hourInput\"\r\n          name=\"hour\"\r\n        />\r\n        <StyledDateInput\r\n          value={minutes}\r\n          onChange={(e) => choosedTimeFunction(e)}\r\n          className=\"calendar minutesInput\"\r\n          name=\"minutes\"\r\n        />\r\n        <StyledWarnSpan className=\"calendar warnSpanTime\">\r\n          e.g 06:45\r\n        </StyledWarnSpan>\r\n      </StyledWrapDateInputs>\r\n\r\n      <StyledButton\r\n        onClick={() => setThisDataFunctiion(\"save\")}\r\n        className=\"calendar\"\r\n      >\r\n        SAVE\r\n      </StyledButton>\r\n      <StyledButton\r\n        onClick={() => setThisDataFunctiion(\"delete\")}\r\n        redButton\r\n        className=\"calendar\"\r\n      >\r\n        DELETE\r\n      </StyledButton>\r\n    </StyledChangeListDetails>\r\n  );\r\n}\r\n\r\nexport default DatePickerView;\r\n","import React, { Component } from \"react\";\r\nimport DatePickerView from \"../../components/DatePicker/DatePickerView\";\r\n\r\nclass DatePicker extends Component {\r\n  state = {\r\n    time: \"\",\r\n    hour: \"\",\r\n    minutes: \"\",\r\n    todayFullDate: \"\",\r\n    todayWeekDay: \"\",\r\n    todayDay: \"\",\r\n    todayMonthName: \"\",\r\n    todayMonth: \"\",\r\n    todayYear: \"\",\r\n    days: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\r\n    months: [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ],\r\n    updateFlag: false,\r\n    action: \"\",\r\n    preventMonthLenghtFlag: true,\r\n    displayingMonthLength: \"\",\r\n    blankPlace: \"\",\r\n    emptyFilter: [],\r\n    contentFilter: [],\r\n    backMonthLenght: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    //Calculate with module which day will be FirstDay on INITIAL month\r\n    const date = new Date();\r\n    const counterModulo = (date.getDate() % 7) - 1;\r\n    const firstOfMonth = this.state.days.slice(\r\n      date.getDay() - counterModulo - 1\r\n    );\r\n\r\n    //Set INITIAL date ( current date ) in input\r\n    const todayFull = `${\r\n      date.getDate() <= 9 ? \"0\" + date.getDate() : date.getDate()\r\n    }.${\r\n      date.getMonth() + 1 <= 9\r\n        ? \"0\" + (date.getMonth() + 1)\r\n        : date.getMonth() + 1\r\n    }.${date.getFullYear()}`;\r\n\r\n    //Set INITIAL time ( current time ) in input\r\n    const hours = `${\r\n      date.getHours() <= 9 ? \"0\" + date.getHours() : date.getHours()\r\n    }`;\r\n    const minutes = `${\r\n      date.getMinutes() <= 9 ? \"0\" + date.getMinutes() : date.getMinutes()\r\n    }`;\r\n\r\n    //Call generate\r\n    this.generateOtherMonth(\r\n      firstOfMonth,\r\n      this.state.months[date.getMonth()],\r\n      date.getFullYear()\r\n    );\r\n    //INITIAL data for date\r\n    this.setState({\r\n      time: `${hours}:${minutes}`,\r\n      hour: hours,\r\n      minutes: minutes,\r\n      todayDay: date.getDate(),\r\n      todayMonthName: this.state.months[date.getMonth()],\r\n      todayMonth: date.getMonth() + 1,\r\n      todayYear: date.getFullYear(),\r\n      todayWeekDay: date.getDay(),\r\n      firstOfMonth: firstOfMonth,\r\n      todayFullDate: todayFull,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {\r\n      days,\r\n      todayDay,\r\n      todayMonth,\r\n      todayYear,\r\n      months,\r\n      updateFlag,\r\n      action,\r\n      displayingMonthLength,\r\n      backMonthLenght,\r\n      blankPlace,\r\n    } = this.state;\r\n\r\n    const todayWithZero = `${todayDay <= 9 ? \"0\" + todayDay : todayDay}`;\r\n    const monthWithZero = `${todayMonth <= 9 ? \"0\" + todayMonth : todayMonth}`;\r\n\r\n    //Update date ( month and year)\r\n    if (updateFlag && action === \"Add\") {\r\n      //Calculate which day will be FirstDay on next Month\r\n      const nextMonthFromDay = 7 - (42 - displayingMonthLength);\r\n      const nextMonthDay = days.slice(nextMonthFromDay);\r\n      const nextMonthDayArr = [];\r\n      nextMonthDayArr.push(nextMonthDay[0]);\r\n      if (todayMonth > 12) {\r\n        //Generate Call for Next Month and Year,send to state new date\r\n        this.generateOtherMonth(nextMonthDayArr, months[0], todayYear + 1);\r\n        this.setState({\r\n          todayDay: todayDay,\r\n          todayMonthName: months[0],\r\n          todayMonth: 1,\r\n          todayYear: todayYear + 1,\r\n          updateFlag: false,\r\n          preventMonthLenghtFlag: true,\r\n          firstOfMonth: nextMonthDayArr,\r\n          todayFullDate: `${todayWithZero}.${\"0\" + 1}.${todayYear + 1}`, //Input udating with every back/next click\r\n        });\r\n        return;\r\n      }\r\n      //Generate Call for Next Month, send to state new date\r\n      this.generateOtherMonth(\r\n        nextMonthDayArr,\r\n        months[todayMonth - 1],\r\n        todayYear\r\n      );\r\n      this.setState({\r\n        todayDay: todayDay,\r\n        todayMonthName: months[todayMonth - 1],\r\n        todayMonth: todayMonth,\r\n        todayYear: todayYear,\r\n        updateFlag: false,\r\n        preventMonthLenghtFlag: true,\r\n        firstOfMonth: nextMonthDayArr,\r\n        todayFullDate: `${todayWithZero}.${monthWithZero}.${todayYear}`,\r\n      });\r\n    } else if (updateFlag && action === \"Minus\") {\r\n      const blankInPrevMonthInEnd = 7 - blankPlace;\r\n      const firstDayOfPrevMonth =\r\n        35 - (backMonthLenght + blankInPrevMonthInEnd);\r\n      const nextMonthDayArr = days.slice(firstDayOfPrevMonth);\r\n      if (todayMonth < 1) {\r\n        //Generate Call for Back Month and Year, send to state new date\r\n        this.generateOtherMonth(nextMonthDayArr, months[11], todayYear - 1);\r\n        this.setState({\r\n          todayDay: todayDay,\r\n          todayMonthName: months[11],\r\n          todayMonth: 12,\r\n          todayYear: todayYear - 1,\r\n          updateFlag: false,\r\n          preventMonthLenghtFlag: true,\r\n          firstOfMonth: nextMonthDayArr,\r\n          todayFullDate: `${todayWithZero}.${12}.${todayYear - 1}`,\r\n        });\r\n        return;\r\n      }\r\n      //Generate Call for Back Month, send to state new date\r\n      this.generateOtherMonth(\r\n        nextMonthDayArr,\r\n        months[todayMonth - 1],\r\n        todayYear\r\n      );\r\n      this.setState({\r\n        todayDay: todayDay,\r\n        todayMonthName: months[todayMonth - 1],\r\n        todayMonth: todayMonth,\r\n        todayYear: todayYear,\r\n        updateFlag: false,\r\n        preventMonthLenghtFlag: true,\r\n        firstOfMonth: nextMonthDayArr,\r\n        todayFullDate: `${todayWithZero}.${monthWithZero}.${todayYear}`,\r\n      });\r\n    }\r\n  }\r\n\r\n  generateOtherMonth = (firstOfMonth, todayMonthName, todayYear) => {\r\n    const displayingMonthLength = [];\r\n    let stepBackMonthLength = \"\";\r\n    if (firstOfMonth) {\r\n      //Empty - how many EMPTY SQUAR we need AGAINST back or next calendaer/month\r\n      const empty = this.state.days.findIndex((ele) => ele === firstOfMonth[0]);\r\n      //Calculate backMonthLenght, when we BACK calendar, calucalte prevMonthLenght when we NEXT calendar\r\n      if (\r\n        todayMonthName === \"January\" ||\r\n        todayMonthName === \"March\" ||\r\n        todayMonthName === \"May\" ||\r\n        todayMonthName === \"July\" ||\r\n        todayMonthName === \"August\" ||\r\n        todayMonthName === \"October\" ||\r\n        todayMonthName === \"December\"\r\n      ) {\r\n        for (let i = 1; i < 32; i++) {\r\n          displayingMonthLength.push({ day: i, id: i });\r\n        }\r\n        if (todayMonthName === \"August\" || todayMonthName === \"January\") {\r\n          stepBackMonthLength = 31;\r\n        } else if (todayMonthName === \"March\" && todayYear % 4 === 0) {\r\n          stepBackMonthLength = 29;\r\n        } else if (todayMonthName === \"March\" && todayYear % 4 !== 0) {\r\n          stepBackMonthLength = 28;\r\n        } else {\r\n          stepBackMonthLength = 30;\r\n        }\r\n      } else if (todayMonthName === \"February\" && todayYear % 4 === 0) {\r\n        for (let i = 1; i < 30; i++) {\r\n          displayingMonthLength.push({ day: i, id: i });\r\n        }\r\n        stepBackMonthLength = 31;\r\n      } else if (todayMonthName === \"February\" && todayYear % 4 !== 0) {\r\n        for (let i = 1; i < 29; i++) {\r\n          displayingMonthLength.push({ day: i, id: i });\r\n        }\r\n        stepBackMonthLength = 31;\r\n      } else {\r\n        for (let i = 1; i < 31; i++) {\r\n          displayingMonthLength.push({ day: i, id: i });\r\n        }\r\n        stepBackMonthLength = 31;\r\n      }\r\n\r\n      for (let i = 0; empty > i; i++) {\r\n        displayingMonthLength.unshift({ day: \"\", id: `blank${i}` });\r\n      }\r\n\r\n      //Filtering seperately emptyFields before first day of Month, and\r\n      // proper days with number content inside\r\n      const emptyFilter = displayingMonthLength.filter(\r\n        (ele) => ele.day.length === 0\r\n      );\r\n      const mappingArrayWithContent = displayingMonthLength.filter(\r\n        (ele) => ele.day.length !== 0\r\n      );\r\n\r\n      //Send every made informations to STATE, so during componentUpdate we can use it (when back or next calendar)\r\n      this.setState({\r\n        displayingMonthLength: displayingMonthLength.length,\r\n        blankPlace: empty,\r\n        emptyFilter: emptyFilter,\r\n        contentFilter: mappingArrayWithContent,\r\n        backMonthLenght: stepBackMonthLength,\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleMonths = (whichWay) => {\r\n    //Back or Next month for toggle months and years\r\n    if (whichWay === \"Add\") {\r\n      this.setState({\r\n        todayMonth: this.state.todayMonth + 1,\r\n        updateFlag: true,\r\n        action: whichWay,\r\n      });\r\n    }\r\n\r\n    if (whichWay === \"Minus\") {\r\n      this.setState({\r\n        todayMonth: this.state.todayMonth - 1,\r\n        updateFlag: true,\r\n        action: whichWay,\r\n      });\r\n    }\r\n  };\r\n\r\n  choosedDateFunction = (e) => {\r\n    //Input onChange function for date\r\n    this.setState({\r\n      [e.target.name]: e.target.value.substr(0, 4),\r\n    });\r\n  };\r\n\r\n  choosedTimeFunction = (e) => {\r\n    //Input onChange function for time\r\n    this.setState({\r\n      [e.target.name]: e.target.value.substr(0, 2),\r\n    });\r\n  };\r\n\r\n  setThisDayFunc = (e, thisDay) => {\r\n    //Set proper style for clicked Day and set proper date in input\r\n    const calendarDays = document.querySelectorAll(\".calendarDays\");\r\n    calendarDays.forEach((ele) => {\r\n      ele.style.backgroundColor = \"#fff\";\r\n      ele.style.color = \"#42516e\";\r\n      ele.style.fontSize = \"13px\";\r\n    });\r\n    e.target.style.backgroundColor = \"#42516e\";\r\n    e.target.style.color = \"#fff\";\r\n    e.target.style.fontSize = \"16px\";\r\n\r\n    const day = `${thisDay <= 9 ? \"0\" + thisDay : thisDay}`;\r\n    const month = `${\r\n      this.state.todayMonth <= 9\r\n        ? \"0\" + this.state.todayMonth\r\n        : this.state.todayMonth\r\n    }`;\r\n    const year = this.state.todayYear;\r\n\r\n    this.setState({\r\n      todayFullDate: `${day}.${month}.${year}`,\r\n      todayDay: thisDay,\r\n    });\r\n  };\r\n\r\n  setThisDataFunctiion = (buttonType) => {\r\n    //Send choosed date to main function and currentCard object, after validation by patter RegEx\r\n    const patternDay = /^([1-9]|[12][0-9]|3[01])$/;\r\n    const patternMonth = /^([1-9]|1[012])$/;\r\n    const patternYear = /^(19|20)\\d\\d$/;\r\n    const patternHour = /^([0-1][0-9]|[2][0-4])$/;\r\n    const patternMinutes = /^([0-5][0-9])$/;\r\n\r\n    const {\r\n      todayFullDate,\r\n      todayDay: toD,\r\n      todayMonth: toM,\r\n      todayYear: toY,\r\n      hour,\r\n      minutes,\r\n    } = this.state;\r\n    if (\r\n      patternDay.test(toD) &&\r\n      patternMonth.test(toM) &&\r\n      patternYear.test(toY) &&\r\n      patternHour.test(hour) &&\r\n      patternMinutes.test(minutes)\r\n    ) {\r\n      const currDate = new Date();\r\n      const currD = currDate.getDate();\r\n      const currM = currDate.getMonth() + 1;\r\n      const currY = currDate.getFullYear();\r\n      const currH = currDate.getHours();\r\n      const currMin = currDate.getMinutes();\r\n      const shorcutMonth = this.state.months[toM - 1];\r\n\r\n      if (\r\n        (toD === currD + 3 && currM === toM && currY === toY) ||\r\n        (toD === currD + 2 && currM === toM && currY === toY)\r\n      ) {\r\n        return this.props.toggleTermToCard(\r\n          this.props.taskId,\r\n          todayFullDate,\r\n          toD,\r\n          toM,\r\n          toY,\r\n          shorcutMonth,\r\n          hour,\r\n          minutes,\r\n          \"Soon\",\r\n          \"#E6C60D\",\r\n          \"#fff\",\r\n          buttonType\r\n        );\r\n      }\r\n      if (toD === currD + 1 && currM === toM && currY === toY) {\r\n        return this.props.toggleTermToCard(\r\n          this.props.taskId,\r\n          todayFullDate,\r\n          \"Tomorrow\",\r\n          toM,\r\n          toY,\r\n          shorcutMonth,\r\n          hour,\r\n          minutes,\r\n          \"Soon\",\r\n          \"#E6C60D\",\r\n          \"#fff\",\r\n          buttonType\r\n        );\r\n      } else if (\r\n        toD === currD &&\r\n        currM === toM &&\r\n        currY === toY &&\r\n        currH <= hour &&\r\n        currMin <= minutes\r\n      ) {\r\n        return this.props.toggleTermToCard(\r\n          this.props.taskId,\r\n          todayFullDate,\r\n          \"Today\",\r\n          toM,\r\n          toY,\r\n          shorcutMonth,\r\n          hour,\r\n          minutes,\r\n          \"Soon\",\r\n          \"#E6C60D\",\r\n          \"#fff\",\r\n          buttonType\r\n        );\r\n      } else if (\r\n        (currD <= toD &&\r\n          currM <= toM &&\r\n          currY <= toY &&\r\n          currH <= hour &&\r\n          currMin <= minutes) ||\r\n        (currD > toD && currM < toM && currY <= toY) ||\r\n        currY < toY\r\n      ) {\r\n        return this.props.toggleTermToCard(\r\n          this.props.taskId,\r\n          todayFullDate,\r\n          toD,\r\n          toM,\r\n          toY,\r\n          shorcutMonth,\r\n          hour,\r\n          minutes,\r\n          \"\",\r\n          \"#888\",\r\n          \"#fff\",\r\n          buttonType\r\n        );\r\n      } else {\r\n        return this.props.toggleTermToCard(\r\n          this.props.taskId,\r\n          todayFullDate,\r\n          toD,\r\n          toM,\r\n          toY,\r\n          shorcutMonth,\r\n          hour,\r\n          minutes,\r\n          \"Overdue\",\r\n          \"#EB5A46\",\r\n          \"#fff\",\r\n          buttonType\r\n        );\r\n      }\r\n    } else {\r\n      if (!patternDay.test(toD)) {\r\n        document.querySelector(\".dayInput\").style.boxShadow =\r\n          \"0px 0px 1px 1.5px #f55\";\r\n      } else {\r\n        document.querySelector(\".dayInput\").style.boxShadow =\r\n          \"0px 0px 1px 1.5px #ccc\";\r\n      }\r\n\r\n      if (!patternMonth.test(toM)) {\r\n        document.querySelector(\".monthInput\").style.boxShadow =\r\n          \"0px 0px 1px 1.5px #f55\";\r\n      } else {\r\n        document.querySelector(\".monthInput\").style.boxShadow =\r\n          \"0px 0px 1px 1.5px #ccc\";\r\n      }\r\n\r\n      if (!patternYear.test(toY)) {\r\n        document.querySelector(\".yearInput\").style.boxShadow =\r\n          \"0px 0px 1px 1.5px #f55\";\r\n      } else {\r\n        document.querySelector(\".yearInput\").style.boxShadow =\r\n          \"0px 0px 1px 1.5px #ccc\";\r\n      }\r\n\r\n      if (!patternHour.test(hour)) {\r\n        document.querySelector(\".hourInput\").style.boxShadow =\r\n          \"0px 0px 1px 1.5px #f55\";\r\n      } else {\r\n        document.querySelector(\".hourInput\").style.boxShadow =\r\n          \"0px 0px 1px 1.5px #ccc\";\r\n      }\r\n\r\n      if (!patternMinutes.test(minutes)) {\r\n        document.querySelector(\".minutesInput\").style.boxShadow =\r\n          \"0px 0px 1px 1.5px #f55\";\r\n      } else {\r\n        document.querySelector(\".minutesInput\").style.boxShadow =\r\n          \"0px 0px 1px 1.5px #ccc\";\r\n      }\r\n\r\n      if (\r\n        !patternDay.test(toD) ||\r\n        !patternMonth.test(toM) ||\r\n        !patternYear.test(toY)\r\n      ) {\r\n        document.querySelector(\".warnSpanDate\").style.color = \"#f55\";\r\n      } else if (\r\n        patternDay.test(toD) &&\r\n        patternMonth.test(toM) &&\r\n        patternYear.test(toY)\r\n      ) {\r\n        document.querySelector(\".warnSpanDate\").style.color = \"#fff\";\r\n      }\r\n\r\n      if (!patternHour.test(hour) || !patternMinutes.test(minutes)) {\r\n        document.querySelector(\".warnSpanTime\").style.color = \"#f55\";\r\n      } else if (patternHour.test(hour) && patternMinutes.test(minutes)) {\r\n        document.querySelector(\".warnSpanTime\").style.color = \"#fff\";\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { toggleDateVisibility, optionCover } = this.props;\r\n    const {\r\n      hour,\r\n      minutes,\r\n      days,\r\n      todayDay,\r\n      todayMonth,\r\n      todayYear,\r\n      todayMonthName,\r\n    } = this.state;\r\n\r\n    return (\r\n      <DatePickerView\r\n        toggleDateVisibility={toggleDateVisibility}\r\n        hour={hour}\r\n        minutes={minutes}\r\n        days={days}\r\n        todayDay={todayDay}\r\n        todayYear={todayYear}\r\n        todayMonth={todayMonth}\r\n        todayMonthName={todayMonthName}\r\n        toggleMonths={this.toggleMonths}\r\n        choosedDateFunction={this.choosedDateFunction}\r\n        choosedTimeFunction={this.choosedTimeFunction}\r\n        setThisDataFunctiion={this.setThisDataFunctiion}\r\n        emptyFields={this.state.emptyFilter}\r\n        howManyDaysMonth={this.state.contentFilter}\r\n        setThisDayFunc={this.setThisDayFunc}\r\n        optionCover={optionCover}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatePicker;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport OptionCoverListView from \"./OptionCoverListView/OptionCoverListView\";\r\nimport MoveToAnotherListBox from \"../MoveToAnotherList/MoveToAnotherListBox\";\r\nimport Labels from \"../../Containers/Labels/Labels\";\r\nimport DatePicker from \"../../Containers/DatePicker/DatePicker\";\r\nimport TaskPreviewCard from \"../TasksList/TasksPreviewInCard/TaskPreviewInCard\";\r\n\r\nconst StyledCover = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.65);\r\n  z-index: 0;\r\n  overflow-x: scroll;\r\n  background-attachment: fixed;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n\r\n  &::-webkit-scrollbar {\r\n    height: 20px;\r\n    position: relative;\r\n    z-index: 999;\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    background: rgba(0, 0, 0, 1);\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background: rgba(45, 45, 45, 1);\r\n    border-radius: 10px;\r\n    height: 10px;\r\n  }\r\n  &::-webkit-scrollbar-thumb:hover {\r\n    background: rgba(55, 55, 55, 1);\r\n  }\r\n`;\r\n\r\nconst StyledOptionBox = styled.div`\r\n  position: relative;\r\n  transform: translate(0, -50%);\r\n  height: 400px;\r\n  width: 450px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  z-index: 999;\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 260px;\r\n  min-height: 70px;\r\n  padding: 0px 7.5px;\r\n  font-size: 14px;\r\n  color: #172b4d;\r\n  resize: none;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 0px;\r\n  }\r\n`;\r\n\r\nconst StyledSaveButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: #5aac44;\r\n  border-radius: 4px;\r\n  margin-top: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: #6abc54;\r\n  }\r\n`;\r\n\r\nconst StyledWrapLabels = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 260px;\r\n  min-height: 10px;\r\n  padding: 5px 5px 0px 5px;\r\n  border-top-left-radius: 5px;\r\n  border-top-right-radius: 5px;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst StyledWrapTextAndLabels = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 260px;\r\n  align-self: flex-start;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: 13px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledDate = styled.span`\r\n  text-align: center;\r\n  align-self: flex-start;\r\n  padding: 5px 7.5px;\r\n  background-color: rgba(255, 255, 255, 0.85);\r\n  border-bottom-left-radius: 5px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst StyledWrapTerms = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 260px;\r\n  min-height: 25px;\r\n  border-bottom-left-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n  background-color: #fff;\r\n  color: #777;\r\n`;\r\n\r\nconst OptionCover = ({\r\n  optionCoverData,\r\n  taskTitleFeature,\r\n  taskTitle,\r\n  updateCard,\r\n  deleteCard,\r\n  handleLabelsVisibility,\r\n  labelsVisibility,\r\n  toggleLabelColorToCard,\r\n  listOfAllBadges,\r\n  matchedColorsToThisCard,\r\n  listOfAllTasksId,\r\n  labelColors,\r\n  setLabelColors,\r\n  addPriorityForCards,\r\n  toggleDetailMove,\r\n  changeListInDetails,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  matchedPriority,\r\n  copyVisibility,\r\n  dateVisibility,\r\n  toggleDateVisibility,\r\n  toggleTermToCard,\r\n  matchedTerms,\r\n  unActiveTasks,\r\n  totalTasks,\r\n}) => {\r\n  return (\r\n    <StyledCover className=\"coverOption\">\r\n      <StyledOptionBox className=\"cover_box\">\r\n        <StyledWrapTextAndLabels>\r\n          <StyledWrapLabels className=\"coverOption_wrapLabel\">\r\n            {matchedColorsToThisCard.map((ele) => (\r\n              <div\r\n                key={ele.color}\r\n                id={`${ele.labelId}OptionCover`}\r\n                className={`labelElement`}\r\n                style={{ backgroundColor: ele.color }}\r\n              >\r\n                {ele.name}\r\n              </div>\r\n            ))}\r\n          </StyledWrapLabels>\r\n          <StyledTextArea\r\n            className=\"textArea_Option\"\r\n            onChange={(e) => taskTitleFeature(e)}\r\n            onKeyPress={(e) =>\r\n              updateCard(\r\n                e,\r\n                taskTitle,\r\n                optionCoverData[0].listId,\r\n                optionCoverData[0].clickedCardId\r\n              )\r\n            }\r\n            value={taskTitle}\r\n          />\r\n          <StyledWrapTerms>\r\n            {matchedTerms.map((ele) => (\r\n              <StyledDate\r\n                key={ele.id}\r\n                className={ele.classN}\r\n                style={{\r\n                  backgroundColor: ele.statusColor,\r\n                  color: ele.fontColor,\r\n                }}\r\n              >\r\n                <StyledIcon className=\"far fa-clock\" />\r\n                {`${ele.day} ${ele.monthName} ${ele.status}`}\r\n              </StyledDate>\r\n            ))}\r\n            <TaskPreviewCard\r\n              unActiveTasks={unActiveTasks}\r\n              totalTasks={totalTasks}\r\n            />\r\n          </StyledWrapTerms>\r\n          <StyledSaveButton\r\n            className=\"cover_saveBtn\"\r\n            onClick={(e) =>\r\n              updateCard(\r\n                e,\r\n                taskTitle,\r\n                optionCoverData[0].listId,\r\n                optionCoverData[0].clickedCardId\r\n              )\r\n            }\r\n          >\r\n            Save\r\n          </StyledSaveButton>\r\n        </StyledWrapTextAndLabels>\r\n        <OptionCoverListView\r\n          deleteCard={deleteCard}\r\n          taskTitle={taskTitle}\r\n          listId={optionCoverData[0].listId}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          optionCoverData={optionCoverData}\r\n          addPriorityForCards={addPriorityForCards}\r\n          changeListInDetails={changeListInDetails}\r\n          matchedPriority={matchedPriority}\r\n          dateVisibility={dateVisibility}\r\n          toggleDateVisibility={toggleDateVisibility}\r\n        />\r\n\r\n        {labelsVisibility ? (\r\n          <Labels\r\n            handleLabelsVisibility={handleLabelsVisibility}\r\n            optionCoverData={optionCoverData}\r\n            toggleLabelColorToCard={toggleLabelColorToCard}\r\n            taskId={optionCoverData[0].clickedCardId}\r\n            listOfAllBadges={listOfAllBadges}\r\n            listOfAllTasksId={listOfAllTasksId}\r\n            labelColors={labelColors}\r\n            setLabelColors={setLabelColors}\r\n            optionCover={true}\r\n          />\r\n        ) : null}\r\n        {toggleDetailMove ? (\r\n          <MoveToAnotherListBox\r\n            taskTitle={taskTitle}\r\n            wholeList={wholeList}\r\n            moveCardToAnotherList={moveCardToAnotherList}\r\n            taskId={optionCoverData[0].clickedCardId}\r\n            changeListInDetails={changeListInDetails}\r\n            taskTitleList={optionCoverData[0].currentListName}\r\n            byElement={\"byOptionMove\"}\r\n            optionCover={true}\r\n            copyVisibility={copyVisibility}\r\n            matchedColorsToThisCard={matchedColorsToThisCard}\r\n          />\r\n        ) : null}\r\n        {dateVisibility ? (\r\n          <DatePicker\r\n            toggleDateVisibility={toggleDateVisibility}\r\n            taskId={optionCoverData[0].clickedCardId}\r\n            toggleTermToCard={toggleTermToCard}\r\n            optionCover={true}\r\n          />\r\n        ) : null}\r\n      </StyledOptionBox>\r\n    </StyledCover>\r\n  );\r\n};\r\n\r\nexport default OptionCover;\r\n","import React, { Component } from \"react\";\r\nimport OptionCoverView from \"../../components/OptionCover/OptionCoverView\";\r\n\r\nclass OptionCover extends Component {\r\n  state = {\r\n    taskTitle: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setOptionCoverPostion(this.props.optionCoverData);\r\n    this.setState({\r\n      taskTitle: this.props.optionCoverData[0].taskTitle.taskName,\r\n    });\r\n  }\r\n\r\n  setOptionCoverPostion = (taskData) => {\r\n    const mainOffsetTop = document.querySelector(\".main\").offsetTop;\r\n    const coverBox = document.querySelector(\".cover_box\");\r\n    const coverBoxHeight = coverBox.offsetHeight;\r\n    const scrollPosition = Math.floor(\r\n      document.querySelector(\".main\").scrollLeft\r\n    );\r\n\r\n    const currentList = document.getElementById(`list${taskData[0].listId}`);\r\n    const currentListScrollNow = currentList.scrollTop;\r\n\r\n    //ListIndex, when list is moving to another place\r\n    const listIndex = taskData[0].wholeList.findIndex(\r\n      (element) => element.id === taskData[0].listId\r\n    );\r\n\r\n    const positionY =\r\n      mainOffsetTop +\r\n      taskData[0].top -\r\n      currentListScrollNow +\r\n      coverBoxHeight / 1.65;\r\n    const positionX = 285 * listIndex + 18.5 - scrollPosition;\r\n\r\n    //Top and Left BOX Position Calculate\r\n    coverBox.style.top = `${positionY}px`;\r\n    coverBox.style.left = `${positionX}px`;\r\n  };\r\n\r\n  taskTitleFeature = (e) => {\r\n    this.setState({ taskTitle: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      optionCoverData,\r\n      updateCard,\r\n      deleteCard,\r\n      handleLabelsVisibility,\r\n      labelsVisibility,\r\n      toggleLabelColorToCard,\r\n      listOfAllBadges,\r\n      listOfAllTasksId,\r\n      labelColors,\r\n      setLabelColors,\r\n      addPriorityForCards,\r\n      toggleDetailMove,\r\n      changeListInDetails,\r\n      wholeList,\r\n      moveCardToAnotherList,\r\n      listOfAllPriorityTasks,\r\n      copyVisibility,\r\n      dateVisibility,\r\n      toggleDateVisibility,\r\n      toggleTermToCard,\r\n      listOfAllTerms,\r\n      listOfAllTasksList,\r\n    } = this.props;\r\n\r\n    const { taskTitle } = this.state;\r\n\r\n    const copyOfallBadges = [...listOfAllBadges];\r\n\r\n    const matchedColorsToThisCard = copyOfallBadges.filter(\r\n      (ele) => ele.id === optionCoverData[0].clickedCardId\r\n    );\r\n\r\n    const copyOfAllPriority = [...listOfAllPriorityTasks];\r\n    const matchedPriority = copyOfAllPriority.filter(\r\n      (ele) => ele === optionCoverData[0].clickedCardId\r\n    );\r\n\r\n    const copyOfAllTerms = [...listOfAllTerms];\r\n    const matchedTerms = copyOfAllTerms.filter(\r\n      (ele) => ele.id === optionCoverData[0].clickedCardId\r\n    );\r\n\r\n    const copyOfAllTasksList = [...listOfAllTasksList];\r\n    const matchedTasksList = copyOfAllTasksList.filter(\r\n      (ele) => ele.id === optionCoverData[0].clickedCardId\r\n    );\r\n\r\n    let unActiveTasks = 0;\r\n    let totalTasks = 0;\r\n\r\n    matchedTasksList.forEach((ele) => {\r\n      totalTasks += ele.totalOfSubTasks;\r\n      unActiveTasks += ele.unActiveSubtasks;\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <OptionCoverView\r\n          optionCoverData={optionCoverData}\r\n          taskTitleFeature={this.taskTitleFeature}\r\n          taskTitle={taskTitle}\r\n          updateCard={updateCard}\r\n          deleteCard={deleteCard}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          labelsVisibility={labelsVisibility}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          addPriorityForCards={addPriorityForCards}\r\n          toggleDetailMove={toggleDetailMove}\r\n          changeListInDetails={changeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          matchedPriority={matchedPriority}\r\n          copyVisibility={copyVisibility}\r\n          dateVisibility={dateVisibility}\r\n          toggleDateVisibility={toggleDateVisibility}\r\n          toggleTermToCard={toggleTermToCard}\r\n          matchedTerms={matchedTerms}\r\n          listOfAllTasksList={listOfAllTasksList}\r\n          unActiveTasks={unActiveTasks}\r\n          totalTasks={totalTasks}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OptionCover;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTaskName = styled.input`\r\n  width: calc(100% - 50px);\r\n  background-color: #f4f5f7;\r\n  border-radius: 1px;\r\n  padding: 5px 4px;\r\n  font-size: 1.8rem;\r\n  font-weight: 600;\r\n  color: #172b4d;\r\n\r\n  &:focus {\r\n    background-color: white;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nfunction Detail_Input({\r\n  taskTitle,\r\n  taskTitleFeature,\r\n  updateCard,\r\n  idUpdatedList,\r\n  taskId,\r\n}) {\r\n  return (\r\n    <>\r\n      <StyledTaskName\r\n        className=\"input\"\r\n        value={taskTitle}\r\n        onChange={(e) => taskTitleFeature(e)}\r\n      />\r\n      <span\r\n        className=\"fas fa-times close\"\r\n        onClick={(e) => updateCard(e, taskTitle, idUpdatedList, taskId)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Detail_Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MoveToAnotherListBox from \"../../../MoveToAnotherList/MoveToAnotherListBox\";\r\n\r\nconst StyledLightText = styled.h3`\r\n  margin-top: 7.5px;\r\n  font-weight: 400;\r\n  font-size: 1.4rem;\r\n  color: #172b4d;\r\n`;\r\n\r\nconst StyledStrongText = styled.strong`\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction DetailSuggestedElement({\r\n  changeListInDetails,\r\n  taskTitleList,\r\n  taskTitle,\r\n  visibilityChangeListInDetails,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  taskId,\r\n}) {\r\n  return (\r\n    <StyledLightText className=\"suggested\">\r\n      On the list{\" \"}\r\n      <StyledStrongText\r\n        onClick={() => changeListInDetails(\"byListName\")}\r\n        className=\"suggested\"\r\n      >\r\n        {taskTitleList.length !== 0 ? taskTitleList : \"No Name List\"}\r\n      </StyledStrongText>\r\n      {visibilityChangeListInDetails ? (\r\n        <MoveToAnotherListBox\r\n          taskTitle={taskTitle}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          taskId={taskId}\r\n          changeListInDetails={changeListInDetails}\r\n          taskTitleList={taskTitleList}\r\n          byElement=\"byListName\"\r\n        />\r\n      ) : null}\r\n    </StyledLightText>\r\n  );\r\n}\r\n\r\nexport default DetailSuggestedElement;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledNameTask = styled.div`\r\n  display: flex;\r\n  align-content: flex-start;\r\n  align-items: flex-start;\r\n  flex-wrap: wrap;\r\n  position: fixed;\r\n  width: 300px;\r\n  height: 200px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst StyledReplaceTitle = styled.h3`\r\n  width: 100%;\r\n  position: relative;\r\n  flex-grow: 1;\r\n  text-align: center;\r\n  font-size: 1.5rem;\r\n  border-bottom: 1px solid #aaa;\r\n  padding-bottom: 6px;\r\n  color: #555;\r\n  font-weight: 400;\r\n\r\n  & > .fa-times {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledLabelInput = styled.input`\r\n  width: 95%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 7.5px 5px;\r\n  margin: 0px auto;\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledTitle = styled.h3`\r\n  width: 95%;\r\n  padding: 7.5px 5px;\r\n  color: #888;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: #5aac44;\r\n  border-radius: 4px;\r\n  margin: 0 auto;\r\n  margin-top: 25px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: #6abc54;\r\n  }\r\n`;\r\n\r\nfunction TasksListView({ changeTasksListTitle, tasksListTitle, addTasksList }) {\r\n  return (\r\n    <StyledNameTask className=\"tasksList\">\r\n      <StyledReplaceTitle className=\"tasksList\">\r\n        Add tasks list\r\n        <span className=\"fas fa-times\" />\r\n      </StyledReplaceTitle>\r\n      <StyledTitle className=\"tasksList\">Title</StyledTitle>\r\n      <StyledLabelInput\r\n        className=\"tasksList\"\r\n        onChange={(e) => changeTasksListTitle(e)}\r\n        value={tasksListTitle}\r\n      />\r\n      <StyledButton onClick={() => addTasksList()}>ADD</StyledButton>\r\n    </StyledNameTask>\r\n  );\r\n}\r\n\r\nexport default TasksListView;\r\n","import React, { Component } from \"react\";\r\nimport TasksListView from \"../../components/TasksList/TasksListView\";\r\n\r\nclass TasksList extends Component {\r\n  state = {\r\n    tasksListTitle: \"Tasks List\",\r\n  };\r\n\r\n  changeTasksListTitle = (e) => {\r\n    this.setState({\r\n      tasksListTitle: e.target.value,\r\n    });\r\n  };\r\n\r\n  addTasksList = () => {\r\n    const copyOfListTasks = this.props.listOfAllTasksList;\r\n    const taskAlreadyExist = copyOfListTasks.filter(\r\n      (ele) =>\r\n        ele.id === this.props.taskId &&\r\n        ele.listName === this.state.tasksListTitle\r\n    );\r\n    if (taskAlreadyExist.length !== 0 || this.state.tasksListTitle === \"\")\r\n      return;\r\n    this.props.setListOfTasksList([\r\n      ...this.props.listOfAllTasksList,\r\n      {\r\n        id: this.props.taskId,\r\n        listName: this.state.tasksListTitle,\r\n        subTasksList: [],\r\n        activeSubtasks: 0,\r\n        unActiveSubtasks: 0,\r\n        totalOfSubTasks: 0,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  render() {\r\n    const { tasksListTitle } = this.state;\r\n    return (\r\n      <TasksListView\r\n        changeTasksListTitle={this.changeTasksListTitle}\r\n        tasksListTitle={tasksListTitle}\r\n        addTasksList={this.addTasksList}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TasksList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Labels from \"../../../../Containers/Labels/Labels\";\r\nimport MoveToAnotherListBox from \"../../../MoveToAnotherList/MoveToAnotherListBox\";\r\nimport DatePicker from \"../../../../Containers/DatePicker/DatePicker\";\r\nimport TasksList from \"../../../../Containers/TasksList/TasksList\";\r\nimport { device } from \"../../../../Style/MediaQuery/mq\";\r\n\r\nconst StyledDetailNav = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 300px;\r\n  @media ${device.laptop} {\r\n    width: 200px;\r\n  }\r\n`;\r\n\r\nconst StyledDetailUl = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  @media ${device.laptop} {\r\n    flex-direction: column;\r\n    width: 200px;\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: 13px;\r\n  color: #42516e;\r\n  pointer-events: none;\r\n`;\r\n\r\nconst StyledDetailList = styled.li`\r\n  width: ${(props) => (props.first ? \"100%\" : \"45%\")};\r\n  background-color: ${(props) => (props.first ? \"transparent\" : \"#eaecf0\")};\r\n  border-radius: ${(props) => (props.first ? \"null\" : \"3px\")};\r\n  padding: 7.5px;\r\n  margin-right: ${(props) => (props.first ? \"0px\" : \"10px\")};\r\n  margin-bottom: ${(props) => (props.first ? \"5px\" : \"10px\")};\r\n  list-style: none;\r\n  font-size: 14px;\r\n  color: #42516e;\r\n  cursor: ${(props) => (props.first ? \"initial\" : \"pointer\")};\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.first ? \"transparent\" : \"#dadce0\")};\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nfunction DetailCoverNav({\r\n  handleLabelsVisibility,\r\n  labelsVisibility,\r\n  deleteCard,\r\n  idUpdatedList,\r\n  taskId,\r\n  addPriorityForCards,\r\n  changeListInDetails,\r\n  toggleDetailMove,\r\n  taskTitle,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  taskTitleList,\r\n  matchedPriority,\r\n  copyVisibility,\r\n  matchedColorsToThisCard,\r\n  toggleDateVisibility,\r\n  dateVisibility,\r\n  toggleLabelColorToCard,\r\n  listOfAllBadges,\r\n  listOfAllTasksId,\r\n  labelColors,\r\n  setLabelColors,\r\n  toggleTermToCard,\r\n  setTasksListVisibility,\r\n  tasksListVisibility,\r\n  setListOfTasksList,\r\n  listOfAllTasksList,\r\n}) {\r\n  return (\r\n    <StyledDetailNav>\r\n      <StyledDetailUl>\r\n        <StyledDetailList first> ADD TO CARD</StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={() => handleLabelsVisibility(!labelsVisibility)}\r\n          className=\"label\"\r\n        >\r\n          <StyledIcon className=\"fas fa-tag label\" />\r\n          Edit labels\r\n        </StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={() => setTasksListVisibility(!tasksListVisibility)}\r\n          className=\"tasksList\"\r\n        >\r\n          <StyledIcon className=\"fas fa-list-alt tasksList\" />\r\n          Tasks list\r\n        </StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={() => toggleDateVisibility()}\r\n          className=\"calendar\"\r\n        >\r\n          <StyledIcon className=\"far fa-clock calendar\" />\r\n          Term\r\n        </StyledDetailList>\r\n        <StyledDetailList>\r\n          <StyledIcon className=\"far fa-image\" />\r\n          Cover\r\n        </StyledDetailList>\r\n      </StyledDetailUl>\r\n      <StyledDetailUl>\r\n        <StyledDetailList first> ACTIONS</StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={() => changeListInDetails(\"byNavMove\")}\r\n          className=\"suggested\"\r\n        >\r\n          <StyledIcon className=\"fas fa-long-arrow-alt-right suggested\" />\r\n          Move\r\n        </StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={() => changeListInDetails(\"byNavCopy\")}\r\n          className=\"suggested\"\r\n        >\r\n          <StyledIcon className=\"far fa-clipboard suggested\" />\r\n          Copy\r\n        </StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={(e) => addPriorityForCards(e, taskId, \"detailCover\")}\r\n          style={{\r\n            color: `${matchedPriority.length !== 0 ? \"#db4a36\" : \"#42516e\"}`,\r\n          }}\r\n        >\r\n          <StyledIcon\r\n            className=\"fas fa-exclamation-circle suggested\"\r\n            style={{\r\n              color: `${matchedPriority.length !== 0 ? \"#db4a36\" : \"#42516e\"}`,\r\n            }}\r\n          />\r\n          Priority\r\n        </StyledDetailList>\r\n        <StyledDetailList\r\n          className=\"delete\"\r\n          onClick={(e) => deleteCard(idUpdatedList, taskId, \"byButton\")}\r\n        >\r\n          <StyledIcon className=\"fas fa-archive suggested\" />\r\n          Archive\r\n        </StyledDetailList>\r\n      </StyledDetailUl>\r\n      {labelsVisibility ? (\r\n        <Labels\r\n          detailCover={true}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          taskId={taskId}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n        />\r\n      ) : null}\r\n      {toggleDetailMove ? (\r\n        <MoveToAnotherListBox\r\n          taskTitle={taskTitle}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          taskId={taskId}\r\n          changeListInDetails={changeListInDetails}\r\n          taskTitleList={taskTitleList}\r\n          byElement=\"byNavMove\"\r\n          copyVisibility={copyVisibility}\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n        />\r\n      ) : null}\r\n      {dateVisibility ? (\r\n        <DatePicker\r\n          toggleDateVisibility={toggleDateVisibility}\r\n          toggleTermToCard={toggleTermToCard}\r\n          taskId={taskId}\r\n        />\r\n      ) : null}\r\n      {tasksListVisibility ? (\r\n        <TasksList\r\n          setListOfTasksList={setListOfTasksList}\r\n          listOfAllTasksList={listOfAllTasksList}\r\n          taskId={taskId}\r\n        />\r\n      ) : null}\r\n    </StyledDetailNav>\r\n  );\r\n}\r\n\r\nexport default DetailCoverNav;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledOptionWindow = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  right: 0;\r\n  width: 300px;\r\n  height: 140px;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst StyledTitle = styled.h3`\r\n  width: 100%;\r\n  border-bottom: 1px solid #42516e;\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n  margin: 10px 7.5px 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  position: fixed;\r\n  transform: translateY(10px);\r\n  right: 15px;\r\n  font-size: 14px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledWrapList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  list-style: none;\r\n`;\r\n\r\nconst StyledListElement = styled.li`\r\n  width: 100%;\r\n  padding: 10px 7.5px;\r\n  margin-bottom: 7.5px;\r\n  font-size: 14px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #eaecf0;\r\n  }\r\n`;\r\n\r\nfunction SubtasksOptionView({ subTaskToCard, subTaskDelete }) {\r\n  return (\r\n    <StyledOptionWindow>\r\n      <StyledTitle>Subtasks options</StyledTitle>\r\n      <StyledX className=\"fas fa-times\" />\r\n      <StyledWrapList>\r\n        <StyledListElement onClick={() => subTaskToCard()}>\r\n          Make card from it\r\n        </StyledListElement>\r\n        <StyledListElement onClick={() => subTaskDelete()}>\r\n          Delete\r\n        </StyledListElement>\r\n      </StyledWrapList>\r\n    </StyledOptionWindow>\r\n  );\r\n}\r\n\r\nexport default SubtasksOptionView;\r\n","import React, { Component } from \"react\";\r\nimport SubtasksOptionView from \"../../../components/TasksList/SubtasksOptionView/SubtasksOptionView\";\r\n// import PropTypes from 'prop-types'\r\n\r\nclass SubtasksOption extends Component {\r\n  subTaskToCard = () => {\r\n    this.props.addNewCard(\r\n      this.props.idUpdatedList,\r\n      this.props.subTaskNameOptionClicked\r\n    );\r\n\r\n    this.subTaskDelete();\r\n  };\r\n\r\n  subTaskDelete = () => {\r\n    //Find current displaying tasksList\r\n    const matchedTasksList = this.props.listOfAllTasksList.filter(\r\n      (ele) =>\r\n        ele.id === this.props.taskId && ele.listName === this.props.listName\r\n    );\r\n\r\n    //Find proper tasks in above list, which is clicked\r\n    const subTaskIndex = matchedTasksList[0].subTasksList.findIndex(\r\n      (ele) => ele.name === this.props.subTaskNameOptionClicked\r\n    );\r\n\r\n    const subTaskClicked = matchedTasksList[0].subTasksList.filter(\r\n      (ele) => ele.name === this.props.subTaskNameOptionClicked\r\n    );\r\n\r\n    //Delete it\r\n    matchedTasksList[0].subTasksList.splice(subTaskIndex, 1);\r\n\r\n    //Updated active and total number of subTasks in current list\r\n    if (subTaskClicked[0].active) {\r\n      matchedTasksList[0].activeSubtasks -= 1;\r\n    } else {\r\n      matchedTasksList[0].unActiveSubtasks -= 1;\r\n    }\r\n\r\n    matchedTasksList[0].totalOfSubTasks -= 1;\r\n\r\n    this.props.subTaskOptionsVisiToggle(\"\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SubtasksOptionView\r\n        subTaskToCard={this.subTaskToCard}\r\n        subTaskDelete={this.subTaskDelete}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubtasksOption;\r\n","import React from \"react\";\r\nimport SubtasksOption from \"../../../Containers/TasksList/SubtasksOption/SubtasksOption\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledWrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  margin-bottom: 15px;\r\n  padding: 0 2.5px;\r\n`;\r\n\r\nconst StyledListTitle = styled.h3`\r\n  flex-grow: 1;\r\n  align-self: center;\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledBarWrap = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledTasksList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  /* max-height: 160px;\r\n  overflow-y: scroll;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 5px;\r\n  }\r\n  &::-webkit-scrollbar-track {\r\n    background: rgba(0, 0, 0, 0);\r\n  } */\r\n`;\r\n\r\nconst StyledGreyButton = styled.button`\r\n  width: 150px;\r\n  height: 32.5px;\r\n  padding: 5px;\r\n  margin-top: ${(props) => (props.marginTop0 ? \"0px\" : \"15px\")};\r\n  margin-bottom: 10px;\r\n  background-color: #eaecf0;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #dadce0;\r\n  }\r\n`;\r\n\r\nconst StyledPerecntage = styled.h3`\r\n  width: 35px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledBarContainer = styled.span`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 10px;\r\n  background-color: #ddd;\r\n  border: 0.5px solid #bbb;\r\n  border-radius: 5px;\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst StyledBarInner = styled.span`\r\n  position: absolute;\r\n  border-radius: 5px;\r\n  transition: 0.2s linear;\r\n  height: 100%;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 90%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 7.5px 5px;\r\n  margin: 15px 0px 10px;\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 120px;\r\n  height: 32.5px;\r\n  background-color: #5aac44;\r\n  border-radius: 4px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: #6abc54;\r\n  }\r\n`;\r\n\r\nconst StyledSubTaskWrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  width: 95%;\r\n  padding: 7.5px;\r\n  margin: 5px auto;\r\n  color: #42516e;\r\n  &:hover {\r\n    background-color: #eaecf0;\r\n  }\r\n`;\r\n\r\nconst StyledCheckedBox = styled.span`\r\n  position: relative;\r\n  align-self: center;\r\n  width: 17px;\r\n  height: 17px;\r\n  border-radius: 2px;\r\n  margin-right: 10px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  background-color: red;\r\n`;\r\n\r\nconst StyledCheckIcon = styled.span`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 8px;\r\n`;\r\n\r\nconst StyledSubTaskName = styled.h3`\r\n  width: 250px;\r\n  word-break: break-all;\r\n  flex-grow: 1;\r\n  align-self: center;\r\n  font-size: 13px;\r\n`;\r\n\r\nconst StyledWarnningSpan = styled.span`\r\n  width: 100%;\r\n  opacity: 0;\r\n  color: red;\r\n  font-size: 10px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst StyledEllipsis = styled.span`\r\n  align-self: center;\r\n`;\r\n\r\nfunction TasksListInDetailCoverView({\r\n  listName,\r\n  taskId,\r\n  subTasksList,\r\n  subTaskToggle,\r\n  subTaskToggleVisi,\r\n  subTaskInupChange,\r\n  subTaskInputValue,\r\n  addSubTaskFunc,\r\n  makeThisTaskDone,\r\n  unActiveSubtasks,\r\n  totalOfSubTasks,\r\n  deleteTasksList,\r\n  subTaskOptionsVisiToggle,\r\n  subTaskOptionsVisi,\r\n  addNewCard,\r\n  idUpdatedList,\r\n  listOfAllTasksList,\r\n  subTaskNameOptionClicked,\r\n}) {\r\n  return (\r\n    <StyledWrap>\r\n      <StyledListTitle>{listName}</StyledListTitle>\r\n      <StyledGreyButton\r\n        marginTop0\r\n        onClick={() => deleteTasksList(listName, taskId)}\r\n      >\r\n        Delete\r\n      </StyledGreyButton>\r\n      <StyledBarWrap>\r\n        <StyledPerecntage>\r\n          {totalOfSubTasks === 0\r\n            ? \"0%\"\r\n            : `${Math.floor(\r\n                (unActiveSubtasks /\r\n                  `${totalOfSubTasks === 0 ? 1 : totalOfSubTasks}`) *\r\n                  100\r\n              )}%`}\r\n        </StyledPerecntage>\r\n        <StyledBarContainer>\r\n          <StyledBarInner\r\n            style={{\r\n              width: `${\r\n                (unActiveSubtasks /\r\n                  `${totalOfSubTasks === 0 ? 1 : totalOfSubTasks}`) *\r\n                100\r\n              }%`,\r\n              backgroundColor: `${\r\n                unActiveSubtasks === totalOfSubTasks ? \"#5aac44\" : \"#5ba4cf\"\r\n              }`,\r\n            }}\r\n          />\r\n        </StyledBarContainer>\r\n      </StyledBarWrap>\r\n      <StyledTasksList>\r\n        {subTasksList.map((ele) => (\r\n          <StyledSubTaskWrap key={ele.id}>\r\n            <StyledCheckedBox\r\n              style={{\r\n                backgroundColor: `${ele.active ? \"#fff\" : \"#0079bf\"}`,\r\n                border: `${\r\n                  ele.active ? \"2px solid #ccc\" : \"2px solid #0079bf\"\r\n                }`,\r\n              }}\r\n              onClick={() => makeThisTaskDone(ele.id, ele.active)}\r\n            >\r\n              <StyledCheckIcon className=\"fas fa-check\" />\r\n            </StyledCheckedBox>\r\n            <StyledSubTaskName\r\n              style={{\r\n                textDecoration: `${ele.active ? \"initial\" : \"line-through\"}`,\r\n              }}\r\n            >\r\n              {ele.name}\r\n            </StyledSubTaskName>\r\n            <StyledEllipsis\r\n              className=\"fas fa-ellipsis-h\"\r\n              onClick={() => subTaskOptionsVisiToggle(ele.name)}\r\n            />\r\n          </StyledSubTaskWrap>\r\n        ))}\r\n        {subTaskOptionsVisi ? (\r\n          <SubtasksOption\r\n            subTaskNameOptionClicked={subTaskNameOptionClicked}\r\n            subTaskOptionsVisiToggle={subTaskOptionsVisiToggle}\r\n            listOfAllTasksList={listOfAllTasksList}\r\n            listName={listName}\r\n            taskId={taskId}\r\n            addNewCard={addNewCard}\r\n            idUpdatedList={idUpdatedList}\r\n          />\r\n        ) : null}\r\n      </StyledTasksList>\r\n      {subTaskToggleVisi ? (\r\n        <>\r\n          <StyledInput\r\n            onChange={(e) => subTaskInupChange(e)}\r\n            value={subTaskInputValue}\r\n          />\r\n          <StyledButton onClick={() => addSubTaskFunc()}>\r\n            Add SubTask\r\n          </StyledButton>\r\n          <StyledWarnningSpan className=\"subTaskWarnSpan\">\r\n            You can't add the same or blank subTasks\r\n          </StyledWarnningSpan>\r\n        </>\r\n      ) : (\r\n        <StyledGreyButton onClick={() => subTaskToggle()}>\r\n          Add Element\r\n        </StyledGreyButton>\r\n      )}\r\n    </StyledWrap>\r\n  );\r\n}\r\n\r\nexport default TasksListInDetailCoverView;\r\n","import React, { Component } from \"react\";\r\nimport TasksListInDetailCoverView from \"../../../components/TasksList/TasksListInDetailCoverView/TasksListInDetailCoverView\";\r\n\r\nclass TasksListInDetailCover extends Component {\r\n  state = {\r\n    subTaskToggleVisi: false,\r\n    subTaskNameOptionClicked: \"\",\r\n    subTaskInputValue: \"\",\r\n    toggleForUpdate: false,\r\n    subTaskOptionsVisi: false,\r\n  };\r\n\r\n  subTaskToggle = () => {\r\n    //Handler for input and btn visibility\r\n    this.setState({\r\n      subTaskToggleVisi: true,\r\n    });\r\n  };\r\n\r\n  subTaskInupChange = (e) => {\r\n    //Handler for input onChange\r\n    this.setState({\r\n      subTaskInputValue: e.target.value,\r\n    });\r\n  };\r\n\r\n  addSubTaskFunc = () => {\r\n    const copyOfListTasks = this.props.listOfAllTasksList;\r\n    const matchedList = copyOfListTasks.filter(\r\n      (ele) =>\r\n        ele.id === this.props.taskId && ele.listName === this.props.listName\r\n    );\r\n\r\n    const subTaskAlreadyExist = matchedList[0].subTasksList.filter(\r\n      (ele) => ele.name === this.state.subTaskInputValue\r\n    );\r\n\r\n    //If subTask already exist or this is blank subTask\r\n    if (\r\n      subTaskAlreadyExist.length !== 0 ||\r\n      this.state.subTaskInputValue === \"\"\r\n    ) {\r\n      const warnningSpan = document.querySelector(\".subTaskWarnSpan\");\r\n      warnningSpan.style.opacity = 1;\r\n      this.setState({\r\n        subTaskInputValue: \"\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    //If subTask is right composed just add it to the list of subtask in this card and correct tasksList\r\n    matchedList[0].subTasksList.push({\r\n      id: `${this.props.taskId}${this.state.subTaskInputValue}`,\r\n      name: this.state.subTaskInputValue,\r\n      active: true,\r\n    });\r\n\r\n    //Updated data about subtask on this card and current tasksList\r\n    matchedList[0].activeSubtasks += 1;\r\n    matchedList[0].totalOfSubTasks += 1;\r\n    //This is for refresh page durring add or checking subTask\r\n    this.props.setTasksListVisibility(!this.props.tasksListVisibility);\r\n    this.setState({\r\n      subTaskToggleVisi: false,\r\n      subTaskInputValue: \"\",\r\n    });\r\n  };\r\n\r\n  deleteTasksList = (listName, taskId) => {\r\n    //Find proper tasksList in array of all TasksList\r\n    const copyOfTasksList = this.props.listOfAllTasksList;\r\n    const matchedTasksListIndex = copyOfTasksList.findIndex(\r\n      (ele) => ele.id === taskId && ele.listName === listName\r\n    );\r\n    //Delete it\r\n    this.props.listOfAllTasksList.splice(matchedTasksListIndex, 1);\r\n    //Refresh it\r\n    this.props.setTasksListVisibility(!this.props.tasksListVisibility);\r\n  };\r\n\r\n  makeThisTaskDone = (subTaskId, subTaskActive) => {\r\n    //Finding data about current tasksList and proper subTasks\r\n    const copyOfTasksList = this.props.listOfAllTasksList;\r\n    const matchedTasksList = copyOfTasksList.filter(\r\n      (ele) =>\r\n        ele.id === this.props.taskId && ele.listName === this.props.listName\r\n    );\r\n\r\n    const matchedSubTaskList = matchedTasksList[0].subTasksList.filter(\r\n      (ele) => ele.id === subTaskId\r\n    );\r\n\r\n    matchedSubTaskList[0].active = !subTaskActive;\r\n\r\n    //Updated data about active and unactive subtask\r\n    if (subTaskActive) {\r\n      matchedTasksList[0].activeSubtasks -= 1;\r\n      matchedTasksList[0].unActiveSubtasks += 1;\r\n    } else {\r\n      matchedTasksList[0].activeSubtasks += 1;\r\n      matchedTasksList[0].unActiveSubtasks -= 1;\r\n    }\r\n    //This is for refresh page durring add or checking subTask\r\n    this.props.setTasksListVisibility(!this.props.tasksListVisibility);\r\n    this.setState({\r\n      subTaskToggleVisi: false,\r\n      subTaskInputValue: \"\",\r\n    });\r\n  };\r\n\r\n  subTaskOptionsVisiToggle = (subTaskName) => {\r\n    this.props.setTasksListVisibility(!this.props.tasksListVisibility);\r\n    this.setState({\r\n      subTaskOptionsVisi: !this.state.subTaskOptionsVisi,\r\n      subTaskNameOptionClicked: subTaskName,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      listName,\r\n      taskId,\r\n      subTasksList,\r\n      unActiveSubtasks,\r\n      totalOfSubTasks,\r\n      addNewCard,\r\n      idUpdatedList,\r\n      listOfAllTasksList,\r\n    } = this.props;\r\n\r\n    const {\r\n      subTaskToggleVisi,\r\n      subTaskInputValue,\r\n      subTaskOptionsVisi,\r\n      subTaskNameOptionClicked,\r\n    } = this.state;\r\n    return (\r\n      <TasksListInDetailCoverView\r\n        listName={listName}\r\n        taskId={taskId}\r\n        subTasksList={subTasksList}\r\n        subTaskToggleVisi={subTaskToggleVisi}\r\n        subTaskInputValue={subTaskInputValue}\r\n        subTaskToggle={this.subTaskToggle}\r\n        subTaskInupChange={this.subTaskInupChange}\r\n        addSubTaskFunc={this.addSubTaskFunc}\r\n        makeThisTaskDone={this.makeThisTaskDone}\r\n        unActiveSubtasks={unActiveSubtasks}\r\n        totalOfSubTasks={totalOfSubTasks}\r\n        deleteTasksList={this.deleteTasksList}\r\n        subTaskOptionsVisiToggle={this.subTaskOptionsVisiToggle}\r\n        subTaskOptionsVisi={subTaskOptionsVisi}\r\n        addNewCard={addNewCard}\r\n        idUpdatedList={idUpdatedList}\r\n        listOfAllTasksList={listOfAllTasksList}\r\n        subTaskNameOptionClicked={subTaskNameOptionClicked}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TasksListInDetailCover;\r\n","import React from \"react\";\r\nimport TasksListInDetailCover from \"../../../../Containers/TasksList/TasksListInDetailCover/TasksListInDetailCover\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledDetailMarks = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst StyledDetailDescription = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledTitle = styled.h2`\r\n  width: 100%;\r\n  color: #42516e;\r\n  margin-bottom: 20px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 90%;\r\n  background-color: #eaecf0;\r\n  margin: 0px auto 10px auto;\r\n  padding: 7.5px 5px;\r\n  border-radius: 3px;\r\n  min-height: 75px;\r\n  resize: none;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  margin-left: ${(props) => (props.marginLeft ? \"6\" : \"none\")};\r\n  font-size: ${(props) => (props.biggerSize ? \"23px\" : \"17px\")};\r\n  color: #42516e;\r\n  cursor: ${(props) => (props.pointer ? \"pointer\" : \"initial\")};\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst StyledLabelsWrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledPlaceholder = styled.h3`\r\n  text-align: center;\r\n  color: #172b4d;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: ${(props) => (props.greyBgc ? \"#EAECF0\" : \"#5aac44\")};\r\n  border-radius: 4px;\r\n  margin-right: 6px;\r\n  color: ${(props) => (props.marginLeft ? \"#42516e\" : \"#fff\")};\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.hoverBgc ? \"#dadce0 \" : \"#6abc54\")};\r\n  }\r\n`;\r\n\r\nconst StyledCommentOptionWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst StyledComment = styled.h3`\r\n  width: 300px;\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n  margin-right: 10px;\r\n  word-break: break-all;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledTermWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledTerm = styled.h3`\r\n  background-color: #eaecf0;\r\n  border-radius: 4px;\r\n  padding: 7.5px 10px;\r\n  letter-spacing: 1px;\r\n  font-weight: 400;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #dadce0;\r\n  }\r\n`;\r\n\r\nconst StyledStatus = styled.span`\r\n  padding: 2.5px 5px;\r\n  margin: 0 3px;\r\n  border-radius: 3px;\r\n  color: #fff;\r\n`;\r\n\r\nconst StyledCheckedBox = styled.span`\r\n  position: relative;\r\n  width: 17px;\r\n  height: 17px;\r\n  border-radius: 2px;\r\n  margin-right: 7px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledCheckIcon = styled.span`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 8px;\r\n`;\r\n\r\nfunction DetailCoverMarks({\r\n  matchedColorsToThisCard,\r\n  handleLabelsVisibility,\r\n  labelsVisibility,\r\n  toggleCommentFeature,\r\n  toggleCommentVisibility,\r\n  commentChange,\r\n  commentValue,\r\n  addCommentToCard,\r\n  taskId,\r\n  listOfAllComments,\r\n  editCommentToCard,\r\n  matchedTerms,\r\n  toggleDateVisibility,\r\n  termDoneCheckbox,\r\n  matchedListTasks,\r\n  listOfAllTasksList,\r\n  tasksListVisibility,\r\n  setTasksListVisibility,\r\n  addNewCard,\r\n  idUpdatedList,\r\n}) {\r\n  return (\r\n    <StyledDetailMarks>\r\n      <div>\r\n        <StyledTitle marginTop>\r\n          <StyledIcon className=\"fas fa-tag\" />\r\n          Labels\r\n        </StyledTitle>\r\n        {matchedColorsToThisCard.length === 0 ? (\r\n          <StyledPlaceholder>This card have no labels yet</StyledPlaceholder>\r\n        ) : (\r\n          <StyledLabelsWrap className=\"detailCover_labelsWrap\">\r\n            {matchedColorsToThisCard.map((ele) => (\r\n              <div\r\n                key={ele.color}\r\n                id={`${ele.labelId}DetailCover`}\r\n                className={`labelElement_DetailCover`}\r\n                style={{\r\n                  backgroundColor: ele.color,\r\n                  margin: \"0px 5px 5px 0px\",\r\n                }}\r\n                onClick={() => handleLabelsVisibility(!labelsVisibility)}\r\n              >\r\n                {ele.name}\r\n              </div>\r\n            ))}\r\n          </StyledLabelsWrap>\r\n        )}\r\n      </div>\r\n      <StyledTitle marginTop>\r\n        <StyledIcon className=\"far fa-clock\" />\r\n        Terms\r\n      </StyledTitle>\r\n      {matchedTerms.length === 0 ? (\r\n        <StyledPlaceholder>This card has no deadline yet</StyledPlaceholder>\r\n      ) : (\r\n        <>\r\n          {matchedTerms.map((ele) => (\r\n            <StyledTermWrap key={ele.term} className=\"calendar\">\r\n              <StyledCheckedBox\r\n                onClick={() => termDoneCheckbox(taskId)}\r\n                style={{\r\n                  backgroundColor: `${\r\n                    ele.status === \"Done\" ? \"#0079BF\" : \"white\"\r\n                  }`,\r\n                  border: `${\r\n                    ele.status === \"Done\"\r\n                      ? \"2px solid #0079BF\"\r\n                      : \"2px solid #aaa\"\r\n                  }`,\r\n                }}\r\n              >\r\n                <StyledCheckIcon className=\"fas fa-check suggested\" />\r\n              </StyledCheckedBox>\r\n              <StyledTerm\r\n                onClick={() => toggleDateVisibility()}\r\n                className=\"calendar\"\r\n              >\r\n                {`${ele.day} ${ele.monthName} ${ele.year}`} at{\" \"}\r\n                {`${ele.hour}:${ele.minutes}`}\r\n                <StyledStatus\r\n                  className=\"calendar\"\r\n                  style={{\r\n                    backgroundColor: ele.statusColor,\r\n                    opacity: `${ele.statusColor === \"#888\" ? 0 : 1}`,\r\n                  }}\r\n                >{`${ele.status}`}</StyledStatus>\r\n                <StyledIcon\r\n                  className=\"fas fa-chevron-down calendar\"\r\n                  pointer\r\n                  marginLeft\r\n                />\r\n              </StyledTerm>\r\n            </StyledTermWrap>\r\n          ))}\r\n        </>\r\n      )}\r\n      <StyledTitle marginTop>\r\n        <StyledIcon className=\"fas fa-check-double\" />\r\n        Tasks List\r\n      </StyledTitle>\r\n      {matchedListTasks.length === 0 ? (\r\n        <StyledPlaceholder>This card has no tasks list yet</StyledPlaceholder>\r\n      ) : (\r\n        matchedListTasks.map((ele) => (\r\n          <TasksListInDetailCover\r\n            key={ele.listName}\r\n            listOfAllTasksList={listOfAllTasksList}\r\n            listName={ele.listName}\r\n            subTasksList={ele.subTasksList}\r\n            taskId={taskId}\r\n            unActiveSubtasks={ele.unActiveSubtasks}\r\n            totalOfSubTasks={ele.totalOfSubTasks}\r\n            tasksListVisibility={tasksListVisibility}\r\n            setTasksListVisibility={setTasksListVisibility}\r\n            addNewCard={addNewCard}\r\n            idUpdatedList={idUpdatedList}\r\n          />\r\n        ))\r\n      )}\r\n      <StyledDetailDescription>\r\n        <StyledTitle>\r\n          <StyledIcon className=\"fas fa-stream\" />\r\n          Description\r\n          <StyledButton\r\n            greyBgc\r\n            marginLeft\r\n            hoverBgc\r\n            style={{\r\n              color: `${\r\n                listOfAllComments.length !== 0 ? \"#42516e\" : \"rgba(0,0,0,0)\"\r\n              }`,\r\n              backgroundColor: `${\r\n                listOfAllComments.length !== 0 ? \"#EAECF0\" : \"rgba(0,0,0,0)\"\r\n              }`,\r\n              cursor: `${\r\n                listOfAllComments.length !== 0 ? \"pointer\" : \"initial\"\r\n              }`,\r\n              marginLeft: `${listOfAllComments.length !== 0 ? \"6px\" : \"50px\"}`,\r\n            }}\r\n            onClick={(e) => editCommentToCard(toggleCommentVisibility)}\r\n          >\r\n            Edit\r\n          </StyledButton>\r\n        </StyledTitle>\r\n        {listOfAllComments.length !== 0 ? null : (\r\n          <StyledTextArea\r\n            placeholder=\"Click to add more detailed comment...\"\r\n            className=\"input textArea\"\r\n            onClick={() => toggleCommentFeature(true)}\r\n            onChange={(e) => commentChange(e)}\r\n            onKeyPress={(e) => addCommentToCard(e, taskId, commentValue)}\r\n            value={commentValue}\r\n          />\r\n        )}\r\n        {toggleCommentVisibility ? (\r\n          <StyledCommentOptionWrap>\r\n            <StyledButton\r\n              className=\"commentBtn\"\r\n              onClick={(e) => addCommentToCard(e, taskId, commentValue)}\r\n            >\r\n              SAVE\r\n            </StyledButton>\r\n            <StyledIcon biggerSize pointer className=\"far fa-times-circle\" />\r\n          </StyledCommentOptionWrap>\r\n        ) : null}\r\n        {listOfAllComments.map((ele) => (\r\n          <StyledComment\r\n            key={ele.id}\r\n            onClick={(e) => editCommentToCard(toggleCommentVisibility)}\r\n          >\r\n            {ele.comment}\r\n          </StyledComment>\r\n        ))}\r\n      </StyledDetailDescription>\r\n    </StyledDetailMarks>\r\n  );\r\n}\r\n\r\nexport default DetailCoverMarks;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../Style/MediaQuery/mq\";\r\nimport DetailCoverNav from \"./DetailCoverNav/DetailCoverNav\";\r\nimport DetailCoverMarks from \"./DetailCoverMarks/DetailCoverMarks\";\r\n\r\nconst StyledDetailToolsWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 600px;\r\n  margin-top: 10px;\r\n  @media ${device.laptop} {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nfunction DetailTools({\r\n  labelsVisibility,\r\n  handleLabelsVisibility,\r\n  deleteCard,\r\n  addNewCard,\r\n  idUpdatedList,\r\n  taskId,\r\n  matchedColorsToThisCard,\r\n  addPriorityForCards,\r\n  toggleCommentFeature,\r\n  toggleCommentVisibility,\r\n  commentChange,\r\n  commentValue,\r\n  addCommentToCard,\r\n  listOfAllComments,\r\n  editCommentToCard,\r\n  changeListInDetails,\r\n  toggleDetailMove,\r\n  taskTitle,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  taskTitleList,\r\n  matchedPriority,\r\n  copyVisibility,\r\n  toggleDateVisibility,\r\n  dateVisibility,\r\n  toggleLabelColorToCard,\r\n  listOfAllBadges,\r\n  listOfAllTasksId,\r\n  labelColors,\r\n  setLabelColors,\r\n  matchedTerms,\r\n  toggleTermToCard,\r\n  termDoneCheckbox,\r\n  setTasksListVisibility,\r\n  tasksListVisibility,\r\n  setListOfTasksList,\r\n  listOfAllTasksList,\r\n  matchedListTasks,\r\n}) {\r\n  return (\r\n    <StyledDetailToolsWrap>\r\n      <DetailCoverMarks\r\n        matchedColorsToThisCard={matchedColorsToThisCard}\r\n        handleLabelsVisibility={handleLabelsVisibility}\r\n        labelsVisibility={labelsVisibility}\r\n        toggleCommentFeature={toggleCommentFeature}\r\n        toggleCommentVisibility={toggleCommentVisibility}\r\n        commentChange={commentChange}\r\n        commentValue={commentValue}\r\n        addCommentToCard={addCommentToCard}\r\n        taskId={taskId}\r\n        listOfAllComments={listOfAllComments}\r\n        editCommentToCard={editCommentToCard}\r\n        matchedTerms={matchedTerms}\r\n        toggleDateVisibility={toggleDateVisibility}\r\n        termDoneCheckbox={termDoneCheckbox}\r\n        listOfAllTasksList={listOfAllTasksList}\r\n        matchedListTasks={matchedListTasks}\r\n        tasksListVisibility={tasksListVisibility}\r\n        setTasksListVisibility={setTasksListVisibility}\r\n        addNewCard={addNewCard}\r\n        idUpdatedList={idUpdatedList}\r\n      />\r\n      <DetailCoverNav\r\n        handleLabelsVisibility={handleLabelsVisibility}\r\n        labelsVisibility={labelsVisibility}\r\n        deleteCard={deleteCard}\r\n        idUpdatedList={idUpdatedList}\r\n        taskId={taskId}\r\n        addPriorityForCards={addPriorityForCards}\r\n        changeListInDetails={changeListInDetails}\r\n        toggleDetailMove={toggleDetailMove}\r\n        taskTitle={taskTitle}\r\n        wholeList={wholeList}\r\n        moveCardToAnotherList={moveCardToAnotherList}\r\n        taskTitleList={taskTitleList}\r\n        matchedPriority={matchedPriority}\r\n        copyVisibility={copyVisibility}\r\n        matchedColorsToThisCard={matchedColorsToThisCard}\r\n        toggleDateVisibility={toggleDateVisibility}\r\n        dateVisibility={dateVisibility}\r\n        toggleLabelColorToCard={toggleLabelColorToCard}\r\n        listOfAllBadges={listOfAllBadges}\r\n        listOfAllTasksId={listOfAllTasksId}\r\n        labelColors={labelColors}\r\n        setLabelColors={setLabelColors}\r\n        toggleTermToCard={toggleTermToCard}\r\n        setTasksListVisibility={setTasksListVisibility}\r\n        tasksListVisibility={tasksListVisibility}\r\n        setListOfTasksList={setListOfTasksList}\r\n        listOfAllTasksList={listOfAllTasksList}\r\n      />\r\n    </StyledDetailToolsWrap>\r\n  );\r\n}\r\n\r\nexport default DetailTools;\r\n","import React from \"react\";\r\nimport DetailInputElement from \"../DetailElements/DetailInputElement\";\r\nimport DetailSuggestedElement from \"../DetailElements/DetalSuggestedElement/DetailSuggestedElement\";\r\nimport DetailTools from \"../DetailTools/DetailTools\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledCover = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow-y: scroll;\r\n  background-attachment: fixed;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 5px;\r\n  }\r\n`;\r\n\r\nconst StyledDetail = styled.div`\r\n  position: relative;\r\n  top: 41px;\r\n  left: 50%;\r\n  bottom: 17.5px;\r\n  transform: translate(-50%, 0%);\r\n  width: 100%;\r\n  max-width: 775px;\r\n  min-height: calc(100vh - 40px - 17.5px);\r\n  padding: 15px;\r\n  border-radius: 3px;\r\n  background-color: #f4f5f7;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nfunction DetailCoverView({\r\n  updateCard,\r\n  deleteCard,\r\n  addNewCard,\r\n  idUpdatedList,\r\n  taskTitle,\r\n  taskTitleFeature,\r\n  changeListInDetails,\r\n  taskTitleList,\r\n  visibilityChangeListInDetails,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  labelsVisibility,\r\n  handleLabelsVisibility,\r\n  taskId,\r\n  toggleLabelColorToCard,\r\n  listOfAllBadges,\r\n  matchedColorsToThisCard,\r\n  labelColors,\r\n  setLabelColors,\r\n  listOfAllTasksId,\r\n  addPriorityForCards,\r\n  toggleCommentFeature,\r\n  toggleCommentVisibility,\r\n  commentChange,\r\n  commentValue,\r\n  addCommentToCard,\r\n  listOfAllComments,\r\n  editCommentToCard,\r\n  toggleDetailMove,\r\n  matchedPriority,\r\n  copyVisibility,\r\n  toggleDateVisibility,\r\n  dateVisibility,\r\n  matchedTerms,\r\n  toggleTermToCard,\r\n  termDoneCheckbox,\r\n  setTasksListVisibility,\r\n  tasksListVisibility,\r\n  setListOfTasksList,\r\n  listOfAllTasksList,\r\n  matchedListTasks,\r\n}) {\r\n  return (\r\n    <StyledCover\r\n      className=\"cover\"\r\n      onClick={(e) => updateCard(e, taskTitle, idUpdatedList, taskId)}\r\n    >\r\n      <StyledDetail\r\n        className=\"detail\"\r\n        onClick={(e) => updateCard(e, taskTitle, idUpdatedList, taskId)}\r\n      >\r\n        <span className=\"fas fa-credit-card\"></span>\r\n        <DetailInputElement\r\n          taskTitle={taskTitle}\r\n          taskTitleFeature={taskTitleFeature}\r\n          updateCard={updateCard}\r\n          idUpdatedList={idUpdatedList}\r\n          taskId={taskId}\r\n        />\r\n        <DetailSuggestedElement\r\n          changeListInDetails={changeListInDetails}\r\n          taskTitleList={taskTitleList}\r\n          taskTitle={taskTitle}\r\n          visibilityChangeListInDetails={visibilityChangeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          taskId={taskId}\r\n        />\r\n        <DetailTools\r\n          labelsVisibility={labelsVisibility}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          deleteCard={deleteCard}\r\n          addNewCard={addNewCard}\r\n          idUpdatedList={idUpdatedList}\r\n          taskId={taskId}\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n          addPriorityForCards={addPriorityForCards}\r\n          toggleCommentFeature={toggleCommentFeature}\r\n          toggleCommentVisibility={toggleCommentVisibility}\r\n          commentChange={commentChange}\r\n          commentValue={commentValue}\r\n          addCommentToCard={addCommentToCard}\r\n          listOfAllComments={listOfAllComments}\r\n          editCommentToCard={editCommentToCard}\r\n          changeListInDetails={changeListInDetails}\r\n          toggleDetailMove={toggleDetailMove}\r\n          taskTitle={taskTitle}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          taskTitleList={taskTitleList}\r\n          matchedPriority={matchedPriority}\r\n          copyVisibility={copyVisibility}\r\n          toggleDateVisibility={toggleDateVisibility}\r\n          dateVisibility={dateVisibility}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          matchedTerms={matchedTerms}\r\n          toggleTermToCard={toggleTermToCard}\r\n          termDoneCheckbox={termDoneCheckbox}\r\n          setTasksListVisibility={setTasksListVisibility}\r\n          tasksListVisibility={tasksListVisibility}\r\n          setListOfTasksList={setListOfTasksList}\r\n          listOfAllTasksList={listOfAllTasksList}\r\n          matchedListTasks={matchedListTasks}\r\n        />\r\n      </StyledDetail>\r\n    </StyledCover>\r\n  );\r\n}\r\n\r\nexport default DetailCoverView;\r\n","import React from \"react\";\r\nimport DetailCoverView from \"../../components/DetailCover/DetailCoverView/DetailCoverView\";\r\n\r\nclass DetailCover extends React.Component {\r\n  state = {\r\n    taskTitle: \"\",\r\n    commentValue: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      taskTitle: this.props.taskName,\r\n    });\r\n  }\r\n\r\n  taskTitleFeature = (e) => {\r\n    this.setState({\r\n      taskTitle: e.target.value,\r\n    });\r\n  };\r\n\r\n  commentChange = (e) => {\r\n    this.setState({ commentValue: e.target.value }); //Set input comment\r\n  };\r\n\r\n  addCommentToCard = (e, taskId, comment) => {\r\n    //Add comment by click and by Enter button, add comment to commentList and TextArea is disparing, Comment is generate\r\n    // by list of matched comment in DetailCoverMarks Component\r\n    if (e.target.className.includes(\"commentBtn\") || e.which === 13) {\r\n      this.props.setListOfAllComments([\r\n        ...this.props.listOfAllComments,\r\n        {\r\n          id: taskId,\r\n          comment: comment,\r\n        },\r\n      ]);\r\n      this.props.toggleCommentFeature(false);\r\n    }\r\n  };\r\n\r\n  editCommentToCard = (e, taskId) => {\r\n    //Function that run when we want edit our comment - EditBtn is disapiring, textArea is appearing\r\n    this.props.toggleCommentFeature(true);\r\n    const commentIndexToDelete = this.props.listOfAllComments.findIndex(\r\n      (ele) => ele.id === taskId\r\n    );\r\n    this.props.listOfAllComments.splice(commentIndexToDelete, 1);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      taskId,\r\n      taskTitleList,\r\n      updateCard,\r\n      deleteCard,\r\n      addNewCard,\r\n      idUpdatedList,\r\n      changeListInDetails,\r\n      visibilityChangeListInDetails,\r\n      wholeList,\r\n      moveCardToAnotherList,\r\n      labelsVisibility,\r\n      handleLabelsVisibility,\r\n      toggleLabelColorToCard,\r\n      listOfAllBadges,\r\n      labelColors,\r\n      setLabelColors,\r\n      listOfAllTasksId,\r\n      addPriorityForCards,\r\n      toggleCommentVisibility,\r\n      toggleCommentFeature,\r\n      listOfAllComments,\r\n      toggleDetailMove,\r\n      listOfAllPriorityTasks,\r\n      copyVisibility,\r\n      toggleDateVisibility,\r\n      dateVisibility,\r\n      listOfAllTerms,\r\n      toggleTermToCard,\r\n      termDoneCheckbox,\r\n      tasksListVisibility,\r\n      setTasksListVisibility,\r\n      setListOfTasksList,\r\n      listOfAllTasksList,\r\n    } = this.props;\r\n\r\n    const { taskTitle, commentValue } = this.state;\r\n\r\n    const copyOfallBadges = [...listOfAllBadges];\r\n    const matchedColorsToThisCard = copyOfallBadges.filter(\r\n      (ele) => ele.id === taskId\r\n    );\r\n\r\n    const copyOfAllComment = [...listOfAllComments];\r\n    const matchedComments = copyOfAllComment.filter((ele) => ele.id === taskId);\r\n\r\n    const copyOfAllPriority = [...listOfAllPriorityTasks];\r\n    const matchedPriority = copyOfAllPriority.filter((ele) => ele === taskId);\r\n\r\n    const copyOfAllTerms = [...listOfAllTerms];\r\n    const matchedTerms = copyOfAllTerms.filter((ele) => ele.id === taskId);\r\n\r\n    const copyOfAllListTasks = [...listOfAllTasksList];\r\n    const matchedListTasks = copyOfAllListTasks.filter(\r\n      (ele) => ele.id === taskId\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <DetailCoverView\r\n          updateCard={updateCard}\r\n          addNewCard={addNewCard}\r\n          taskTitle={taskTitle}\r\n          taskTitleFeature={this.taskTitleFeature}\r\n          changeListInDetails={changeListInDetails}\r\n          taskTitleList={taskTitleList}\r\n          visibilityChangeListInDetails={visibilityChangeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          labelsVisibility={labelsVisibility}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          deleteCard={deleteCard}\r\n          idUpdatedList={idUpdatedList}\r\n          taskId={taskId}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          addPriorityForCards={addPriorityForCards}\r\n          toggleCommentFeature={toggleCommentFeature}\r\n          toggleCommentVisibility={toggleCommentVisibility}\r\n          commentChange={this.commentChange}\r\n          commentValue={commentValue}\r\n          addCommentToCard={this.addCommentToCard}\r\n          listOfAllComments={matchedComments}\r\n          editCommentToCard={this.editCommentToCard}\r\n          toggleDetailMove={toggleDetailMove}\r\n          matchedPriority={matchedPriority}\r\n          copyVisibility={copyVisibility}\r\n          toggleDateVisibility={toggleDateVisibility}\r\n          dateVisibility={dateVisibility}\r\n          matchedTerms={matchedTerms}\r\n          toggleTermToCard={toggleTermToCard}\r\n          termDoneCheckbox={termDoneCheckbox}\r\n          setTasksListVisibility={setTasksListVisibility}\r\n          tasksListVisibility={tasksListVisibility}\r\n          setListOfTasksList={setListOfTasksList}\r\n          listOfAllTasksList={listOfAllTasksList}\r\n          matchedListTasks={matchedListTasks}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DetailCover;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Navigations from \"../Naviagtion/Navigations\";\r\nimport CoreField from \"../CoreField/CoreField\";\r\nimport ThemeField from \"../ThemeField/ThemeField\";\r\nimport OptionCover from \"../OptionCover/OptionCover\";\r\nimport DetailCover from \"../DetailCover/DetailCover\";\r\nimport Color from \"color\";\r\n\r\nconst Main = () => {\r\n  const [showThemeOption, showThemeOptionFunction] = useState(false);\r\n  const [numberOfTask, numberOfTaskFunction] = useState(0);\r\n  const [whichColor, setWhichColor] = useState([\"#76ce8e\"]);\r\n  const [visibilityOptionsCover, setVisibilityOptionCover] = useState(false);\r\n  const [optionCoverData, setOptionCoverData] = useState(\"\");\r\n  const [visibilityTaskDetails, setVisibilityTaskDetails] = useState(false);\r\n  const [taskTitleList, setTaskTitleList] = useState();\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const [taskId, setTaskId] = useState(\"\");\r\n  const [idUpdatedList, setIdUpdatedList] = useState();\r\n  const [visibilityChangeListInDetails, setChangeListInDetails] = useState(\r\n    false\r\n  );\r\n  const [toggleDetailMove, setToggleDetailMove] = useState(false);\r\n  const [labelsVisibility, setLabelsVisibility] = useState(false);\r\n  const [\r\n    labelsVisibilityDetailsComp,\r\n    setLabelsVisibilityDetailsComp,\r\n  ] = useState(false);\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const [listOfAllTasksId, setListOfAllTasksId] = useState([]);\r\n  const [listOfAllBadges, setListOfAllBadges] = useState([]);\r\n  const [listOfAllPriorityTasks, setListOfPriority] = useState([]);\r\n  const [listOfAllComments, setListOfAllComments] = useState([]);\r\n  const [listOfAllTerms, setListOfallTerms] = useState([]);\r\n  const [listOfAllTasksList, setListOfTasksList] = useState([]);\r\n  const [hideFontSizeLabel, setHideFontSizeLabel] = useState(false);\r\n  const [toggleCommentVisibility, setToggleCommentVisibility] = useState(false);\r\n  const [copyVisibility, setCopyVisibility] = useState(false);\r\n  const [dateVisibility, setDateVisibility] = useState(false);\r\n  const [tasksListVisibility, setTasksListVisibility] = useState(false);\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", hideTheme);\r\n  });\r\n\r\n  const [wholeList, setWholeList] = useState([\r\n    {\r\n      id: 0,\r\n      title: \"To Do\",\r\n      tasks: [],\r\n      activeList: false,\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"In Progress\",\r\n      tasks: [],\r\n      activeList: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Finished\",\r\n      tasks: [],\r\n      activeList: false,\r\n    },\r\n  ]);\r\n\r\n  const [labelColors, setLabelColors] = useState([\r\n    { color: \"#61BD4F\", colorName: \"green\", value: \"\", id: 0 },\r\n    { color: \"#F2D600\", colorName: \"yellow\", value: \"\", id: 1 },\r\n    { color: \"#FF9F1A\", colorName: \"orange\", value: \"\", id: 2 },\r\n    { color: \"#EB5A46\", colorName: \"red\", value: \"\", id: 3 },\r\n    { color: \"#C377E0\", colorName: \"purple\", value: \"\", id: 4 },\r\n    { color: \"#0079BF\", colorName: \"blue\", id: 5 },\r\n    { color: \"#00C2E0\", colorName: \"light blue ocean\", value: \"\", id: 6 },\r\n    { color: \"#51E898\", colorName: \"light green\", value: \"\", id: 7 },\r\n    { color: \"#FF78CB\", colorName: \"pink\", value: \"\", id: 8 },\r\n    { color: \"#344563\", colorName: \"dark blue\", value: \"\", id: 9 },\r\n    { color: \"#B3BAC5\", colorName: \"grey\", value: \"\", id: 10 },\r\n  ]);\r\n\r\n  const hideTheme = (e) => {\r\n    const searchingClass = e.target.className;\r\n    if (\r\n      searchingClass.includes(\"main\") ||\r\n      searchingClass.includes(\"input\") ||\r\n      searchingClass.includes(\"item\")\r\n    ) {\r\n      showThemeOptionFunction(false);\r\n    }\r\n\r\n    if (!searchingClass.includes(\"suggested\")) {\r\n      setChangeListInDetails(false);\r\n      setToggleDetailMove(false);\r\n      setCopyVisibility(false);\r\n    }\r\n\r\n    if (\r\n      searchingClass.includes(\"coverOption\") ||\r\n      searchingClass.includes(\"cover_box\")\r\n    ) {\r\n      setVisibilityOptionCover(false);\r\n      setLabelsVisibility(false);\r\n    }\r\n\r\n    if (searchingClass.includes(\"textArea_Option\")) {\r\n      setLabelsVisibility(false);\r\n    }\r\n\r\n    if (!searchingClass.includes(\"label\")) {\r\n      setLabelsVisibilityDetailsComp(false);\r\n    }\r\n    if (!searchingClass.includes(\"textArea\")) {\r\n      setToggleCommentVisibility(false);\r\n    }\r\n    if (!searchingClass.includes(\"calendar\")) {\r\n      setDateVisibility(false);\r\n    }\r\n    if (!searchingClass.includes(\"tasksList\")) {\r\n      setTasksListVisibility(false);\r\n    }\r\n  };\r\n\r\n  const addNewCard = (listId, newTask, taskId) => {\r\n    const correctList = wholeList.filter((list) => list.id === listId);\r\n    if (newTask.length === 0) return;\r\n\r\n    const matchedBadges = listOfAllBadges.filter((ele) => ele.id === taskId);\r\n    const matchedPriority = listOfAllPriorityTasks.filter(\r\n      (ele) => ele === taskId\r\n    );\r\n    const matchedComment = listOfAllComments.filter((ele) => ele.id === taskId);\r\n    const theBiggestId = Math.max(...listOfAllTasksId);\r\n\r\n    const matchedList = wholeList.filter((ele) => ele.id === listId);\r\n    const matchedDate = listOfAllTerms.filter((ele) => ele.id === taskId);\r\n\r\n    //\"Add card\" by move already existing card\r\n    if (taskId) {\r\n      correctList[0].tasks.push({\r\n        id: taskId,\r\n        taskName: newTask,\r\n        currentList: listId,\r\n        currentListName: matchedList[0].title,\r\n        comment: matchedComment,\r\n        badges: matchedBadges,\r\n        priority: `${matchedPriority.length === 0 ? null : \"priority\"}`,\r\n        date: matchedDate,\r\n        cover: \"\",\r\n      });\r\n    } else {\r\n      //Add new card by button 'Add Card'\r\n      correctList[0].tasks.push({\r\n        id: `${listOfAllTasksId.length === 0 ? 0 : theBiggestId + 1}`,\r\n        taskName: newTask,\r\n        currentList: listId,\r\n        currentListName: matchedList[0].title,\r\n        comment: \"\",\r\n        badges: [],\r\n        priority: false,\r\n        date: [],\r\n        cover: \"\",\r\n      });\r\n      if (listOfAllTasksId.length === 0) {\r\n        setListOfAllTasksId([0]);\r\n      } else {\r\n        setListOfAllTasksId([...listOfAllTasksId, theBiggestId + 1]);\r\n      }\r\n    }\r\n    numberOfTaskFunction(numberOfTask + 1);\r\n  };\r\n\r\n  const deleteCard = (listId, taskId, byButton) => {\r\n    if (byButton === \"byButton\") {\r\n      //Delete Card Badges from array if matched exist also other matched lists\r\n      const matchedBadges = listOfAllBadges.filter((ele) => ele.id === taskId);\r\n      const matchedPriorityIndex = listOfAllPriorityTasks.findIndex(\r\n        (ele) => ele === taskId\r\n      );\r\n      const matchedCommentIndex = listOfAllComments.findIndex(\r\n        (ele) => ele.id === taskId\r\n      );\r\n      const matchedTermIndex = listOfAllTerms.findIndex(\r\n        (ele) => ele === taskId\r\n      );\r\n      const matchedTasksList = listOfAllTasksList.filter(\r\n        (ele) => ele.id === taskId\r\n      );\r\n\r\n      listOfAllPriorityTasks.splice(matchedPriorityIndex, 1);\r\n      listOfAllComments.splice(matchedCommentIndex, 1);\r\n      listOfAllTerms.splice(matchedTermIndex, 1);\r\n      if (matchedBadges.length !== 0) {\r\n        matchedBadges.forEach((element) => {\r\n          const indexOfBadgedToDelete = listOfAllBadges.findIndex(\r\n            (ele) => ele.id === taskId && ele.color === element.color\r\n          );\r\n          listOfAllBadges.splice(indexOfBadgedToDelete, 1);\r\n        });\r\n      }\r\n\r\n      if (matchedTasksList.length !== 0) {\r\n        matchedTasksList.forEach((element) => {\r\n          const indexOfTaskListToDelete = listOfAllTasksList.findIndex(\r\n            (ele) => ele.id === element.id && ele.listName === element.listName\r\n          );\r\n          listOfAllTasksList.splice(indexOfTaskListToDelete, 1);\r\n        });\r\n      }\r\n\r\n      //Delete Card Id from array\r\n      const matchedIdList = listOfAllTasksId.findIndex(\r\n        (ele) => ele === taskId * 1\r\n      );\r\n      listOfAllTasksId.splice(matchedIdList, 1);\r\n    }\r\n\r\n    //Delete Card from list( by every way )\r\n    const correctList = wholeList.filter((list) => list.id === listId);\r\n    const taskIndex = correctList[0].tasks.findIndex(\r\n      (element) => element.id === taskId\r\n    );\r\n    correctList[0].tasks.splice(taskIndex, 1);\r\n\r\n    numberOfTaskFunction(numberOfTask - 1);\r\n    setVisibilityOptionCover(false);\r\n    setVisibilityTaskDetails(false);\r\n  };\r\n\r\n  const addNewList = (listInputValue, showListHandle, setListInput) => {\r\n    showListHandle(false);\r\n    setListInput(\"\");\r\n    if (listInputValue === \"\") return;\r\n    if (listInputValue.length < 2) return;\r\n\r\n    let biggerThanLast = [];\r\n    wholeList.forEach((list) => biggerThanLast.push(list.id));\r\n    const theBiggest = Math.max(...biggerThanLast);\r\n    setWholeList([\r\n      ...wholeList,\r\n      {\r\n        title: listInputValue,\r\n        id: `${wholeList.length === 0 ? 0 : theBiggest + 1}`,\r\n        tasks: [],\r\n        activeInput: false,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const updateListTitle = (newTitle, listId) => {\r\n    const updatedList = wholeList.filter((list) => list.id === listId);\r\n    updatedList[0].title = newTitle;\r\n  };\r\n\r\n  const elementHoverEnter = (e) => {\r\n    const arrayClassList = [];\r\n    e.target.classList.forEach((item) => {\r\n      arrayClassList.push(item);\r\n    });\r\n\r\n    if (arrayClassList.includes(\"list\")) {\r\n      const currentLiColor = Color(\r\n        `${\r\n          e.target.style.backgroundColor\r\n            ? e.target.style.backgroundColor\r\n            : \"#76ce8e\"\r\n        }`\r\n      );\r\n      return (e.target.style.backgroundColor = currentLiColor.lighten(0.1));\r\n    }\r\n  };\r\n\r\n  const elementHoverLeave = (e) => {\r\n    const arrayClassList = [];\r\n    e.target.classList.forEach((item) => {\r\n      arrayClassList.push(item);\r\n    });\r\n\r\n    if (arrayClassList.includes(\"list\")) {\r\n      return (e.target.style.backgroundColor = whichColor);\r\n    }\r\n  };\r\n\r\n  const visibilityOptionFunction = (\r\n    e,\r\n    toggle,\r\n    taskName,\r\n    listId,\r\n    currentListName,\r\n    cardId\r\n  ) => {\r\n    //Dates sending from Card to OptionFunction Comp (by clicked Edit Icon)\r\n    setVisibilityOptionCover(toggle);\r\n    setIdUpdatedList(listId);\r\n    setTaskName(taskName);\r\n    setOptionCoverData([\r\n      {\r\n        listId: listId,\r\n        currentListName: currentListName,\r\n        top: e.target.parentNode.parentNode.offsetTop,\r\n        left: e.target.parentNode.offsetLeft,\r\n        taskTitle: taskName,\r\n        clickedCard: e.target.parentNode,\r\n        clickedCardWrapLabel: e.target.parentNode.children[0],\r\n        clickedCardId: cardId,\r\n        wholeList: wholeList,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const taskDetailsFunction = (\r\n    //Dates sending from Card to DetailsComponenet (by doubleClick Card)\r\n    nameUpdatedTask,\r\n    nameUpdatedList,\r\n    listId,\r\n    cardId\r\n  ) => {\r\n    setIdUpdatedList(listId);\r\n    setTaskTitleList(nameUpdatedList);\r\n    setTaskName(nameUpdatedTask);\r\n    setTaskId(cardId);\r\n    setVisibilityTaskDetails(true);\r\n  };\r\n\r\n  const updateCard = (e, updatedTitle, listId, taskId) => {\r\n    // For changing taskName by detailCover component and optionCover\r\n    if (\r\n      e.target.className.includes(\"cover\") ||\r\n      e.target.className.includes(\"cover_saveBtn\") ||\r\n      e.which === 13\r\n    ) {\r\n      const correctList = wholeList.filter((list) => list.id === listId);\r\n      if (updatedTitle.length === 0) return setVisibilityTaskDetails(false);\r\n      const index = correctList[0].tasks.findIndex((ele) => ele.id === taskId);\r\n      correctList[0].tasks[index].taskName = updatedTitle;\r\n      setVisibilityTaskDetails(false);\r\n      setVisibilityOptionCover(false);\r\n      setLabelsVisibility(false);\r\n    }\r\n\r\n    // For changing taskName by detailCover component without closing this componentView\r\n    if (\r\n      !e.target.className.includes(\"input\") &&\r\n      !e.target.className.includes(\"suggested\") &&\r\n      !e.target.className.includes(\"close\") &&\r\n      !e.target.className.includes(\"delete\") &&\r\n      !e.target.className.includes(\"cover_textArea\")\r\n    ) {\r\n      const correctList = wholeList.filter((list) => list.id === listId);\r\n      if (updatedTitle.length === 0) return setVisibilityTaskDetails(false);\r\n      if (correctList[0]) {\r\n        const index = correctList[0].tasks.findIndex(\r\n          (ele) => ele.id === taskId\r\n        );\r\n        correctList[0].tasks[index].taskName = updatedTitle;\r\n        setTaskName(updatedTitle);\r\n      }\r\n    }\r\n\r\n    if (e.target.className.includes(\"close\")) {\r\n      setVisibilityTaskDetails(false);\r\n      setVisibilityOptionCover(false);\r\n      setLabelsVisibility(false);\r\n    }\r\n  };\r\n\r\n  const changeListInDetails = (byElement) => {\r\n    if (byElement === \"byListName\") {\r\n      setChangeListInDetails(!visibilityChangeListInDetails);\r\n    } else if (\r\n      byElement === \"byNavMove\" ||\r\n      byElement === \"byOptionMove\" ||\r\n      byElement === \"byNavCopy\"\r\n    ) {\r\n      setToggleDetailMove(!toggleDetailMove);\r\n      if (byElement === \"byNavCopy\") {\r\n        setCopyVisibility(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const moveCardToAnotherList = (\r\n    taskTitle,\r\n    currentList,\r\n    taskId,\r\n    clickedListId,\r\n    byOptionCover,\r\n    copy,\r\n    canCopyLabels\r\n  ) => {\r\n    //FindListWhereDelete\r\n    const deleteFromList = wholeList.filter(\r\n      (list) => list.title === currentList\r\n    );\r\n\r\n    //AddToAnotherList\r\n    const addToList = wholeList.filter((list) => list.id === clickedListId);\r\n    if (addToList[0].id === deleteFromList[0].id) return;\r\n    if (!copy) {\r\n      deleteCard(deleteFromList[0].id, taskId);\r\n      addNewCard(addToList[0].id, taskTitle, taskId);\r\n    } else {\r\n      if (taskTitle.length === 0) return;\r\n      const theBiggestId = Math.max(...listOfAllTasksId);\r\n      const unicalIdForCopy = `${theBiggestId + 1}`;\r\n      listOfAllTasksId.push(unicalIdForCopy);\r\n      copyCard(\r\n        addToList[0].id,\r\n        taskTitle,\r\n        unicalIdForCopy,\r\n        taskId,\r\n        canCopyLabels\r\n      );\r\n    }\r\n    setChangeListInDetails(false);\r\n    setToggleDetailMove(false);\r\n\r\n    taskDetailsFunction(taskTitle, addToList[0].title, addToList[0].id, taskId);\r\n    if (byOptionCover || copy) {\r\n      setVisibilityTaskDetails(false);\r\n    }\r\n  };\r\n\r\n  const copyCard = (\r\n    listId,\r\n    taskTitle,\r\n    copyId,\r\n    preventCardId,\r\n    canCopyLabels\r\n  ) => {\r\n    const lablesToCopy = listOfAllBadges.filter(\r\n      (ele) => ele.id === preventCardId\r\n    );\r\n    const commentToCopy = listOfAllComments.filter(\r\n      (ele) => ele.id === preventCardId\r\n    );\r\n\r\n    const dateToCopy = listOfAllTerms.filter((ele) => ele.id === preventCardId);\r\n\r\n    if (lablesToCopy.length !== 0 && canCopyLabels) {\r\n      lablesToCopy.forEach((ele) => {\r\n        listOfAllBadges.push({\r\n          id: copyId,\r\n          color: ele.color,\r\n          labelId: `${ele.color}${copyId}`,\r\n          name: ele.name,\r\n        });\r\n      });\r\n    }\r\n\r\n    if (commentToCopy.length !== 0) {\r\n      listOfAllComments.push({ id: copyId, comment: commentToCopy[0].comment });\r\n    }\r\n\r\n    if (dateToCopy.length !== 0) {\r\n      listOfAllTerms.push({\r\n        id: copyId,\r\n        term: dateToCopy[0].term,\r\n        classN: \"termSpan\",\r\n        day: dateToCopy[0].day,\r\n        month: dateToCopy[0].month,\r\n        year: dateToCopy[0].year,\r\n        monthName: dateToCopy[0].monthName,\r\n        hour: dateToCopy[0].hour,\r\n        minutes: dateToCopy[0].minutes,\r\n        status: dateToCopy[0].status,\r\n        statusColor: dateToCopy[0].statusColor,\r\n        fontColor: dateToCopy[0].fontColor,\r\n        beforeDoneState: dateToCopy[0].beforeDoneState,\r\n      });\r\n    }\r\n\r\n    addNewCard(listId, taskTitle, copyId);\r\n  };\r\n\r\n  const moveListToAnotherPlace = (draggedListIndex, addToThisIndex) => {\r\n    const copy = [...wholeList];\r\n    const splicedElement = copy.splice(draggedListIndex, 1);\r\n    copy.splice(addToThisIndex, 0, ...splicedElement);\r\n    setWholeList(copy);\r\n  };\r\n\r\n  const clearAllBlankSpan = (e) => {\r\n    const allBlank = document.querySelectorAll(\".blank\");\r\n\r\n    allBlank.forEach((blank) => {\r\n      blank.style.width = \"0\";\r\n      blank.style.height = \"0\";\r\n      blank.style.backgroundColor = \"transparent\";\r\n      blank.style.borderRadius = \"0\";\r\n    });\r\n  };\r\n\r\n  //LABLES FEATURES\r\n  const handleLabelsVisibility = (toggle) => {\r\n    setLabelsVisibility(toggle);\r\n  };\r\n\r\n  const handleLabelsVisibilityDetailsComp = (toggle) => {\r\n    setLabelsVisibilityDetailsComp(toggle);\r\n  };\r\n\r\n  const toggleLabelColorToCard = (color, taskId) => {\r\n    const alreadyExistedBadges = listOfAllBadges.filter(\r\n      (ele) => ele.id === taskId\r\n    );\r\n\r\n    const matchedBages = [];\r\n    alreadyExistedBadges.forEach((ele) => {\r\n      if (ele.color === color) {\r\n        matchedBages.push(color);\r\n      }\r\n    });\r\n\r\n    if (matchedBages.length === 0) {\r\n      //Add only if this color and Id don't exist already\r\n      const nameBadge = labelColors.filter((ele) => ele.color === color);\r\n      // const dataForClasses = color.slice(1, -1);\r\n\r\n      listOfAllBadges.push({\r\n        id: taskId,\r\n        color: color,\r\n        name: nameBadge[0].value,\r\n        labelId: `${color}${taskId}`,\r\n      });\r\n\r\n      createLabelsElement(color, taskId, nameBadge[0].value);\r\n\r\n      //CheckIcon Visible\r\n      const checkIcon = document.getElementById(`${color}Check`);\r\n      checkIcon.style.display = \"block\";\r\n      setToggle(!toggle);\r\n    } else {\r\n      const indexToDelete = listOfAllBadges.findIndex(\r\n        (ele) => ele.id === taskId && ele.color === color\r\n      );\r\n\r\n      //Delete from list of badges when exist and from DOM\r\n      listOfAllBadges.splice(indexToDelete, 1);\r\n      const matchedColor = document.getElementById(`${color}${taskId}`);\r\n      matchedColor.remove();\r\n\r\n      //CheckIcon Visible\r\n      const checkIcon = document.getElementById(`${color}Check`);\r\n      checkIcon.style.display = \"none\";\r\n      setToggle(!toggle);\r\n    }\r\n  };\r\n\r\n  const createLabelsElement = (color, taskId, nameLabel) => {\r\n    const currentTask = document.getElementById(taskId);\r\n\r\n    const newLabel = document.createElement(\"div\");\r\n    newLabel.classList.add(`labelElement`);\r\n    newLabel.setAttribute(\"id\", `${color}${taskId}`);\r\n    newLabel.style.backgroundColor = `${color}`;\r\n    newLabel.textContent = nameLabel;\r\n    currentTask.children[0].appendChild(newLabel);\r\n  };\r\n\r\n  const addPriorityForCards = (e, cardId, byElement) => {\r\n    if (!listOfAllPriorityTasks.includes(cardId)) {\r\n      setListOfPriority([...listOfAllPriorityTasks, cardId]);\r\n      const clickedCardDOM = document.getElementById(cardId);\r\n      clickedCardDOM.style.border = \"1px solid #db4a36\";\r\n      e.target.style.color = \"#db4a36\";\r\n      e.target.children[0].style.color = \"#db4a36\";\r\n    } else if (listOfAllPriorityTasks.includes(cardId)) {\r\n      const indexToDelete = listOfAllPriorityTasks.findIndex(\r\n        (ele) => ele === cardId\r\n      );\r\n      listOfAllPriorityTasks.splice(indexToDelete, 1);\r\n      const clickedCardDOM = document.getElementById(cardId);\r\n      clickedCardDOM.style.border = null;\r\n      if (byElement === \"detailCover\") {\r\n        e.target.style.color = \"#42516e\";\r\n        e.target.children[0].style.color = \"#42516e\";\r\n      } else {\r\n        e.target.style.color = \"#fff\";\r\n        e.target.children[0].style.color = \"#fff\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleCommentFeature = (toggle) => {\r\n    setToggleCommentVisibility(toggle);\r\n  };\r\n\r\n  const toggleDateVisibility = () => {\r\n    setDateVisibility(!dateVisibility);\r\n  };\r\n\r\n  const toggleTermToCard = (\r\n    taskId,\r\n    date,\r\n    day,\r\n    month,\r\n    year,\r\n    monthName,\r\n    hour,\r\n    minutes,\r\n    status,\r\n    statusColor,\r\n    fontColor,\r\n    buttonType\r\n  ) => {\r\n    if (buttonType === \"save\") {\r\n      const termExistAlready = listOfAllTerms.filter(\r\n        (ele) => ele.id === taskId\r\n      );\r\n      if (termExistAlready.length !== 0) {\r\n        const existingTermIndex = listOfAllTerms.findIndex(\r\n          (ele) => ele.id === taskId\r\n        );\r\n        const currentCard = document.getElementById(`${taskId}term`);\r\n        currentCard.innerHTML = \"\";\r\n        listOfAllTerms.splice(existingTermIndex, 1);\r\n      }\r\n      const currentCard = document.getElementById(`${taskId}term`);\r\n      const termSpan = document.createElement(\"span\");\r\n      termSpan.classList.add(\"termSpan\");\r\n      termSpan.textContent = `${day} ${monthName} ${status}`;\r\n      termSpan.style.backgroundColor = statusColor;\r\n      termSpan.style.color = fontColor;\r\n      currentCard.appendChild(termSpan);\r\n\r\n      setListOfallTerms([\r\n        ...listOfAllTerms,\r\n        {\r\n          id: taskId,\r\n          classN: \"termSpan\",\r\n          term: date,\r\n          day,\r\n          month,\r\n          year,\r\n          monthName,\r\n          hour,\r\n          minutes,\r\n          status,\r\n          statusColor,\r\n          fontColor,\r\n          beforeDoneState: { beforeColor: \"\", beforeStatus: \"\" },\r\n        },\r\n      ]);\r\n      setDateVisibility(!dateVisibility);\r\n    } else {\r\n      //When btnDelete clicked, delete from list and form card DOM\r\n      const termToDeleteIndex = listOfAllTerms.findIndex(\r\n        (ele) => ele.id === taskId\r\n      );\r\n      listOfAllTerms.splice(termToDeleteIndex, 1);\r\n      const currentCardTerm = document.getElementById(`${taskId}term`);\r\n      currentCardTerm.innerHTML = \"\";\r\n      if (termToDeleteIndex !== -1) {\r\n        setDateVisibility(!dateVisibility);\r\n      }\r\n    }\r\n  };\r\n\r\n  const termDoneCheckbox = (taskId) => {\r\n    const matchedTerm = listOfAllTerms.filter((ele) => ele.id === taskId);\r\n    const currentCardTerm = document.getElementById(`${taskId}term`)\r\n      .children[0];\r\n\r\n    if (matchedTerm[0].status !== \"Done\") {\r\n      matchedTerm[0].beforeDoneState.beforeStatus = matchedTerm[0].status;\r\n      matchedTerm[0].beforeDoneState.beforeColor = matchedTerm[0].statusColor;\r\n      matchedTerm[0].status = \"Done\";\r\n      matchedTerm[0].statusColor = \"#5AAC44\";\r\n      currentCardTerm.style.backgroundColor = \"#5AAC44\";\r\n    } else {\r\n      matchedTerm[0].status = matchedTerm[0].beforeDoneState.beforeStatus;\r\n      matchedTerm[0].statusColor = matchedTerm[0].beforeDoneState.beforeColor;\r\n      matchedTerm[0].beforeDoneState.beforeStatus = \"\";\r\n      matchedTerm[0].beforeDoneState.beforeColor = \"\";\r\n      currentCardTerm.style.backgroundColor = matchedTerm[0].statusColor;\r\n    }\r\n    setDateVisibility(!dateVisibility);\r\n  };\r\n\r\n  const toggleTasksListVisibility = (toggle) => {\r\n    setTasksListVisibility(toggle);\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <Navigations\r\n        themeToggle={showThemeOptionFunction}\r\n        themeOption={showThemeOption}\r\n        elementHoverEnter={elementHoverEnter}\r\n        elementHoverLeave={elementHoverLeave}\r\n      />\r\n      <ThemeField themeOption={showThemeOption} setWhichColor={setWhichColor} />\r\n      <CoreField\r\n        wholeList={wholeList}\r\n        setWholeList={setWholeList}\r\n        addNewCard={addNewCard}\r\n        deleteCard={deleteCard}\r\n        addNewList={addNewList}\r\n        elementHoverEnter={elementHoverEnter}\r\n        elementHoverLeave={elementHoverLeave}\r\n        visibilityOptionFunction={visibilityOptionFunction}\r\n        taskDetailsFunction={taskDetailsFunction}\r\n        updateListTitle={updateListTitle}\r\n        moveListToAnotherPlace={moveListToAnotherPlace}\r\n        clearAllBlankSpan={clearAllBlankSpan}\r\n        hideFontSizeLabel={hideFontSizeLabel}\r\n        setHideFontSizeLabel={setHideFontSizeLabel}\r\n        listOfAllTasksList={listOfAllTasksList}\r\n        setWholeList={setWholeList}\r\n      />\r\n      {visibilityOptionsCover ? (\r\n        <OptionCover\r\n          optionCoverData={optionCoverData}\r\n          taskName={taskName}\r\n          updateCard={updateCard}\r\n          deleteCard={deleteCard}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          labelsVisibility={labelsVisibility}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          addPriorityForCards={addPriorityForCards}\r\n          toggleDetailMove={toggleDetailMove}\r\n          changeListInDetails={changeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          listOfAllPriorityTasks={listOfAllPriorityTasks}\r\n          copyVisibility={copyVisibility}\r\n          dateVisibility={dateVisibility}\r\n          toggleDateVisibility={toggleDateVisibility}\r\n          toggleTermToCard={toggleTermToCard}\r\n          listOfAllTerms={listOfAllTerms}\r\n          listOfAllTasksList={listOfAllTasksList}\r\n        />\r\n      ) : null}\r\n      {visibilityTaskDetails ? (\r\n        <DetailCover\r\n          taskName={taskName}\r\n          taskId={taskId}\r\n          taskTitleList={taskTitleList}\r\n          updateCard={updateCard}\r\n          addNewCard={addNewCard}\r\n          deleteCard={deleteCard}\r\n          idUpdatedList={idUpdatedList}\r\n          changeListInDetails={changeListInDetails}\r\n          visibilityChangeListInDetails={visibilityChangeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          handleLabelsVisibility={handleLabelsVisibilityDetailsComp}\r\n          labelsVisibility={labelsVisibilityDetailsComp}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          addPriorityForCards={addPriorityForCards}\r\n          toggleCommentFeature={toggleCommentFeature}\r\n          toggleCommentVisibility={toggleCommentVisibility}\r\n          listOfAllComments={listOfAllComments}\r\n          setListOfAllComments={setListOfAllComments}\r\n          toggleDetailMove={toggleDetailMove}\r\n          listOfAllPriorityTasks={listOfAllPriorityTasks}\r\n          copyVisibility={copyVisibility}\r\n          toggleDateVisibility={toggleDateVisibility}\r\n          toggleTermToCard={toggleTermToCard}\r\n          dateVisibility={dateVisibility}\r\n          listOfAllTerms={listOfAllTerms}\r\n          termDoneCheckbox={termDoneCheckbox}\r\n          setTasksListVisibility={toggleTasksListVisibility}\r\n          tasksListVisibility={tasksListVisibility}\r\n          setListOfTasksList={setListOfTasksList}\r\n          listOfAllTasksList={listOfAllTasksList}\r\n        />\r\n      ) : null}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { device } from \"../MediaQuery/mq\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin:0;\r\n    padding:0;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    box-sizing:border-box;\r\n    border:none;\r\n    outline:none;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n\r\n  html{\r\n    font-size:10px;\r\n  }\r\n\r\n  body{\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n  }\r\n\r\n  .card{\r\n  top:0;\r\n  left:0;\r\n  display:flex;\r\n  justify-content:space-between;\r\n  flex-wrap:wrap;\r\n  width: 100%;\r\n  max-width:260px;\r\n  word-break: break-all;\r\n  margin: 10px 0px;\r\n  padding: 9px 7.5px;\r\n  font-size: 1.4rem;\r\n  box-shadow: 0px 0.5px 0px 0.5px #aaa;\r\n  background-color: #fff;\r\n  border-radius:3px;\r\n  cursor: pointer;\r\n  color:black;\r\n\r\n  &:hover {\r\n    background-color: #F4F5F7;\r\n  }\r\n\r\n      &:hover .fa-highlighter {\r\n     color:#777; \r\n    }\r\n  }\r\n\r\n  .card_cardWrapContent{\r\n    display:flex;\r\n    justify-content:space-around\r\n  }\r\n\r\n  .card_wrapLabel{\r\n    display:flex;\r\n    flex-wrap:wrap;\r\n    width:100%;\r\n    transition:0.1s linear;\r\n\r\n    &:hover{\r\n      opacity:0.6;\r\n    }\r\n  }\r\n\r\n  .labelElement{\r\n    align-self:center;\r\n    min-width: 15%;\r\n    min-height:8px;\r\n    border-radius:5px;\r\n    margin-bottom:4px;\r\n    margin-right:4px;\r\n    padding: 3px;\r\n    color:white;\r\n    transition: 0.1s linear;\r\n  }\r\n\r\n  .labelElement_DetailCover{\r\n    min-width:40px;\r\n    width:auto;\r\n    height:32px;\r\n    border-radius:3px;\r\n    margin: 3px 3px 3px 0px;\r\n    cursor:pointer;\r\n    transition: 0.1s linear;\r\n    padding: 8px 5px;\r\n    color:white;\r\n    font-size:14px;\r\n    font-weight:600;\r\n\r\n    &:hover{\r\n      opacity: 0.85;\r\n    }\r\n  }\r\n\r\n  .lists{\r\n  top:0;\r\n  left:0;\r\n  width: 275px;\r\n  max-height: 80vh;\r\n  margin-right: 10px;\r\n  align-self: flex-start;\r\n  background-color: #ebecf0;\r\n  border-radius: 4px;\r\n  padding: 10px 7.5px;\r\n  margin-bottom: 15px;\r\n  cursor: pointer;\r\n  overflow-y:scroll;\r\n\r\n  &::-webkit-scrollbar{\r\n    width:1px;\r\n}\r\n\r\n&::-webkit-scrollbar-track{\r\n    background:rgba(0,0,0,0);\r\n}\r\n\r\n&::-webkit-scrollbar-thumb{\r\n  background:rgba(0,0,0,0);\r\n  border-radius: 10px;\r\n  height:10px;\r\n}\r\n&::-webkit-scrollbar-thumb:hover{\r\n  background:rgba(0,0,0,0);\r\n}\r\n  }\r\n  \r\n  .singleListWrap{\r\n     position:relative;\r\n     width: 285px;\r\n     display:flex;\r\n     flex-direction:column;\r\n   }\r\n\r\n  .fa-highlighter{\r\n    color:#777;\r\n    align-self:center;\r\n    margin:2px;\r\n    margin-bottom:0px;\r\n    color:#000;\r\n    @media ${device.laptop} {\r\n      color:#fff;\r\n\r\n      &:hover{\r\n        color:#000;\r\n      }\r\n  }\r\n  }\r\n  \r\n  .fa-ellipsis-h{\r\n   padding: 9px ;\r\n   margin-left:2px;\r\n   font-size: 13px;\r\n   color: #777;\r\n   cursor: pointer;\r\n\r\n   &:hover{\r\n    background-color: #dddfe5;\r\n   }\r\n  }\r\n\r\n  .fa-credit-card{\r\n    margin-right: 7.5px;\r\n     color:#42526E;\r\n     font-size: 19px;\r\n     \r\n   }\r\n\r\n   .detail > .fa-times{\r\n     position: absolute;\r\n     top:15px;\r\n     right:15px;\r\n     font-size: 20px;\r\n     color:#42526E;\r\n     cursor: pointer;\r\n   }\r\n\r\n   .termSpan{\r\n    color: #888;\r\n    font-size: 12.5px;\r\n    letter-spacing: 0.5px;\r\n    margin-left:3px;\r\n    padding: 2.5px 5px;\r\n    border-radius:3px;\r\n   }\r\n\r\n::-webkit-scrollbar{\r\n    height:17.5px;\r\n}::-webkit-scrollbar-track{\r\n    background:rgba(0,0,0,0.5);\r\n}\r\n::-webkit-scrollbar-thumb{\r\n  background:rgba(0,0,0,0.3);\r\n  border-radius: 10px;\r\n  height:10px;\r\n}\r\n::-webkit-scrollbar-thumb:hover{\r\n  background:rgba(0,0,0,0.5);\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\nimport Main from \"../Containers/Main/main\";\nimport GlobalStyle from \"../Style/GlobalStyle/globalStyle\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}