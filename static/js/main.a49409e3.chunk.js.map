{"version":3,"sources":["img/myLogo.png","components/Navigation/NavListView/NavListView.js","components/Navigation/NavigationView.js","Containers/Naviagtion/Navigations.js","components/MenuSlide/MenuBarView.js","components/MenuSlide/MenuSlideView.js","Containers/MenuSlide/MenuBar.js","components/TasksList/TasksPreviewInCard/TaskPreviewInCard.js","components/Card/Card.js","components/List/ListButtons/ListButtons.js","components/List/ListInput/ListInput.js","components/List/ListOptions/ListOptions.js","components/List/ListOptions/ListMove/ListMoveView.js","Containers/List/ListMove.js","components/List/ListOptions/ListDeleteCardsWindow/ListDeleteCardsWindowView.js","Containers/List/ListDeleteCardsWindow.js","components/List/ListOptions/ListMoveCardsWindow/ListMoveCardsWindowView.js","Containers/List/ListMoveCardsWindow.js","components/List/ListOptions/ListCopyWindow/ListCopyWindowView.js","Containers/List/ListCopyWindow.js","components/List/ListView.js","Containers/List/List.js","components/CoreField/CoreFieldView.js","Containers/CoreField/CoreField.js","components/ThemeField/ThemeFieldView.js","Containers/ThemeField/ThemeField.js","components/OptionCover/OptionCoverListView/OptionCoverListView.js","components/MoveToAnotherList/MoveToAnotherListBox.js","components/CopyCard/CopyCardView.js","Containers/CopyCard/CopyCard.js","components/Labels/LabelView/LabelsNameColors.js","components/Labels/LabelView/LabelsChooseColors.js","components/Labels/LabelsView.js","Containers/Labels/Labels.js","components/DatePicker/Calendar.js","components/DatePicker/DatePickerView.js","Containers/DatePicker/DatePicker.js","components/OptionCover/OptionCoverView.js","Containers/OptionCover/OptionCover.js","components/DetailCover/DetailElements/DetailInputElement.js","components/DetailCover/DetailElements/DetalSuggestedElement/DetailSuggestedElement.js","Style/MediaQuery/mq.js","components/TasksList/TasksListView.js","Containers/TasksList/TasksList.js","components/DetailCover/DetailTools/DetailCoverNav/DetailCoverNav.js","components/TasksList/SubtasksOptionView/SubtasksOptionView.js","Containers/TasksList/SubtasksOption/SubtasksOption.js","components/TasksList/TasksListInDetailCoverView/TasksListInDetailCoverView.js","Containers/TasksList/TasksListInDetailCover/TasksListInDetailCover.js","components/DetailCover/DetailElements/DetailCommentElement/DetailCommentElemnt.js","components/DetailCover/DetailTools/DetailCoverMarks/DetailCoverMarks.js","components/DetailCover/DetailTools/DetailTools.js","components/DetailCover/DetailCoverView/DetailCoverView.js","Containers/DetailCover/DetailCover.js","Containers/Main/main.js","Style/GlobalStyle/globalStyle.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledList","styled","li","props","lastEle","hoverBGC","lighThisColor","Link","a","NavListView","themeFunction","linkTitle","colorBgcHSL","color","className","onClick","StyledNav","nav","StyledUl","ul","StyledInput","input","Styledlogo","img","StyledHiperLink","navigationElements","Navigation","map","element","key","href","target","rel","src","myLogo","placeholder","Navigations","themeToggle","themeOption","whichColor","this","Color","lighten","NavigationView","Component","StyledInputTitle","StyledShowMenu","button","StyledIcon","span","MenuBarView","boardNameValue","boardNameChangeFunc","slideMenuFunc","colorOfBgc","onChange","e","value","StyledMenu","div","showMenu","StyledLabelTitle","StyledX","StyledBack","StyledTitle","h4","StyledWrapList","StyledSquarBGC","MenuSlideView","slideMenuState","MenuBar","state","setState","substr","hideMenuFunc","includes","document","addEventListener","StyledSubTasksCounter","card","TaskPreviewInCard","totalTasks","unActiveTasks","style","backgroundColor","StyledContentWrap","StyledContent","h3","StyledEdit","StyledTermInCard","Card","selected","scrollHeight","taskk","offsetX","offsetY","cardH","mouseDownFeature","classList","getElementById","task","id","clientHeight","nativeEvent","zIndex","mouseMoveFeature","mouseUpFeature","cursor","position","transform","boxShadow","scrollPosition","wholeList","addNewCardFeature","deleteCardFeatureByMove","listId","scrollHeighFromMain","Math","floor","taskId","getAttribute","draggedCard","draggedCardChildren","children","draggenCardLabelsChildren","draggedCardTermChildren","draggedCardTasksList","pageX","mouseLeaveFeature","forEach","ele","textContent","i","length","isDragAndDropTrue","clearAllBlankSpan","removeEventListener","left","getBoundingClientRect","width","top","pageY","height","allBlankSpan","querySelectorAll","all","borderRadius","labelFontSizeToggle","hideFontSizeLabel","setHideFontSizeLabel","taskName","inputTitle","taskDetailsFunction","visibilityOptionFunction","matchedTasksList","listOfAllTasksList","filter","totalOfSubTasks","unActiveSubtasks","onDoubleClick","onMouseDown","border","priority","fontSize","pointerEvents","badges","labelId","name","currentListName","date","classN","statusColor","fontColor","day","monthName","status","StyledAddButton","StyledSpanX","ListButtons","showAddField","textAreaValue","swapAddFieldFeature","StyledInputCover","ListInput","selectedList","listOptionToggle","setListTitle","StyledOptionList","ListOptions","deleteList","addNewCardFromList","moveListVisibilityFunc","deleteCardsVisibility","moveCardsVisibility","copyListVisibility","StyledMoveListWrap","StyledButton","StyledSelectDiv","StyledPossibleMoveOptions","StyledAvailableEle","disabled","StyledSelectText","smallerText","ListMoveView","togglePossibleMoveForList","possibleMoveListVisi","availableLists","setThisPlaceToDiv","moveThisList","list","currentList","ListMove","querySelector","availableDiv","copyWholeList","currentListIndex","findIndex","find","splice","setWholeList","index","StyledText","ListDeleteCardsWindowView","deleteCardsFromListFunc","ListDeleteCardsWindow","everyCardId","tasks","push","deleteCard","StyledAvailableList","StyledNameList","ListMoveCardsWindowView","moveCardsFromListFunc","title","ListMoveCardsWindow","moveToListIndex","moveFromListIndex","containerForTasks","moveTo","moveFrom","moveCardToAnotherList","StyledTeaxtArea","textarea","marginTop","ListCopyWindowView","setCopyListValue","copyList","ListCopyWindow","copyNewList","StyledTextArea","showStyle","ListView","setTextAreaValue","listVisiOptions","moveListVisibility","deleteCardsVisibilityState","moveCardsVisibilityState","copyListVisibilityState","addNewList","List","hideAll","searchingClass","showListHandle","setListInput","updateListTitle","buttonId","addNewCard","addNewCardFeatureByKey","which","preventDefault","clientX","clientY","display","marginRight","draggedListIndex","moveListToAnotherPlace","filterWholeList","deletedList","main","mainWidth","offsetWidth","scroll","behavior","moveList","StyledMain","StyledListInput","StyledWrapAddListBtn","bgc","CoreFieldView","mousePositionX","listOption","showList","showAddListHandle","listInputHandle","listInputValue","addNewListByKey","addNewListByButton","onScroll","onMouseMove","onKeyPress","MainField","useState","updatedScrollPosition","isDragDropTrue","isDragDropTrueFeature","scrollLeft","isTrue","StyledColorDiv","StyledThemeDiv","showTheme","ThemeFieldView","changeColor","blockOfColors","block","mainColor","navColor","listColor","inputColor","addListInput","ThemeField","setWhichColor","StyledListBlock","OptionCoverListView","addPriorityForCards","optionCoverData","matchedPriority","toggleCurrentListVisiFunc","clickedCardId","StyledChangeListDetails","rightPosition","topPosition","StyledReplaceTitle","alignCenter","biggerMargin","StyledSuggestList","biggerFont","MoveToAnotherListBox","taskTitle","optionCover","currentListId","moveToInSuggestedVisi","StyledCopyWrap","optionCoverPosition","StyledCheckedBox","StyledCheckIcon","StyledCheckBoxTitle","CopyCardView","changeCopyTextArea","copyTextArea","matchedColorsToThisCard","toggleCanCopyLables","copyLabelsAllow","copyCard","CopyCard","preventCardId","listOfAllComments","listOfAllTasksId","listOfAllBadges","listOfAllTerms","lablesToCopy","commentToCopy","newId","max","dateToCopy","String","comment","term","month","year","hour","minutes","beforeDoneState","StyledNameLabels","StyledLabelInput","StyledName","StyledWrapColors","StyledColorSquar","LabelsNameColors","nameLabelVisibilityFunc","filteredColors","detailCover","nameLabelInput","nameLabelInputValue","choosedSquar","saveNameLabel","currentSquarEdit","StyledLabels","StyledLabelWrapEle","StyledLabelElement","StyledIconCheck","StyledNameSox","LabelsChooseColors","toggleLabelColorToCard","generateCheckIcon","searchLabelColor","searchInputLabel","useEffect","LabelsView","colorNameWindowVisi","Labels","currentMatchedColors","toggle","colorId","from","isAnyTextAlready","parentNode","matchedBadges","currentCheckIcon","labelColors","setLabelColors","matchedLabelInCard","copyOfLabelColor","colorName","alreadyExistedBadges","matchedBages","nameBadge","createLabelsElement","reloadCoverComponentFunc","indexToDelete","remove","nameLabel","currentTask","newLabel","createElement","add","setAttribute","appendChild","addLabelColor","toUpperCase","StyledCalendar","StyledCalendarDays","darkerColor","col","cur","Calendar","days","emptyFields","howManyDaysMonth","todayDay","setThisDayFunc","StyledDateTitle","h2","biggerFontSize","StyledDateWrap","StyledColumnDate","redButton","StyledWrapDateInputs","StyledDateInput","StyledWarnSpan","DatePickerView","todayMonth","todayYear","todayMonthName","toggleMonths","choosedDateFunction","choosedTimeFunction","setThisDataFunctiion","DatePicker","time","todayFullDate","todayWeekDay","months","updateFlag","action","preventMonthLenghtFlag","displayingMonthLength","blankPlace","emptyFilter","contentFilter","backMonthLenght","generateOtherMonth","firstOfMonth","stepBackMonthLength","empty","unshift","mappingArrayWithContent","whichWay","thisDay","buttonType","patternDay","patternMonth","patternYear","patternHour","patternMinutes","toD","toM","toY","test","currDate","Date","currD","getDate","currM","getMonth","currY","getFullYear","currH","getHours","currMin","getMinutes","shorcutMonth","toggleTermToCard","existingTermIndex","innerHTML","currentCard","termSpan","setListOfallTerms","beforeColor","beforeStatus","termToDeleteIndex","counterModulo","slice","getDay","todayFull","hours","todayWithZero","monthWithZero","nextMonthFromDay","nextMonthDay","nextMonthDayArr","firstDayOfPrevMonth","StyledCover","StyledOptionBox","StyledSaveButton","StyledWrapLabels","StyledWrapTextAndLabels","StyledDate","StyledWrapTerms","OptionCover","taskTitleFeature","updateCard","handleLabelsVisibility","labelVisi","moveToAnotherListVisi","copyCardVisi","datePickerVisi","matchedTerms","closeAllListsWindowsFunc","reloadOptionCoverCompState","cardId","byElement","listOfAllPriorityTasks","setListOfPriority","setOptionCoverPostion","taskData","mainOffsetTop","offsetTop","coverBox","coverBoxHeight","offsetHeight","currentListScrollNow","scrollTop","listIndex","positionY","positionX","nameVisi","toggleDateVisibility","OptionCoverView","StyledTaskName","Detail_Input","StyledLightText","StyledStrongText","strong","DetailSuggestedElement","taskTitleList","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","StyledNameTask","TasksListView","changeTasksListTitle","tasksListTitle","addTasksList","TasksList","listName","setListOfTasksList","subTasksList","activeSubtasks","StyledDetailNav","StyledDetailUl","StyledDetailList","first","DetailCoverNav","tasksListVisi","StyledOptionWindow","StyledListElement","SubtasksOptionView","subTaskToCard","subTaskDelete","subTaskOptionsVisiToggle","SubtasksOption","subTaskNameOptionClicked","subTaskIndex","subTaskClicked","active","StyledWrap","StyledListTitle","StyledBarWrap","StyledTasksList","StyledGreyButton","marginTop0","StyledPerecntage","StyledBarContainer","StyledBarInner","StyledSubTaskWrap","StyledSubTaskName","StyledWarnningSpan","StyledEllipsis","TasksListInDetailCoverView","subTaskToggle","subTaskToggleVisi","subTaskInupChange","subTaskInputValue","addSubTaskFunc","makeThisTaskDone","deleteTasksList","subTaskOptionsVisi","textDecoration","TasksListInDetailCover","toggleForUpdate","matchedList","opacity","matchedTasksListIndex","subTaskId","subTaskActive","subTaskName","subTaskOptionsHideFunc","StyledCommentOptionWrap","StyledComment","greyBgc","marginLeft","hoverBgc","biggerSize","pointer","DetailCommentElemnt","editCommentToCard","commentChange","addCommentToCard","commentValue","commentVisi","commentVisiToggleFunc","StyledDetailMarks","StyledDetailDescription","StyledLabelsWrap","StyledPlaceholder","StyledTermWrap","StyledTerm","StyledStatus","DetailCoverMarks","termDoneCheckbox","matchedListTasks","margin","StyledDetailToolsWrap","DetailTools","StyledDetail","DetailCoverView","DetailInputElement","DetailCover","reloadDetalCoverCompState","componentWillUnmount","closeAllListsWindowsByListener","setListOfAllComments","currentCommentValue","commentIndexToDelete","matchedTerm","currentCardTerm","matchedComments","React","Main","showThemeOption","showThemeOptionFunction","visibilityOptionsCover","setVisibilityOptionCover","setOptionCoverData","visibilityTaskDetails","setVisibilityTaskDetails","setTaskTitleList","setTaskName","setTaskId","idUpdatedList","setIdUpdatedList","setListOfAllTasksId","setListOfAllBadges","tasksListVisibility","setTasksListVisibility","refresh","setRefresh","hideTheme","newTask","correctList","matchedComment","theBiggestId","matchedDate","cover","byButton","indexOfPriorityToDelete","indexOfCommentToDelete","indexOfTermToDelete","indexOfBadgedToDelete","indexOfTaskListToDelete","matchedIdList","taskIndex","updatedTitle","listIdToMove","listIdToDelte","CoreField","biggerThanLast","theBiggest","Number","offsetLeft","clickedCard","clickedCardWrapLabel","nameUpdatedTask","nameUpdatedList","newTitle","addToThisIndex","copy","splicedElement","blank","tasksToCopy","listNewName","tasksToCopyArr","newIdForCard","badge","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a49409e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/myLogo.d7d06777.png\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledList = styled.li`\r\n  width: ${(props) => (props.lastEle ? \"auto\" : \"75px\")};\r\n  height: 100%;\r\n  text-align: center;\r\n  background-color: rgba(118, 206, 142, 0.65);\r\n  border-radius: 4px;\r\n  transition: 0.1s linear;\r\n  margin-right: 4px;\r\n  margin-left: ${(props) => (props.lastEle ? \"auto\" : \"initial\")};\r\n  padding: ${(props) => (props.lastEle ? \"initial\" : \"8px 0px\")};\r\n  z-index: 1;\r\n\r\n  &:hover {\r\n    background-color: ${(props) =>\r\n      props.hoverBGC ? `${props.lighThisColor} !important` : null};\r\n  }\r\n`;\r\n\r\nconst Link = styled.a`\r\n  text-decoration: none;\r\n  font-size: 1.5rem;\r\n  color: #fff;\r\n`;\r\n\r\nfunction NavListView({ themeFunction, linkTitle, lighThisColor }) {\r\n  const colorBgcHSL = `hsl(${lighThisColor.color[0]},${lighThisColor.color[1]}%,${lighThisColor.color[2]}%)`;\r\n  return (\r\n    <StyledList\r\n      className=\"list theme\"\r\n      onClick={themeFunction}\r\n      hoverBGC\r\n      lighThisColor={colorBgcHSL}\r\n    >\r\n      <Link className={`${linkTitle === \"Theme\" ? \"theme\" : null}`}>\r\n        {linkTitle}\r\n      </Link>\r\n    </StyledList>\r\n  );\r\n}\r\n\r\nexport default NavListView;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NavListView from \"./NavListView/NavListView\";\r\nimport myLogo from \"../../img/myLogo.png\";\r\n\r\nconst StyledNav = styled.nav`\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: #40a35b;\r\n  padding: 0px 4px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledUl = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  flex-shrink: 1;\r\n  width: 100%;\r\n  height: 40px;\r\n  list-style: none;\r\n  cursor: pointer;\r\n  padding: 4px 0px;\r\n`;\r\n\r\nconst StyledList = styled.li`\r\n  width: ${(props) => (props.lastEle ? \"auto\" : \"75px\")};\r\n  height: 100%;\r\n  text-align: center;\r\n  background-color: #76ce8e;\r\n  border-radius: 4px;\r\n  transition: 0.1s linear;\r\n  margin-right: 4px;\r\n  margin-left: ${(props) => (props.lastEle ? \"auto\" : \"initial\")};\r\n  padding: ${(props) => (props.lastEle ? \"initial\" : \"8px 0px\")};\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 120px;\r\n  height: 100%;\r\n  border-radius: 4px;\r\n  padding: 7.5px;\r\n  background-color: #79be8c;\r\n  font-size: 1.6rem;\r\n  color: #fff;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    background-color: #64b37a;\r\n  }\r\n\r\n  &::placeholder {\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst Styledlogo = styled.img`\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\n\r\nconst StyledHiperLink = styled.a`\r\n  position: fixed;\r\n  top: 5px;\r\n  left: calc(50% - 15px);\r\n  z-index: 0;\r\n`;\r\n\r\nconst navigationElements = [\"Your list\", \"Theme\", \"Help\"];\r\n\r\nconst Navigation = ({ themeFunction, lighThisColor }) => {\r\n  return (\r\n    <StyledNav className=\"nav\">\r\n      <StyledUl>\r\n        {navigationElements.map((element) => (\r\n          <NavListView\r\n            themeFunction={element === \"Theme\" ? themeFunction : null}\r\n            linkTitle={element}\r\n            key={element}\r\n            lighThisColor={lighThisColor}\r\n          />\r\n        ))}\r\n        <StyledHiperLink\r\n          href=\"http://matthave.pl/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <Styledlogo src={myLogo}></Styledlogo>\r\n        </StyledHiperLink>\r\n        <StyledList lastEle>\r\n          <StyledInput className=\"item\" placeholder=\"Search...\" />\r\n        </StyledList>\r\n      </StyledUl>\r\n    </StyledNav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport NavigationView from \"../../components/Navigation/NavigationView\";\r\nimport Color from \"color\";\r\n\r\nclass Navigations extends Component {\r\n  themeFunction = () => {\r\n    this.props.themeToggle(!this.props.themeOption);\r\n  };\r\n\r\n  render() {\r\n    const { whichColor } = this.props;\r\n\r\n    const currentLiColor = Color(whichColor[0]);\r\n    const lighThisColor = currentLiColor.lighten(0.1);\r\n    return (\r\n      <>\r\n        <NavigationView\r\n          themeFunction={this.themeFunction}\r\n          lighThisColor={lighThisColor}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigations;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledNav = styled.nav`\r\n  display: flex;\r\n  align-items: \"center\";\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: #4bbf6b;\r\n  padding: 0 7.5px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledInputTitle = styled.input`\r\n  width: auto;\r\n  height: 30px;\r\n  background-color: transparent;\r\n  border-radius: 4px;\r\n  margin: auto 5px 0px 5px;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: white;\r\n  padding: 0 10px;\r\n  transition: 0.1s linear;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: ${(props) =>\r\n      props.hoverBGC ? `${props.lighThisColor}` : null};\r\n  }\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    color: #000;\r\n  }\r\n\r\n  &::placeholder {\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst StyledShowMenu = styled.button`\r\n  height: 30px;\r\n  background-color: ${(props) =>\r\n    props.hoverBGC ? `${props.lighThisColor}` : null};\r\n  border-radius: 4px;\r\n  margin: auto 0 0 auto;\r\n  font-size: 15px;\r\n  font-weight: 400;\r\n  color: white;\r\n  padding: 0 10px;\r\n  transition: 0.1s linear;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 5px 1px rgba(50, 50, 50, 0.1);\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  font-size: 15px;\r\n  margin-right: 5px;\r\n`;\r\n\r\nfunction MenuBarView({\r\n  boardNameValue,\r\n  boardNameChangeFunc,\r\n  lighThisColor,\r\n  slideMenuFunc,\r\n}) {\r\n  const colorOfBgc = `hsl(${lighThisColor.color[0]},${lighThisColor.color[1]}%,${lighThisColor.color[2]}%)`;\r\n  return (\r\n    <StyledNav className=\"menuBar\">\r\n      <StyledInputTitle\r\n        onChange={(e) => boardNameChangeFunc(e)}\r\n        value={boardNameValue}\r\n        placeholder=\"Name your board...\"\r\n        hoverBGC\r\n        lighThisColor={colorOfBgc} // Send this color to styledComp as a props\r\n      />\r\n      <StyledShowMenu\r\n        hoverBGC\r\n        lighThisColor={colorOfBgc}\r\n        className=\"menu\"\r\n        onClick={() => slideMenuFunc()}\r\n      >\r\n        <StyledIcon className=\"fas fa-ellipsis-v menu\" /> Show Menu\r\n      </StyledShowMenu>\r\n    </StyledNav>\r\n  );\r\n}\r\n\r\nexport default MenuBarView;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMenu = styled.div`\r\n  position: fixed;\r\n  top: calc(0% + 40px);\r\n  bottom: 17.5px;\r\n  right: 0;\r\n  width: 320px;\r\n  display: flex;\r\n  align-content: flex-start;\r\n  transform: ${(props) =>\r\n    props.showMenu ? \"translateX(0px)\" : \"translateX(100vw)\"};\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  background-color: #f4f5f7;\r\n  transition: 0.3s linear;\r\n  z-index: 999;\r\n`;\r\n\r\nconst StyledLabelTitle = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  border-bottom: 1px solid #42516e;\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n  margin: 10px;\r\n  font-size: 17px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  margin-left: 10px;\r\n  font-size: 17px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledBack = styled.span`\r\n  font-size: 19px;\r\n  cursor: pointer;\r\n  color: #42516e;\r\n  opacity: 0;\r\n`;\r\n\r\nconst StyledTitle = styled.h4``;\r\n\r\nconst StyledWrapList = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 42.5px;\r\n  line-height: 42.5px;\r\n  padding: 0px 15px;\r\n  margin-bottom: 10px;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    background-color: #e6e8ed;\r\n  }\r\n`;\r\n\r\nconst StyledList = styled.div`\r\n  font-size: 1.4rem;\r\n  cursor: pointer;\r\n  color: #172b4d;\r\n`;\r\n\r\nconst StyledSquarBGC = styled.span`\r\n  width: 22.5px;\r\n  height: 22.5px;\r\n  background-color: #4bbf6b;\r\n  border-radius: 4px;\r\n  margin: auto 11px auto 0px;\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  font-size: 17.5px;\r\n  margin: auto 15px auto 0px;\r\n  color: #172b4d;\r\n`;\r\n\r\nfunction MenuSlideView({ slideMenuState }) {\r\n  return (\r\n    <StyledMenu showMenu={slideMenuState} className=\"menu\">\r\n      <StyledLabelTitle className=\"menu\">\r\n        <StyledBack className=\"fas fa-angle-left menu\" />\r\n        <StyledTitle className=\"menu\">Menu</StyledTitle>\r\n        <StyledX className=\"fas fa-times\" />\r\n      </StyledLabelTitle>\r\n      <StyledWrapList>\r\n        <StyledSquarBGC className=\"squarMenuBGC menu\" />\r\n        <StyledList className=\"menu\">Change background</StyledList>\r\n      </StyledWrapList>\r\n\r\n      <StyledWrapList>\r\n        <StyledIcon className=\"fas fa-tag menu\" />\r\n        <StyledList className=\"menu\">Labels</StyledList>\r\n      </StyledWrapList>\r\n\r\n      <StyledWrapList>\r\n        <StyledIcon className=\"fas fa-archive menu\" />\r\n        <StyledList className=\"menu\">Archived elements</StyledList>\r\n      </StyledWrapList>\r\n    </StyledMenu>\r\n  );\r\n}\r\n\r\nexport default MenuSlideView;\r\n","import React, { Component } from \"react\";\r\nimport MenuBarView from \"../../components/MenuSlide/MenuBarView\";\r\nimport MenuSlideView from \"../../components/MenuSlide/MenuSlideView\";\r\nimport Color from \"color\";\r\n\r\nexport class MenuBar extends Component {\r\n  state = {\r\n    boardNameValue: \"Your Todo List\",\r\n    slideMenuState: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"click\", (e) => this.hideMenuFunc(e));\r\n  }\r\n\r\n  boardNameChangeFunc = (e) => {\r\n    this.setState({ boardNameValue: e.target.value.substr(0, 17) });\r\n  };\r\n\r\n  slideMenuFunc = () => {\r\n    this.setState({ slideMenuState: true });\r\n  };\r\n\r\n  hideMenuFunc = (e) => {\r\n    const searchingClass = e.target.className;\r\n    if (!searchingClass.includes(\"menu\"))\r\n      this.setState({ slideMenuState: false });\r\n  };\r\n\r\n  render() {\r\n    //Import current color of mainElement and by Color set it lighten\r\n    const currentLiColor = Color(this.props.whichColor[0]);\r\n    const lighThisColor = currentLiColor.lighten(0.05);\r\n\r\n    const { boardNameValue, slideMenuState } = this.state;\r\n    return (\r\n      <>\r\n        <MenuBarView\r\n          boardNameValue={boardNameValue}\r\n          boardNameChangeFunc={this.boardNameChangeFunc}\r\n          slideMenuFunc={this.slideMenuFunc}\r\n          lighThisColor={lighThisColor}\r\n        />\r\n        <MenuSlideView slideMenuState={slideMenuState} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuBar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledSubTasksCounter = styled.h4`\r\n  align-self: ${(props) => (props.card ? \"null\" : \"flex-start\")};\r\n  border-radius: 4px;\r\n  padding: 2.5px 5px;\r\n  margin: ${(props) => (props.card ? \"5px 0px 0px 3px\" : \"0px 0px 0px 3px\")};\r\n  font-size: 12px;\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 5px;\r\n  font-size: 12.5px;\r\n  vertical-align: middle;\r\n`;\r\n\r\nfunction TaskPreviewInCard({ totalTasks, unActiveTasks, card }) {\r\n  return (\r\n    <>\r\n      {totalTasks !== 0 ? (\r\n        <StyledSubTasksCounter\r\n          card={card}\r\n          style={{\r\n            backgroundColor: `${\r\n              unActiveTasks === totalTasks ? \"#61BD4F\" : \"initial\"\r\n            }`,\r\n            color: `${unActiveTasks === totalTasks ? \"#fff\" : \"#999\"}`,\r\n          }}\r\n        >\r\n          <StyledIcon className=\"fas fa-check-double\" />\r\n          {unActiveTasks}/{totalTasks}\r\n        </StyledSubTasksCounter>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TaskPreviewInCard;\r\n","import React, { Component } from \"react\";\r\nimport TasksPreviewCard from \"../TasksList/TasksPreviewInCard/TaskPreviewInCard\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledContentWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  pointer-events: none;\r\n  padding: 2px;\r\n`;\r\n\r\nconst StyledContent = styled.h3`\r\n  flex-grow: 1;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #172b4d;\r\n`;\r\n\r\nconst StyledEdit = styled.span`\r\n  margin: 0 5px;\r\n  align-self: center;\r\n  pointer-events: initial;\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 5px;\r\n  font-size: 12.5px;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst StyledTermInCard = styled.span`\r\n  color: #888;\r\n  font-size: 12.5px;\r\n  letter-spacing: 0.5px;\r\n  margin-left: 3px;\r\n`;\r\n\r\nclass Card extends Component {\r\n  state = {\r\n    selected: false,\r\n    scrollHeight: 0,\r\n    taskk: \"\",\r\n    offsetX: \"\",\r\n    offsetY: \"\",\r\n    cardH: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      taskk: this.props.task.taskName,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.removeEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n  }\r\n\r\n  mouseDownFeature = (e) => {\r\n    if (e.target.classList[0] !== \"card\") return;\r\n    const card = document.getElementById(this.props.task.id);\r\n    const cardH = card.clientHeight;\r\n    this.setState({\r\n      selected: true,\r\n      offsetX: e.nativeEvent.offsetX,\r\n      offsetY: e.nativeEvent.offsetY,\r\n      cardH: cardH,\r\n    });\r\n\r\n    e.target.style.zIndex = 999;\r\n    document.addEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.addEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n  };\r\n\r\n  mouseUpFeature = (e) => {\r\n    const card = document.getElementById(this.props.task.id);\r\n    if (e.target.classList[0] !== \"card\") return;\r\n    card.style.cursor = \"pointer\";\r\n    card.style.position = \"static\";\r\n    card.style.transform = \"rotate(0deg)\";\r\n    card.style.boxShadow = null;\r\n    card.style.zIndex = 0;\r\n\r\n    const {\r\n      scrollPosition,\r\n      wholeList,\r\n      addNewCardFeature,\r\n      deleteCardFeatureByMove,\r\n      listId,\r\n    } = this.props;\r\n\r\n    const scrollHeighFromMain = Math.floor(scrollPosition);\r\n    const taskId = card.getAttribute(\"id\");\r\n    const draggedCard = document.getElementById(taskId);\r\n\r\n    const draggedCardChildren = draggedCard.children;\r\n    const draggenCardLabelsChildren = [...draggedCardChildren[0].children]; //Weard thing that is need to properly dragging without doubling card content?\r\n    const draggedCardTermChildren = [...draggedCard.children[2].children]; //Weard thing that is need to properly dragging without doubling card content?\r\n    const draggedCardTasksList = [...draggedCard.children[3].children]; //Weard thing that is need to properly dragging without doubling card content?\r\n\r\n    if (e.pageX < 285 - scrollHeighFromMain) {\r\n      if (wholeList[0].id === listId) return this.mouseLeaveFeature(card); //When put card in this same place call it\r\n      draggenCardLabelsChildren.forEach((ele) => {\r\n        ele.textContent = \"\";\r\n      });\r\n      draggedCardTermChildren.forEach((ele) => {\r\n        ele.textContent = \"\";\r\n      });\r\n      draggedCardTasksList.forEach((ele) => {\r\n        ele.textContent = \"\";\r\n      });\r\n      deleteCardFeatureByMove(listId, taskId);\r\n      addNewCardFeature(wholeList[0].id, card.textContent, taskId);\r\n    }\r\n\r\n    for (let i = 1; i <= 10; i++) {\r\n      if (\r\n        e.pageX > 285 * i - scrollHeighFromMain &&\r\n        e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n        wholeList.length >= i + 1\r\n      ) {\r\n        if (wholeList[i].id === listId) return this.mouseLeaveFeature(card); //When put card in this same place\r\n        draggenCardLabelsChildren.forEach((ele) => {\r\n          ele.textContent = \"\";\r\n        });\r\n        draggedCardTermChildren.forEach((ele) => {\r\n          ele.textContent = \"\";\r\n        });\r\n        draggedCardTasksList.forEach((ele) => {\r\n          ele.textContent = \"\";\r\n        });\r\n        deleteCardFeatureByMove(listId, taskId);\r\n        addNewCardFeature(wholeList[i].id, card.textContent, taskId);\r\n      }\r\n    }\r\n\r\n    this.props.isDragAndDropTrue(false);\r\n    this.props.clearAllBlankSpan();\r\n\r\n    document.removeEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.removeEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n\r\n    this.setState({\r\n      selected: false,\r\n    });\r\n  };\r\n\r\n  mouseMoveFeature = (e) => {\r\n    const scrollHeighFromMain = Math.floor(this.props.scrollPosition);\r\n    const card = document.getElementById(this.props.task.id);\r\n\r\n    if (this.state.selected) {\r\n      card.style.left = `${e.pageX - card.getBoundingClientRect().width / 2}px`;\r\n      card.style.top = `${e.pageY - card.getBoundingClientRect().height / 2}px`;\r\n\r\n      card.style.position = \"fixed\";\r\n      card.style.cursor = \"grabbing\";\r\n      card.style.transform = \"rotate(5deg)\";\r\n      card.style.boxShadow = \"0px 10px 20px 0.6px rgba(0,0,0,0.25)\";\r\n      card.style.zIndex = 999;\r\n\r\n      const allBlankSpan = document.querySelectorAll(\".blank\");\r\n      allBlankSpan.forEach((all) => {\r\n        all.style.width = \"0\";\r\n        all.style.height = \"0\";\r\n        all.style.backgroundColor = \"transparent\";\r\n      });\r\n\r\n      for (let i = 1; i < 10; i++) {\r\n        if (e.pageX < 285 - scrollHeighFromMain) {\r\n          allBlankSpan[0].style.width = \"100%\";\r\n          allBlankSpan[0].style.height = `${this.state.cardH}px`;\r\n          allBlankSpan[0].style.backgroundColor = \"#dddfe5\";\r\n          allBlankSpan[0].style.borderRadius = \"5px\";\r\n        } else if (\r\n          e.pageX > 285 * i - scrollHeighFromMain &&\r\n          e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n          this.props.wholeList.length >= i + 1\r\n        ) {\r\n          allBlankSpan[i].style.width = \"100%\";\r\n          allBlankSpan[i].style.height = `${this.state.cardH}px`;\r\n          allBlankSpan[i].style.backgroundColor = \"#dddfe5\";\r\n          allBlankSpan[i].style.borderRadius = \"5px\";\r\n        }\r\n      }\r\n    }\r\n\r\n    this.props.isDragAndDropTrue(true);\r\n  };\r\n\r\n  mouseLeaveFeature = (card) => {\r\n    const target = card;\r\n    target.style.cursor = \"pointer\";\r\n    target.style.position = \"static\";\r\n    target.style.transform = \"rotate(0deg)\";\r\n    target.style.zIndex = 0;\r\n    this.props.clearAllBlankSpan();\r\n    this.props.isDragAndDropTrue(false);\r\n\r\n    document.removeEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.removeEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n\r\n    this.setState({\r\n      selected: false,\r\n    });\r\n  };\r\n\r\n  labelFontSizeToggle = (hideFontSizeLabel) => {\r\n    this.props.setHideFontSizeLabel(!hideFontSizeLabel);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      task,\r\n      inputTitle,\r\n      listId,\r\n      taskDetailsFunction,\r\n      visibilityOptionFunction,\r\n      hideFontSizeLabel,\r\n      listOfAllTasksList,\r\n    } = this.props;\r\n\r\n    const matchedTasksList = listOfAllTasksList.filter(\r\n      (ele) => ele.id === task.id\r\n    );\r\n\r\n    let unActiveTasks = 0;\r\n    let totalTasks = 0;\r\n\r\n    matchedTasksList.forEach((ele) => {\r\n      totalTasks += ele.totalOfSubTasks;\r\n      unActiveTasks += ele.unActiveSubtasks;\r\n    });\r\n\r\n    return (\r\n      <div\r\n        id={task.id}\r\n        className=\"card\"\r\n        onDoubleClick={(e) =>\r\n          taskDetailsFunction(task.taskName, inputTitle, listId, task.id)\r\n        }\r\n        onMouseDown={(e) => this.mouseDownFeature(e)}\r\n        style={{\r\n          border: task.priority === \"priority\" ? \"1px solid #db4a36\" : null,\r\n        }}\r\n      >\r\n        <div\r\n          className=\"card_wrapLabel\"\r\n          onClick={() => this.labelFontSizeToggle(hideFontSizeLabel)}\r\n          style={{\r\n            fontSize: hideFontSizeLabel ? 0 : \"12px\",\r\n            pointerEvents: \"none\",\r\n          }}\r\n        >\r\n          {task.badges.map((ele) => (\r\n            <div\r\n              key={ele.color}\r\n              id={ele.labelId}\r\n              className=\"labelElement\"\r\n              style={{ backgroundColor: ele.color, pointerEvents: \"none\" }}\r\n            >\r\n              {ele.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <StyledContentWrap>\r\n          <StyledContent>{task.taskName}</StyledContent>\r\n          <StyledEdit\r\n            className=\"fas fa-highlighter\"\r\n            onClick={(e) =>\r\n              visibilityOptionFunction(\r\n                e,\r\n                true,\r\n                task,\r\n                listId,\r\n                task.currentListName,\r\n                task.id\r\n              )\r\n            }\r\n          />\r\n        </StyledContentWrap>\r\n\r\n        <div\r\n          style={{ width: \"100%\", pointerEvents: \"none\" }}\r\n          id={`${task.id}term`}\r\n        >\r\n          {task.date.map((ele) => (\r\n            <StyledTermInCard\r\n              key={ele.id}\r\n              className={ele.classN}\r\n              style={{ backgroundColor: ele.statusColor, color: ele.fontColor }}\r\n            >\r\n              <StyledIcon className=\"far fa-clock\" />\r\n              {`${ele.day} ${ele.monthName} ${ele.status}`}\r\n            </StyledTermInCard>\r\n          ))}\r\n        </div>\r\n        <div>\r\n          <TasksPreviewCard\r\n            unActiveTasks={unActiveTasks}\r\n            totalTasks={totalTasks}\r\n            card={true}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledAddButton = styled.button`\r\n  background-color: #5aac44;\r\n  border-radius: 5px;\r\n  color: white;\r\n  padding: 8px 20px;\r\n  margin: 5px 0px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #67ba50;\r\n  }\r\n`;\r\n\r\nconst StyledSpanX = styled.span`\r\n  font-size: 2.3rem;\r\n  vertical-align: middle;\r\n  color: #666;\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction ListButtons({\r\n  showAddField,\r\n  id,\r\n  textAreaValue,\r\n  addNewCardFeature,\r\n  swapAddFieldFeature,\r\n}) {\r\n  return (\r\n    <>\r\n      {showAddField ? (\r\n        <>\r\n          <StyledAddButton onClick={() => addNewCardFeature(id, textAreaValue)}>\r\n            Add Card\r\n          </StyledAddButton>\r\n          <StyledSpanX\r\n            className=\"fas fa-times\"\r\n            onClick={() => swapAddFieldFeature(\"SpanX\")}\r\n          />\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListButtons;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledInput = styled.input`\r\n  width: 220px;\r\n  background-color: #ebecf0;\r\n  border-radius: 1px;\r\n  padding: 5px 4px;\r\n  font-size: 1.4rem;\r\n  font-weight: 600;\r\n  color: #172b4d;\r\n\r\n  &:focus {\r\n    background-color: white;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n\r\n  &::placeholder {\r\n    font-weight: 400;\r\n    color: #779;\r\n  }\r\n`;\r\n\r\nconst StyledInputCover = styled.div`\r\n  display: inline-block;\r\n  width: 220px;\r\n  background-color: #ebecf0;\r\n  border-radius: 1px;\r\n  padding: 5px 4px;\r\n  font-size: 1.4rem;\r\n  font-weight: 600;\r\n  color: #172b4d;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nfunction ListInput({\r\n  selectedList,\r\n  id,\r\n  inputTitle,\r\n  listOptionToggle,\r\n  setListTitle,\r\n}) {\r\n  return (\r\n    <>\r\n      {selectedList ? (\r\n        <StyledInputCover\r\n          onChange={(e) => setListTitle(e, id)}\r\n          className=\"input\"\r\n        >\r\n          {inputTitle}\r\n        </StyledInputCover>\r\n      ) : (\r\n        <StyledInput\r\n          value={inputTitle}\r\n          onChange={(e) => setListTitle(e, id)}\r\n          className=\"input\"\r\n          placeholder=\"Add any title...\"\r\n        />\r\n      )}\r\n      <span\r\n        className=\"fas fa-ellipsis-h listOptions\"\r\n        id={`${id}ellips`}\r\n        onClick={(e) => listOptionToggle(e)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListInput;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledOptionList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: 43px;\r\n  left: 230px;\r\n  width: 280px;\r\n  height: 310px;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n  box-shadow: 0px 0.5px 0px 0.5px #aaa;\r\n  z-index: 999;\r\n  cursor: initial;\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  position: absolute;\r\n  top: 12px;\r\n  right: 12px;\r\n  font-size: 14px;\r\n  color: #aaa;\r\n  cursor: pointer;\r\n`;\r\nconst StyledTitle = styled.h3`\r\n  width: 100%;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  border-bottom: 1px solid #ccc;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #aaa;\r\n`;\r\n\r\nconst StyledUl = styled.ul`\r\n  list-style: none;\r\n  border-bottom: 1px solid #ccc;\r\n  padding: 7.5px 0px;\r\n\r\n  &:nth-last-child(1) {\r\n    border-bottom: none;\r\n  }\r\n`;\r\nconst StyledList = styled.li`\r\n  padding: 10px;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  color: #172b4d;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #f1f2f5;\r\n  }\r\n`;\r\n\r\nfunction ListOptions({\r\n  deleteList,\r\n  listId,\r\n  addNewCardFromList,\r\n  moveListVisibilityFunc,\r\n  deleteCardsVisibility,\r\n  moveCardsVisibility,\r\n  copyListVisibility,\r\n}) {\r\n  return (\r\n    <StyledOptionList className=\"listOptions\">\r\n      <StyledX className=\"fas fa-times\" />\r\n      <StyledTitle className=\"listOptions\">List Actions</StyledTitle>\r\n      <StyledUl className=\"listOptions\">\r\n        <StyledList onClick={() => addNewCardFromList()}>\r\n          Add card...\r\n        </StyledList>\r\n        <StyledList\r\n          onClick={() => copyListVisibility()}\r\n          className=\"listOptions\"\r\n        >\r\n          Copy list...\r\n        </StyledList>\r\n        <StyledList\r\n          onClick={() => moveListVisibilityFunc()}\r\n          className=\"listOptions\"\r\n        >\r\n          Move list...\r\n        </StyledList>\r\n      </StyledUl>\r\n\r\n      <StyledUl className=\"listOptions\">\r\n        <StyledList\r\n          onClick={() => moveCardsVisibility(listId)}\r\n          className=\"listOptions\"\r\n        >\r\n          Move every card in this list...\r\n        </StyledList>\r\n        <StyledList\r\n          onClick={() => deleteCardsVisibility(listId)}\r\n          className=\"listOptions\"\r\n        >\r\n          Archive every card in this list...\r\n        </StyledList>\r\n      </StyledUl>\r\n      <StyledUl className=\"listOptions\">\r\n        <StyledList onClick={() => deleteList(listId)}>\r\n          Archive this list\r\n        </StyledList>\r\n      </StyledUl>\r\n    </StyledOptionList>\r\n  );\r\n}\r\n\r\nexport default ListOptions;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMoveListWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: 43px;\r\n  left: 230px;\r\n  width: 280px;\r\n  height: 150px;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n  box-shadow: 0px 0.5px 0px 0.5px #aaa;\r\n  z-index: 999;\r\n  cursor: initial;\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  position: absolute;\r\n  top: 12px;\r\n  right: 12px;\r\n  font-size: 14px;\r\n  color: #aaa;\r\n  cursor: pointer;\r\n`;\r\nconst StyledTitle = styled.h3`\r\n  width: 100%;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  border-bottom: 1px solid #ccc;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #aaa;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: #5aac44;\r\n  border-radius: 4px;\r\n  margin: 0 auto;\r\n  margin-top: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: #6abc54;\r\n  }\r\n`;\r\n\r\nconst StyledSelectDiv = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 95%;\r\n  height: 45px;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 2.5px 5px;\r\n  margin: 5px auto;\r\n  margin-top: 15px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledPossibleMoveOptions = styled.div`\r\n  position: absolute;\r\n  top: 40px;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  border: 1px solid black;\r\n`;\r\n\r\nconst StyledAvailableEle = styled.div`\r\n  width: 100%;\r\n  height: 25px;\r\n  line-height: 25px;\r\n  font-size: 15px;\r\n  padding: 2.5px 5px;\r\n  pointer-events: ${(props) => (props.disabled ? \"none\" : \"initial\")};\r\n  color: ${(props) => (props.disabled ? \"#999\" : \"initial\")};\r\n  cursor: ${(props) => (props.disabled ? \"initial\" : \"pointer\")};\r\n\r\n  &:hover {\r\n    background-color: #2099df;\r\n  }\r\n`;\r\n\r\nconst StyledSelectText = styled.h3`\r\n  width: 100%;\r\n  padding: 2.5px 5px;\r\n  font-weight: 500;\r\n  font-size: ${(props) => (props.smallerText ? \"11px\" : \"13px\")};\r\n  color: ${(props) => (props.smallerText ? \"#999\" : \"#333\")};\r\n`;\r\n\r\nfunction ListMoveView({\r\n  togglePossibleMoveForList,\r\n  possibleMoveListVisi,\r\n  availableLists,\r\n  setThisPlaceToDiv,\r\n  moveThisList,\r\n  listId,\r\n}) {\r\n  return (\r\n    <StyledMoveListWrap className=\"listOptions\">\r\n      <StyledX className=\"fas fa-times\" />\r\n      <StyledTitle className=\"listOptions\">Move list</StyledTitle>\r\n      <StyledSelectDiv\r\n        onClick={() => togglePossibleMoveForList()}\r\n        className=\"listOptions\"\r\n      >\r\n        <StyledSelectText smallerText className=\"listOptions\">\r\n          Position\r\n        </StyledSelectText>\r\n        <StyledSelectText className=\"available listOptions\">\r\n          Select list place\r\n        </StyledSelectText>\r\n        {possibleMoveListVisi ? (\r\n          <StyledPossibleMoveOptions>\r\n            {availableLists.map((ele) => (\r\n              <StyledAvailableEle\r\n                key={ele.list}\r\n                disabled={ele.currentList === \"true\" ? true : false}\r\n                onClick={(e) => setThisPlaceToDiv(e)}\r\n                className=\"listOptions\"\r\n              >\r\n                {ele.list}\r\n                {`${ele.currentList === \"true\" ? \" (Actual)\" : \"\"}`}\r\n              </StyledAvailableEle>\r\n            ))}\r\n          </StyledPossibleMoveOptions>\r\n        ) : null}\r\n      </StyledSelectDiv>\r\n      <StyledButton onClick={() => moveThisList(listId)}>Move It</StyledButton>\r\n    </StyledMoveListWrap>\r\n  );\r\n}\r\n\r\nexport default ListMoveView;\r\n","import React, { Component } from \"react\";\r\nimport ListMoveView from \"../../components/List/ListOptions/ListMove/ListMoveView\";\r\n\r\nclass ListMove extends Component {\r\n  setThisPlaceToDiv = (e) => {\r\n    const availableDiv = document.querySelector(\".available\");\r\n    availableDiv.textContent = e.target.textContent;\r\n  };\r\n\r\n  moveThisList = () => {\r\n    const availableDiv = document.querySelector(\".available\").textContent;\r\n    if (availableDiv !== \"Select list place\") {\r\n      const copyWholeList = [...this.props.wholeList];\r\n      const currentListIndex = copyWholeList.findIndex(\r\n        (ele) => ele.id === this.props.listId\r\n      );\r\n\r\n      const currentList = copyWholeList.find(\r\n        (ele) => ele.id === this.props.listId\r\n      );\r\n\r\n      copyWholeList.splice(currentListIndex, 1); //Delete list from current place\r\n      copyWholeList.splice(availableDiv - 1, 0, currentList); //Delete nothing from according place, but put there preview deleted list\r\n\r\n      this.props.setWholeList(copyWholeList);\r\n      this.props.moveListVisibilityFunc();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      togglePossibleMoveForList,\r\n      possibleMoveListVisi,\r\n      wholeList,\r\n      listId,\r\n    } = this.props;\r\n\r\n    const availableLists = wholeList.map((ele, index) => {\r\n      return {\r\n        list: index + 1,\r\n        currentList: `${ele.id === this.props.listId}`,\r\n      };\r\n    });\r\n\r\n    return (\r\n      <ListMoveView\r\n        togglePossibleMoveForList={togglePossibleMoveForList}\r\n        possibleMoveListVisi={possibleMoveListVisi}\r\n        availableLists={availableLists}\r\n        setThisPlaceToDiv={this.setThisPlaceToDiv}\r\n        moveThisList={this.moveThisList}\r\n        listId={listId}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListMove;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMoveListWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: 43px;\r\n  left: 230px;\r\n  width: 280px;\r\n  height: 200px;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n  box-shadow: 0px 0.5px 0px 0.5px #aaa;\r\n  z-index: 999;\r\n  cursor: initial;\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  position: absolute;\r\n  top: 12px;\r\n  right: 12px;\r\n  font-size: 14px;\r\n  color: #aaa;\r\n  cursor: pointer;\r\n`;\r\nconst StyledTitle = styled.h3`\r\n  width: 100%;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  border-bottom: 1px solid #ccc;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #aaa;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 95%;\r\n  height: 32.5px;\r\n  background-color: #cf513d;\r\n  border-radius: 4px;\r\n  margin: 0 auto;\r\n  margin-top: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: #ef715d;\r\n  }\r\n`;\r\n\r\nconst StyledText = styled.h4`\r\n  width: 92.5%;\r\n  margin: 15px auto;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n`;\r\n\r\nfunction ListDeleteCardsWindowView({ deleteCardsFromListFunc, listId }) {\r\n  return (\r\n    <StyledMoveListWrap className=\"listOptions\">\r\n      <StyledX className=\"fas fa-times\" />\r\n      <StyledTitle className=\"listOptions\">Archive All Cards</StyledTitle>\r\n      <StyledText className=\"listOptions\">\r\n        {\r\n          \"This option will remove all cards from the list on the board. To view archived cards and restore them, click 'Show Menu' > 'Archived elements'\"\r\n        }\r\n      </StyledText>\r\n      <StyledButton onClick={() => deleteCardsFromListFunc(listId)}>\r\n        Archive All\r\n      </StyledButton>\r\n    </StyledMoveListWrap>\r\n  );\r\n}\r\n\r\nexport default ListDeleteCardsWindowView;\r\n","import React, { Component } from \"react\";\r\nimport ListDeleteCardsWindowView from \"../../components/List/ListOptions/ListDeleteCardsWindow/ListDeleteCardsWindowView\";\r\n\r\nclass ListDeleteCardsWindow extends Component {\r\n  deleteCardsFromListFunc = (listId) => {\r\n    const copyWholeList = [...this.props.wholeList];\r\n    const currentList = copyWholeList.filter((list) => list.id === listId); //Finding currentList\r\n    const everyCardId = []; //All card id container\r\n    currentList[0].tasks.forEach((ele) => {\r\n      everyCardId.push(ele.id);\r\n    }); // Add card id to container\r\n    everyCardId.forEach((ele) => {\r\n      //Use deleteCard function to every card which id is in container\r\n      this.props.deleteCard(listId, ele, \"byButton\");\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { listId } = this.props;\r\n    return (\r\n      <ListDeleteCardsWindowView\r\n        deleteCardsFromListFunc={this.deleteCardsFromListFunc}\r\n        listId={listId}\r\n      ></ListDeleteCardsWindowView>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListDeleteCardsWindow;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMoveListWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: 43px;\r\n  left: 230px;\r\n  width: 280px;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n  box-shadow: 0px 0.5px 0px 0.5px #aaa;\r\n  z-index: 999;\r\n  cursor: initial;\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  position: absolute;\r\n  top: 12px;\r\n  right: 12px;\r\n  font-size: 14px;\r\n  color: #aaa;\r\n  cursor: pointer;\r\n`;\r\nconst StyledTitle = styled.h3`\r\n  width: 100%;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  border-bottom: 1px solid #ccc;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #aaa;\r\n`;\r\n\r\nconst StyledAvailableList = styled.div`\r\n  width: 100%;\r\n  margin: 10px auto;\r\n`;\r\n\r\nconst StyledNameList = styled.h4`\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  color: ${(props) => (props.disabled ? \"#999\" : \"#333\")};\r\n  pointer-events: ${(props) => (props.disabled ? \"none\" : \"initial\")};\r\n  cursor: ${(props) => (props.disabled ? \"initial\" : \"pointer\")};\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.disabled ? \"initial\" : \"#EBECF0\")};\r\n  }\r\n`;\r\n\r\nfunction ListMoveCardsWindowView({ availableLists, moveCardsFromListFunc }) {\r\n  return (\r\n    <StyledMoveListWrap className=\"listOptions\">\r\n      <StyledX className=\"fas fa-times\" />\r\n      <StyledTitle className=\"listOptions\">\r\n        Move every card from list\r\n      </StyledTitle>\r\n      <StyledAvailableList className=\"listOptions\">\r\n        {availableLists.map((ele) => (\r\n          <StyledNameList\r\n            key={ele.id}\r\n            disabled={ele.currentList === \"true\"}\r\n            onClick={() => moveCardsFromListFunc(ele.id)}\r\n          >\r\n            {ele.currentList === \"true\"\r\n              ? `${ele.title} (Actual)`\r\n              : `${ele.title}`}\r\n          </StyledNameList>\r\n        ))}\r\n      </StyledAvailableList>\r\n    </StyledMoveListWrap>\r\n  );\r\n}\r\n\r\nexport default ListMoveCardsWindowView;\r\n","import React, { Component } from \"react\";\r\nimport ListMoveCardsWindowView from \"../../components/List/ListOptions/ListMoveCardsWindow/ListMoveCardsWindowView\";\r\n\r\nclass ListMoveCardsWindow extends Component {\r\n  moveCardsFromListFunc = (moveToListIndex) => {\r\n    const moveFromListIndex = this.props.listId;\r\n\r\n    const containerForTasks = [];\r\n    this.props.tasks.forEach((task) => {\r\n      containerForTasks.push({\r\n        id: task.id,\r\n        taskName: task.taskName,\r\n        moveTo: moveToListIndex,\r\n        moveFrom: moveFromListIndex,\r\n      });\r\n    });\r\n\r\n    containerForTasks.forEach((task) => {\r\n      this.props.moveCardToAnotherList(\r\n        task.id,\r\n        task.taskName,\r\n        task.moveTo,\r\n        task.moveFrom\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { wholeList, listId } = this.props;\r\n\r\n    const availableLists = wholeList.map((ele, index) => {\r\n      return {\r\n        id: ele.id,\r\n        list: index + 1,\r\n        title: ele.title,\r\n        currentList: `${ele.id === listId}`,\r\n      };\r\n    });\r\n    return (\r\n      <ListMoveCardsWindowView\r\n        availableLists={availableLists}\r\n        moveCardsFromListFunc={this.moveCardsFromListFunc}\r\n      ></ListMoveCardsWindowView>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListMoveCardsWindow;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMoveListWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: absolute;\r\n  top: 43px;\r\n  left: 230px;\r\n  width: 280px;\r\n  height: 175px;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n  box-shadow: 0px 0.5px 0px 0.5px #aaa;\r\n  z-index: 999;\r\n  cursor: initial;\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  position: absolute;\r\n  top: 12px;\r\n  right: 12px;\r\n  font-size: 14px;\r\n  color: #aaa;\r\n  cursor: pointer;\r\n`;\r\nconst StyledTitle = styled.h3`\r\n  width: 100%;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  border-bottom: 1px solid #ccc;\r\n  text-align: center;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #aaa;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 100px;\r\n  height: 32.5px;\r\n  background-color: #5aac44;\r\n  border-radius: 4px;\r\n  margin: 0 auto;\r\n  margin-top: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: #6abc54;\r\n  }\r\n`;\r\n\r\nconst StyledTeaxtArea = styled.textarea`\r\n  width: 95%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 7.5px 5px;\r\n  margin: 15px auto;\r\n  margin-top: ${(props) => (props.marginTop ? \"5px\" : \"15px\")};\r\n  resize: none;\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nfunction ListCopyWindowView({ textAreaValue, setCopyListValue, copyList }) {\r\n  return (\r\n    <StyledMoveListWrap className=\"listOptions\">\r\n      <StyledX className=\"fas fa-times\" />\r\n      <StyledTitle className=\"listOptions\">Copy list</StyledTitle>\r\n      <StyledTeaxtArea\r\n        className=\"listOptions\"\r\n        value={textAreaValue}\r\n        onChange={(e) => setCopyListValue(e)}\r\n      />\r\n      <StyledButton onClick={() => copyList()} className=\"listOptions\">\r\n        Create List\r\n      </StyledButton>\r\n    </StyledMoveListWrap>\r\n  );\r\n}\r\n\r\nexport default ListCopyWindowView;\r\n","import React, { Component } from \"react\";\r\nimport ListCopyWindoView from \"../../components/List/ListOptions/ListCopyWindow/ListCopyWindowView\";\r\n\r\nclass ListCopyWindow extends Component {\r\n  state = {\r\n    textAreaValue: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const currentList = this.props.wholeList.filter(\r\n      (ele) => ele.id === this.props.listId\r\n    );\r\n    this.setState({ textAreaValue: currentList[0].title });\r\n  }\r\n\r\n  setCopyListValue = (e) => {\r\n    this.setState({ textAreaValue: e.target.value });\r\n  };\r\n\r\n  copyList = () => {\r\n    const { wholeList, listId, copyNewList, copyListVisibility } = this.props;\r\n    if (this.state.textAreaValue === \"\") {\r\n      return this.setState({\r\n        textAreaValue: `List no. ${wholeList.length + 1}`,\r\n      });\r\n    }\r\n    const currentList = wholeList.filter((ele) => ele.id === listId);\r\n\r\n    copyNewList(currentList[0].tasks, this.state.textAreaValue);\r\n    copyListVisibility();\r\n  };\r\n\r\n  render() {\r\n    const { textAreaValue } = this.state;\r\n\r\n    return (\r\n      <ListCopyWindoView\r\n        textAreaValue={textAreaValue}\r\n        setCopyListValue={this.setCopyListValue}\r\n        copyList={this.copyList}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListCopyWindow;\r\n","import React from \"react\";\r\nimport Card from \"../../components/Card/Card\";\r\nimport ListButtons from \"./ListButtons/ListButtons\";\r\nimport ListInput from \"./ListInput/ListInput\";\r\nimport ListOptions from \"./ListOptions/ListOptions\";\r\nimport ListMoveWindow from \"../../Containers/List/ListMove\";\r\nimport ListDeleteCardsWindow from \"../../Containers/List/ListDeleteCardsWindow\";\r\nimport ListMoveCardsWindow from \"../../Containers/List/ListMoveCardsWindow\";\r\nimport ListCopyWindow from \"../../Containers/List/ListCopyWindow\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 100%;\r\n  height: ${(props) => (props.showStyle ? \"60px\" : \"31px\")};\r\n  background-color: ${(props) => (props.showStyle ? \"#fff\" : \"#ebecf0\")};\r\n  border-radius: 5px;\r\n  padding: 7.5px;\r\n  color: #779;\r\n  resize: none;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  box-shadow: ${(props) =>\r\n    props.showStyle ? \"0px 0.5px 0px 0.5px #aaa\" : \"none\"};\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.showStyle ? null : \"#dddfe5\")};\r\n  }\r\n`;\r\n\r\nfunction ListView({\r\n  mouseDownFeature,\r\n  selectedList,\r\n  listOptionToggle,\r\n  wholeList,\r\n  setWholeList,\r\n  deleteCard,\r\n  id,\r\n  tasks,\r\n  moveCardToAnotherList,\r\n  scrollPosition,\r\n  isDragAndDropTrue,\r\n  visibilityOptionFunction,\r\n  taskDetailsFunction,\r\n  inputTitle,\r\n  clearAllBlankSpan,\r\n  showAddField,\r\n  textAreaValue,\r\n  setTextAreaValue,\r\n  swapAddFieldFeature,\r\n  setListTitle,\r\n  addNewCardFeature,\r\n  deleteCardFeatureByMove,\r\n  hideFontSizeLabel,\r\n  setHideFontSizeLabel,\r\n  listOfAllTasksList,\r\n  listVisiOptions,\r\n  deleteList,\r\n  addNewCardFromList,\r\n  moveListVisibilityFunc,\r\n  moveListVisibility,\r\n  possibleMoveListVisi,\r\n  togglePossibleMoveForList,\r\n  deleteCardsVisibility,\r\n  deleteCardsVisibilityState,\r\n  moveCardsVisibility,\r\n  moveCardsVisibilityState,\r\n  copyListVisibility,\r\n  copyListVisibilityState,\r\n  addNewList,\r\n  copyNewList,\r\n}) {\r\n  return (\r\n    <div\r\n      className=\"lists\"\r\n      id={`list${id}`}\r\n      onMouseDown={(e) => mouseDownFeature(e)}\r\n    >\r\n      <ListInput\r\n        selectedList={selectedList}\r\n        id={id}\r\n        inputTitle={inputTitle}\r\n        listOptionToggle={listOptionToggle}\r\n        setListTitle={setListTitle}\r\n      />\r\n\r\n      {tasks.map((task) => (\r\n        <Card\r\n          wholeList={wholeList}\r\n          key={task.id}\r\n          task={task}\r\n          listId={id}\r\n          addNewCardFeature={addNewCardFeature}\r\n          deleteCardFeatureByMove={deleteCardFeatureByMove}\r\n          scrollPosition={scrollPosition}\r\n          isDragAndDropTrue={isDragAndDropTrue}\r\n          visibilityOptionFunction={visibilityOptionFunction}\r\n          taskDetailsFunction={taskDetailsFunction}\r\n          inputTitle={inputTitle}\r\n          clearAllBlankSpan={clearAllBlankSpan}\r\n          hideFontSizeLabel={hideFontSizeLabel}\r\n          setHideFontSizeLabel={setHideFontSizeLabel}\r\n          listOfAllTasksList={listOfAllTasksList}\r\n        />\r\n      ))}\r\n      <div className=\"blank\" />\r\n      <StyledTextArea\r\n        value={showAddField ? textAreaValue : \"Add Another Card\"}\r\n        onChange={(e) => setTextAreaValue(e)}\r\n        onClick={() => swapAddFieldFeature(\"textArea\")}\r\n        showStyle={showAddField}\r\n        placeholder=\"Add title for this card...\"\r\n      />\r\n      <ListButtons\r\n        showAddField={showAddField}\r\n        id={id}\r\n        textAreaValue={textAreaValue}\r\n        addNewCardFeature={addNewCardFeature}\r\n        swapAddFieldFeature={swapAddFieldFeature}\r\n      />\r\n      {listVisiOptions ? (\r\n        <ListOptions\r\n          deleteList={deleteList}\r\n          listId={id}\r\n          addNewCardFromList={addNewCardFromList}\r\n          moveListVisibilityFunc={moveListVisibilityFunc}\r\n          deleteCardsVisibility={deleteCardsVisibility}\r\n          moveCardsVisibility={moveCardsVisibility}\r\n          copyListVisibility={copyListVisibility}\r\n        />\r\n      ) : null}\r\n      {moveListVisibility ? (\r\n        <ListMoveWindow\r\n          togglePossibleMoveForList={togglePossibleMoveForList}\r\n          possibleMoveListVisi={possibleMoveListVisi}\r\n          moveListVisibilityFunc={moveListVisibilityFunc}\r\n          wholeList={wholeList}\r\n          listId={id}\r\n          setWholeList={setWholeList}\r\n        />\r\n      ) : null}\r\n      {deleteCardsVisibilityState ? (\r\n        <ListDeleteCardsWindow\r\n          listId={id}\r\n          wholeList={wholeList}\r\n          deleteCard={deleteCard}\r\n        />\r\n      ) : null}\r\n      {moveCardsVisibilityState ? (\r\n        <ListMoveCardsWindow\r\n          wholeList={wholeList}\r\n          listId={id}\r\n          tasks={tasks}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n        />\r\n      ) : null}\r\n      {copyListVisibilityState ? (\r\n        <ListCopyWindow\r\n          addNewList={addNewList}\r\n          wholeList={wholeList}\r\n          listId={id}\r\n          copyNewList={copyNewList}\r\n          copyListVisibility={copyListVisibility}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\nexport default ListView;\r\n","import React, { Component } from \"react\";\r\nimport ListView from \"../../components/List/ListView\";\r\n\r\nclass List extends Component {\r\n  state = {\r\n    inputTitle: \"\",\r\n    showAddField: false,\r\n    textAreaValue: \"\",\r\n    selectedList: false,\r\n    listVisiOptions: false,\r\n    moveListVisibility: false,\r\n    possibleMoveListVisi: false,\r\n    copyListVisibilityState: false,\r\n    moveCardsVisibilityState: false,\r\n    deleteCardsVisibilityState: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"click\", this.hideAll);\r\n    document.addEventListener(\"keypress\", (e) =>\r\n      this.addNewCardFeatureByKey(e, this.props.id, this.state.textAreaValue)\r\n    );\r\n    const main = document.querySelector(\".main\");\r\n    const mainWidth = main.offsetWidth;\r\n    main.scroll({\r\n      left: mainWidth + 285 * (this.props.wholeList.length + 1),\r\n      behavior: \"smooth\",\r\n    });\r\n\r\n    this.setState({\r\n      inputTitle: this.props.title,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"click\", this.hideAll);\r\n    document.removeEventListener(\"keypress\", (e) =>\r\n      this.addNewCardFeatureByKey(e, this.props.id, this.state.textAreaValue)\r\n    );\r\n    document.removeEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.removeEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n  }\r\n\r\n  hideAll = (e) => {\r\n    const searchingClass = e.target.className;\r\n    if (\r\n      searchingClass.includes(\"main\") ||\r\n      searchingClass.includes(\"input\") ||\r\n      searchingClass.includes(\"nav\") ||\r\n      searchingClass.includes(\"wrapList\") ||\r\n      searchingClass.includes(\"singleListWrap\")\r\n    ) {\r\n      this.setState({\r\n        showAddField: false,\r\n        listVisiOptions: false,\r\n        moveListVisibility: false,\r\n      });\r\n      this.props.showListHandle(false);\r\n      this.props.setListInput(\"\");\r\n    }\r\n\r\n    if (!searchingClass.includes(\"listOptions\")) {\r\n      this.setState({\r\n        listVisiOptions: false,\r\n        moveListVisibility: false,\r\n        deleteCardsVisibilityState: false,\r\n        moveCardsVisibilityState: false,\r\n        copyListVisibilityState: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  setListTitle = (e, listId) => {\r\n    this.setState({\r\n      inputTitle: e.target.value,\r\n    });\r\n    this.props.updateListTitle(e.target.value, listId);\r\n  };\r\n\r\n  swapAddFieldFeature = (buttonId) => {\r\n    if (buttonId === \"textArea\") {\r\n      this.setState({\r\n        showAddField: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showAddField: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  setTextAreaValue = (e) => {\r\n    this.setState({\r\n      textAreaValue: e.target.value,\r\n    });\r\n  };\r\n\r\n  addNewCardFeature = (listId, textAreaValue, taskId) => {\r\n    this.props.addNewCard(listId, textAreaValue, taskId);\r\n    this.setState({\r\n      showAddField: false,\r\n      textAreaValue: \"\",\r\n    });\r\n  };\r\n\r\n  addNewCardFeatureByKey = (e, listId, textAreaValue, taskId) => {\r\n    if (e.which === 13 && this.state.showAddField) {\r\n      e.preventDefault();\r\n      this.props.addNewCard(listId, textAreaValue, taskId);\r\n      this.setState({\r\n        textAreaValue: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteCardFeatureByMove = (listId, taskId) => {\r\n    this.props.deleteCard(listId, taskId);\r\n    this.setState({\r\n      textAreaValue: \"\",\r\n    });\r\n  };\r\n\r\n  mouseDownFeature = (e) => {\r\n    if (e.target.classList[0] !== \"lists\") return;\r\n    this.setState({\r\n      selectedList: true,\r\n    });\r\n    e.target.style.zIndex = 999;\r\n    e.target.style.cursor = \"grabbing\";\r\n    e.target.style.boxShadow = \"0px 10px 20px 0.6px rgba(0,0,0,0.25)\";\r\n\r\n    document.addEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.addEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n  };\r\n\r\n  mouseMoveFeature = (e) => {\r\n    const list = document.getElementById(`list${this.props.id}`);\r\n    const scrollHeighFromMain = Math.floor(this.props.scrollPosition);\r\n    if (this.state.selectedList && list.classList[0] === \"lists\") {\r\n      list.style.left = `${e.clientX - 135}px`;\r\n      list.style.top = `${e.clientY - 45}px`;\r\n      list.style.position = \"fixed\";\r\n      list.style.transform = \"rotate(5deg)\";\r\n\r\n      const allBlankSpan = document.querySelectorAll(\".frontBlankList\");\r\n      allBlankSpan.forEach((all) => {\r\n        all.style.display = \"none\";\r\n      });\r\n\r\n      for (let i = 1; i < 10; i++) {\r\n        if (e.pageX < 285 - scrollHeighFromMain) {\r\n          allBlankSpan[0].style.width = \"275px\";\r\n          allBlankSpan[0].style.height = \"10px\";\r\n          allBlankSpan[0].style.backgroundColor = \"rgba(0,0,0,0.15)\";\r\n          allBlankSpan[0].style.marginRight = \"10px\";\r\n          allBlankSpan[0].style.borderRadius = \"4px\";\r\n          allBlankSpan[0].style.display = \"initial\";\r\n          allBlankSpan[0].style.position = \"absolute\";\r\n          allBlankSpan[0].style.top = \"-17.5px\";\r\n        } else if (\r\n          e.pageX > 285 * i - scrollHeighFromMain &&\r\n          e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n          this.props.wholeList.length >= i + 1\r\n        ) {\r\n          allBlankSpan[i].style.width = \"275px\";\r\n          allBlankSpan[i].style.height = \"10px\";\r\n          allBlankSpan[i].style.backgroundColor = \"rgba(0,0,0,0.15)\";\r\n          allBlankSpan[i].style.marginRight = \"10px\";\r\n          allBlankSpan[i].style.borderRadius = \"4px\";\r\n          allBlankSpan[i].style.display = \"initial\";\r\n          allBlankSpan[i].style.position = \"absolute\";\r\n          allBlankSpan[i].style.top = \"-17.5px\";\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  mouseUpFeature = (e) => {\r\n    const list = document.getElementById(`list${this.props.id}`);\r\n    if (list.classList[0] !== \"lists\") return;\r\n    list.style.position = \"static\";\r\n    list.style.cursor = \"pointer\";\r\n    list.style.zIndex = null;\r\n    list.style.boxShadow = null;\r\n    list.style.transform = null;\r\n\r\n    const { scrollPosition, wholeList } = this.props;\r\n    const scrollHeighFromMain = Math.floor(scrollPosition);\r\n\r\n    const allBlankSpan = document.querySelectorAll(\".frontBlankList\");\r\n    allBlankSpan.forEach((all) => {\r\n      all.style.width = \"0\";\r\n    });\r\n\r\n    const draggedListIndex = this.props.wholeList.findIndex(\r\n      (list) => list.id === this.props.id\r\n    );\r\n\r\n    if (e.pageX < 285 - scrollHeighFromMain) {\r\n      this.props.moveListToAnotherPlace(draggedListIndex, 0);\r\n    }\r\n\r\n    for (let i = 1; i < 10; i++) {\r\n      if (\r\n        e.pageX > 285 * i - scrollHeighFromMain &&\r\n        e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n        wholeList.length >= i + 1\r\n      ) {\r\n        this.props.moveListToAnotherPlace(draggedListIndex, i);\r\n      }\r\n    }\r\n    document.removeEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.removeEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n    this.setState({\r\n      selectedList: false,\r\n    });\r\n  };\r\n\r\n  listOptionToggle = (e) => {\r\n    //Toggle for general listOptions visibility\r\n    this.setState({\r\n      listVisiOptions: !this.state.listVisiOptions,\r\n      moveListVisibility: false,\r\n      possibleMoveListVisi: false,\r\n      deleteCardsVisibilityState: false,\r\n      moveCardsVisibilityState: false,\r\n      copyListVisibilityState: false,\r\n      showAddField: false,\r\n    });\r\n  };\r\n\r\n  deleteList = (listId) => {\r\n    const copyWholeList = [...this.props.wholeList];\r\n    const filterWholeList = copyWholeList.filter((list) => list.id !== listId); //Delete current list by id\r\n    const deletedList = copyWholeList.filter((list) => list.id === listId);\r\n    const everyCardId = []; //All card id container\r\n    deletedList[0].tasks.forEach((ele) => {\r\n      everyCardId.push(ele.id); // Add card id to container\r\n    });\r\n    everyCardId.forEach((ele) => {\r\n      //Use deleteCard function to every card which id is in container\r\n      this.props.deleteCard(listId, ele, \"byButton\");\r\n    });\r\n    this.props.setWholeList(filterWholeList);\r\n  };\r\n\r\n  addNewCardFromList = () => [\r\n    //Just redirect to addCard textArea\r\n    this.setState({\r\n      listVisiOptions: false,\r\n      showAddField: true,\r\n    }),\r\n  ];\r\n\r\n  moveListVisibilityFunc = () => {\r\n    //Toggle for moveList visibility component\r\n    this.setState({\r\n      listVisiOptions: false,\r\n      moveListVisibility: !this.state.moveListVisibility,\r\n    });\r\n  };\r\n\r\n  togglePossibleMoveForList = () => {\r\n    //Toggle for POSSIBLE postition to move\r\n    this.setState({\r\n      possibleMoveListVisi: !this.state.possibleMoveListVisi,\r\n    });\r\n  };\r\n\r\n  deleteCardsVisibility = () => {\r\n    //Visibility toggle deleteCardsWindow\r\n    this.setState({\r\n      listVisiOptions: false,\r\n      deleteCardsVisibilityState: !this.state.deleteCardsVisibilityState,\r\n    });\r\n  };\r\n\r\n  moveCardsVisibility = () => {\r\n    //Visibility toggle moveCardsWindow\r\n    this.setState({\r\n      listVisiOptions: false,\r\n      moveCardsVisibilityState: !this.state.moveCardsVisibilityState,\r\n    });\r\n  };\r\n\r\n  copyListVisibility = () => {\r\n    this.setState({\r\n      listVisiOptions: false,\r\n      copyListVisibilityState: !this.state.copyListVisibilityState,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      tasks,\r\n      wholeList,\r\n      deleteCard,\r\n      setWholeList,\r\n      scrollPosition,\r\n      isDragAndDropTrue,\r\n      visibilityOptionFunction,\r\n      taskDetailsFunction,\r\n      clearAllBlankSpan,\r\n      hideFontSizeLabel,\r\n      setHideFontSizeLabel,\r\n      listOfAllTasksList,\r\n      moveCardToAnotherList,\r\n      addNewList,\r\n      copyNewList,\r\n    } = this.props;\r\n    const {\r\n      showAddField,\r\n      textAreaValue,\r\n      inputTitle,\r\n      selectedList,\r\n      listVisiOptions,\r\n      moveListVisibility,\r\n      possibleMoveListVisi,\r\n      deleteCardsVisibilityState,\r\n      moveCardsVisibilityState,\r\n      copyListVisibilityState,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"singleListWrap\">\r\n        <div className=\"frontBlankList\"></div>\r\n        <ListView\r\n          selectedList={selectedList}\r\n          listOptionToggle={this.listOptionToggle}\r\n          wholeList={wholeList}\r\n          deleteCard={deleteCard}\r\n          setWholeList={setWholeList}\r\n          id={id}\r\n          tasks={tasks}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          scrollPosition={scrollPosition}\r\n          isDragAndDropTrue={isDragAndDropTrue}\r\n          visibilityOptionFunction={visibilityOptionFunction}\r\n          taskDetailsFunction={taskDetailsFunction}\r\n          inputTitle={inputTitle}\r\n          clearAllBlankSpan={clearAllBlankSpan}\r\n          showAddField={showAddField}\r\n          textAreaValue={textAreaValue}\r\n          mouseDownFeature={this.mouseDownFeature}\r\n          setTextAreaValue={this.setTextAreaValue}\r\n          swapAddFieldFeature={this.swapAddFieldFeature}\r\n          setListTitle={this.setListTitle}\r\n          addNewCardFeature={this.addNewCardFeature}\r\n          deleteCardFeatureByMove={this.deleteCardFeatureByMove}\r\n          hideFontSizeLabel={hideFontSizeLabel}\r\n          setHideFontSizeLabel={setHideFontSizeLabel}\r\n          listOfAllTasksList={listOfAllTasksList}\r\n          listVisiOptions={listVisiOptions}\r\n          deleteList={this.deleteList}\r\n          addNewCardFromList={this.addNewCardFromList}\r\n          moveList={this.moveList}\r\n          moveListVisibilityFunc={this.moveListVisibilityFunc}\r\n          moveListVisibility={moveListVisibility}\r\n          possibleMoveListVisi={possibleMoveListVisi}\r\n          togglePossibleMoveForList={this.togglePossibleMoveForList}\r\n          deleteCardsVisibility={this.deleteCardsVisibility}\r\n          deleteCardsVisibilityState={deleteCardsVisibilityState}\r\n          moveCardsVisibility={this.moveCardsVisibility}\r\n          moveCardsVisibilityState={moveCardsVisibilityState}\r\n          copyListVisibility={this.copyListVisibility}\r\n          copyListVisibilityState={copyListVisibilityState}\r\n          addNewList={addNewList}\r\n          copyNewList={copyNewList}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport List from \"../../Containers/List/List\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMain = styled.main`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  width: auto;\r\n  min-height: calc(100vh - 80px);\r\n  background-color: #4bbf6b;\r\n  padding: 0px 6px 0px 6px;\r\n  overflow-x: scroll;\r\n  overflow-y: hidden;\r\n  transition: 0.1s linear;\r\n  padding-top: 15px;\r\n`;\r\n\r\nconst StyledListInput = styled.input`\r\n  width: 265px;\r\n  background-color: #76ce8e;\r\n  border-radius: 4px;\r\n  padding: 11px 7.5px;\r\n  text-align: left;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  box-shadow: 0px 0px 1px 0px #888;\r\n  font-size: 15px;\r\n\r\n  &::placeholder {\r\n    color: white;\r\n  }\r\n\r\n  &:focus {\r\n    background-color: #fff !important;\r\n    ::placeholder {\r\n      color: #888;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: 0 0 10px 1px rgba(50, 50, 50, 0.1);\r\n  }\r\n`;\r\n\r\nconst StyledWrapList = styled.div`\r\n  display: flex;\r\n  width: auto;\r\n  flex-direction: row;\r\n  height: auto;\r\n  background-color: transparent;\r\n  margin-bottom: 10px;\r\n  padding: 3px 5px;\r\n  border-radius: 5px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  align-self: flex-start;\r\n  width: 50%;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  background-color: #5aac44;\r\n  border-radius: 5px;\r\n  color: white;\r\n  margin-top: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #67ba50;\r\n  }\r\n`;\r\n\r\nconst StyledWrapAddListBtn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  align-self: flex-start;\r\n  width: 275px;\r\n  max-height: 84.2px;\r\n  border-radius: 4px;\r\n  padding: 0px 5px 5px 5px;\r\n  margin-right: 125px;\r\n  padding-top: ${(props) => (props.bgc ? \"5px\" : \"0px\")};\r\n  background-color: ${(props) => (props.bgc ? \"#ebecf0\" : \"transparent\")};\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nfunction CoreFieldView({\r\n  scroll,\r\n  mousePositionX,\r\n  wholeList,\r\n  listOption,\r\n  addNewCard,\r\n  deleteCard,\r\n  showListHandle,\r\n  setListInput,\r\n  scrollPosition,\r\n  isDragAndDropTrue,\r\n  visibilityOptionFunction,\r\n  taskDetailsFunction,\r\n  updateListTitle,\r\n  moveListToAnotherPlace,\r\n  clearAllBlankSpan,\r\n  showList,\r\n  showAddListHandle,\r\n  listInputHandle,\r\n  listInputValue,\r\n  addNewList,\r\n  addNewListByKey,\r\n  addNewListByButton,\r\n  copyNewList,\r\n  hideFontSizeLabel,\r\n  setHideFontSizeLabel,\r\n  listOfAllTasksList,\r\n  setWholeList,\r\n  moveCardToAnotherList,\r\n}) {\r\n  return (\r\n    <StyledMain\r\n      className=\"main\"\r\n      onScroll={(e) => scroll(e)}\r\n      onMouseMove={(e) => mousePositionX(e)}\r\n    >\r\n      <StyledWrapList className=\"wrapList\">\r\n        {wholeList.map((list) => (\r\n          <List\r\n            wholeList={wholeList}\r\n            key={list.id}\r\n            id={list.id}\r\n            title={list.title}\r\n            tasks={list.tasks}\r\n            listOption={listOption}\r\n            addNewCard={addNewCard}\r\n            deleteCard={deleteCard}\r\n            showListHandle={showListHandle}\r\n            setListInput={setListInput}\r\n            scrollPosition={scrollPosition}\r\n            isDragAndDropTrue={isDragAndDropTrue}\r\n            visibilityOptionFunction={visibilityOptionFunction}\r\n            taskDetailsFunction={taskDetailsFunction}\r\n            updateListTitle={updateListTitle}\r\n            moveListToAnotherPlace={moveListToAnotherPlace}\r\n            clearAllBlankSpan={clearAllBlankSpan}\r\n            hideFontSizeLabel={hideFontSizeLabel}\r\n            setHideFontSizeLabel={setHideFontSizeLabel}\r\n            listOfAllTasksList={listOfAllTasksList}\r\n            setWholeList={setWholeList}\r\n            moveCardToAnotherList={moveCardToAnotherList}\r\n            addNewList={addNewList}\r\n            copyNewList={copyNewList}\r\n          />\r\n        ))}\r\n        <StyledWrapAddListBtn bgc={showList ? true : false}>\r\n          <StyledListInput\r\n            bgc={showList ? true : false}\r\n            placeholder=\"Add another list\"\r\n            onClick={showAddListHandle}\r\n            onChange={(e) => listInputHandle(e)}\r\n            className=\"addList\"\r\n            value={listInputValue}\r\n            onKeyPress={(e) => addNewListByKey(e)}\r\n          />\r\n          {showList ? (\r\n            <StyledButton onClick={() => addNewListByButton(listInputValue)}>\r\n              Add List\r\n            </StyledButton>\r\n          ) : null}\r\n        </StyledWrapAddListBtn>\r\n      </StyledWrapList>\r\n    </StyledMain>\r\n  );\r\n}\r\n\r\nexport default CoreFieldView;\r\n","import React, { useState } from \"react\";\r\nimport CoreFieldView from \"../../components/CoreField/CoreFieldView\";\r\n\r\nconst MainField = ({\r\n  wholeList,\r\n  listOption,\r\n  addNewCard,\r\n  deleteCard,\r\n  addNewList,\r\n  copyNewList,\r\n  moveCardToAnotherList,\r\n  updateListTitle,\r\n  visibilityOptionFunction,\r\n  taskDetailsFunction,\r\n  moveListToAnotherPlace,\r\n  clearAllBlankSpan,\r\n  hideFontSizeLabel,\r\n  setHideFontSizeLabel,\r\n  listOfAllTasksList,\r\n  setWholeList,\r\n}) => {\r\n  const [showList, showListHandle] = useState(false);\r\n  const [scrollPosition, updatedScrollPosition] = useState(0);\r\n  const [isDragDropTrue, isDragDropTrueFeature] = useState(\"\");\r\n\r\n  const showAddListHandle = () => {\r\n    showListHandle(true);\r\n  };\r\n\r\n  const [listInputValue, setListInput] = useState(\"\");\r\n\r\n  const listInputHandle = (e) => {\r\n    setListInput(e.target.value);\r\n  };\r\n\r\n  const addNewListByKey = (e) => {\r\n    if (e.which === 13 && showList) {\r\n      addNewList(listInputValue);\r\n      showListHandle(true);\r\n      setListInput(\"\");\r\n    }\r\n  };\r\n\r\n  const addNewListByButton = () => {\r\n    addNewList(listInputValue);\r\n    showListHandle(false);\r\n    setListInput(\"\");\r\n  };\r\n\r\n  const scroll = (e) => {\r\n    if (!e.target.className.includes(\"lists\")) {\r\n      const scrollPosition = e.target.scrollLeft;\r\n      updatedScrollPosition(scrollPosition);\r\n    }\r\n  };\r\n\r\n  const mousePositionX = (e) => {\r\n    const main = document.querySelector(\".main\");\r\n    const mainWidth = main.offsetWidth;\r\n    const mousePositionX = e.clientX;\r\n    if (mousePositionX <= 75 && isDragDropTrue) {\r\n      main.scroll({\r\n        left: 0,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n\r\n    if (mousePositionX >= mainWidth - 75 && isDragDropTrue) {\r\n      main.scroll({\r\n        left: mainWidth + 285 * (wholeList.length + 1),\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const isDragAndDropTrue = (isTrue) => {\r\n    isDragDropTrueFeature(isTrue);\r\n  };\r\n\r\n  return (\r\n    <CoreFieldView\r\n      scroll={scroll}\r\n      mousePositionX={mousePositionX}\r\n      wholeList={wholeList}\r\n      listOption={listOption}\r\n      addNewCard={addNewCard}\r\n      deleteCard={deleteCard}\r\n      showListHandle={showListHandle}\r\n      setListInput={setListInput}\r\n      scrollPosition={scrollPosition}\r\n      isDragAndDropTrue={isDragAndDropTrue}\r\n      visibilityOptionFunction={visibilityOptionFunction}\r\n      taskDetailsFunction={taskDetailsFunction}\r\n      updateListTitle={updateListTitle}\r\n      moveListToAnotherPlace={moveListToAnotherPlace}\r\n      clearAllBlankSpan={clearAllBlankSpan}\r\n      showList={showList}\r\n      showAddListHandle={showAddListHandle}\r\n      listInputHandle={listInputHandle}\r\n      listInputValue={listInputValue}\r\n      addNewList={addNewList}\r\n      addNewListByButton={addNewListByButton}\r\n      addNewListByKey={addNewListByKey}\r\n      hideFontSizeLabel={hideFontSizeLabel}\r\n      setHideFontSizeLabel={setHideFontSizeLabel}\r\n      listOfAllTasksList={listOfAllTasksList}\r\n      setWholeList={setWholeList}\r\n      moveCardToAnotherList={moveCardToAnotherList}\r\n      copyNewList={copyNewList}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MainField;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledColorDiv = styled.div`\r\n  width: 45%;\r\n  height: 85px;\r\n  border-radius: 5px;\r\n  margin-right: 5px;\r\n  margin-left: 5px;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    opacity: 0.75;\r\n  }\r\n`;\r\n\r\nconst StyledThemeDiv = styled.div`\r\n  position: fixed;\r\n  top: calc(0% + 40px);\r\n  bottom: 17.5px;\r\n  right: 0;\r\n  width: 320px;\r\n  align-content: flex-start;\r\n  transform: ${(props) =>\r\n    props.showTheme ? \"translateX(0px)\" : \"translateX(100vw)\"};\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  background-color: #f4f5f7;\r\n  padding: 10px;\r\n  transition: 0.3s linear;\r\n  z-index: 999;\r\n`;\r\n\r\nconst StyledLabelTitle = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  border-bottom: 1px solid #42516e;\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n  margin: 10px;\r\n  font-size: 17px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  margin-left: 10px;\r\n  font-size: 17px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n  opacity: 0;\r\n`;\r\n\r\nconst StyledBack = styled.span`\r\n  font-size: 19px;\r\n  cursor: pointer;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledTitle = styled.h4``;\r\n\r\nfunction ThemeFieldView({ themeOption, changeColor, blockOfColors }) {\r\n  return (\r\n    <StyledThemeDiv showTheme={themeOption} className=\"theme\">\r\n      <StyledLabelTitle className=\"theme\">\r\n        <StyledBack className=\"fas fa-angle-left\" />\r\n        <StyledTitle className=\"theme\">Colors</StyledTitle>\r\n        <StyledX className=\"fas fa-times theme\" />\r\n      </StyledLabelTitle>\r\n      {blockOfColors.map((block) => (\r\n        <StyledColorDiv\r\n          className=\"theme\"\r\n          onClick={() =>\r\n            changeColor(\r\n              block.mainColor,\r\n              block.navColor,\r\n              block.listColor,\r\n              block.inputColor,\r\n              block.addListInput\r\n            )\r\n          }\r\n          style={{ backgroundColor: block.mainColor }}\r\n          key={block.mainColor}\r\n        />\r\n      ))}\r\n    </StyledThemeDiv>\r\n  );\r\n}\r\n\r\nexport default ThemeFieldView;\r\n","import React from \"react\";\r\nimport ThemeFieldView from \"../../components/ThemeField/ThemeFieldView\";\r\n\r\nfunction ThemeField({ themeOption, setWhichColor }) {\r\n  const changeColor = (\r\n    mainColor,\r\n    navColor,\r\n    listColor,\r\n    inputColor,\r\n    addListInput\r\n  ) => {\r\n    const main = document.querySelector(\".main\");\r\n    main.style.backgroundColor = mainColor;\r\n\r\n    const menuBar = document.querySelector(\".menuBar\");\r\n    menuBar.style.backgroundColor = mainColor;\r\n\r\n    const squarMenuBGC = document.querySelector(\".squarMenuBGC\");\r\n    squarMenuBGC.style.backgroundColor = mainColor;\r\n\r\n    const nav = document.querySelector(\".nav\");\r\n    nav.style.backgroundColor = navColor;\r\n\r\n    const lists = document.querySelectorAll(\".list\");\r\n    lists.forEach((list) => {\r\n      list.style.backgroundColor = listColor;\r\n    });\r\n\r\n    const inputs = document.querySelectorAll(\".item\");\r\n    inputs.forEach((input) => {\r\n      input.style.backgroundColor = inputColor;\r\n    });\r\n\r\n    const addList = document.querySelectorAll(\".addList\");\r\n    addList.forEach((input) => {\r\n      input.style.backgroundColor = addListInput;\r\n    });\r\n\r\n    setWhichColor([listColor]);\r\n  };\r\n\r\n  const blockOfColors = [\r\n    {\r\n      mainColor: \"#0079BF\",\r\n      navColor: \"#0067A3\",\r\n      listColor: \"rgba(61, 153, 206,0.65)\",\r\n      inputColor: \"#4D95BE\",\r\n      addListInput: \"#3D99CE\",\r\n    },\r\n    {\r\n      mainColor: \"#D29034\",\r\n      navColor: \"#B37B2C\",\r\n      listColor: \"rgba(221, 171, 101,0.65)\",\r\n      inputColor: \"#C9A26C\",\r\n      addListInput: \"#DDAB65\",\r\n    },\r\n    {\r\n      mainColor: \"#519839\",\r\n      navColor: \"#458131\",\r\n      listColor: \"rgba(123, 177, 104,0.65)\",\r\n      inputColor: \"#7DA76F\",\r\n      addListInput: \"#7BB168\",\r\n    },\r\n    {\r\n      mainColor: \"#B04632\",\r\n      navColor: \"#963C2B\",\r\n      listColor: \"rgba(195, 114, 99,0.65)\",\r\n      inputColor: \"#B5766B\",\r\n      addListInput: \"#C37263\",\r\n    },\r\n    {\r\n      mainColor: \"#89609E\",\r\n      navColor: \"#755286\",\r\n      listColor: \"rgba(165, 134, 181,0.65)\",\r\n      inputColor: \"#9E86AB\",\r\n      addListInput: \"#A586B5\",\r\n    },\r\n    {\r\n      mainColor: \"#CD5A91\",\r\n      navColor: \"#AE4D7B\",\r\n      listColor: \"rgba(217, 129, 171, 0.65)\",\r\n      inputColor: \"#C682A3\",\r\n      addListInput: \"#D981AB\",\r\n    },\r\n    {\r\n      mainColor: \"#4BBF6B\",\r\n      navColor: \"#40A35B\",\r\n      listColor: \"rgba(118, 206, 142, 0.65)\",\r\n      inputColor: \"#79BE8C\",\r\n      addListInput: \"#76ce8e\",\r\n    },\r\n    {\r\n      mainColor: \"#00AECC\",\r\n      navColor: \"#0094AE\",\r\n      listColor: \"rgba(61, 193, 216, 0.65)\",\r\n      inputColor: \"#4DB4C6\",\r\n      addListInput: \"#3dc1d8\",\r\n    },\r\n    {\r\n      mainColor: \"#838C91\",\r\n      navColor: \"#6F777B\",\r\n      listColor: \"rgba(161, 168, 171,0.65)\",\r\n      inputColor: \"#9BA0A3\",\r\n      addListInput: \"#A1A8AB\",\r\n    },\r\n  ];\r\n  return (\r\n    <ThemeFieldView\r\n      changeColor={changeColor}\r\n      themeOption={themeOption}\r\n      blockOfColors={blockOfColors}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ThemeField;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledListBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 150px;\r\n  height: 250px;\r\n`;\r\n\r\nconst StyledList = styled.li`\r\n  list-style: none;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  border-radius: 3px;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 5px;\r\n  padding: 7px 10px;\r\n  font-size: 14px;\r\n  color: white;\r\n  transition: 0.1s linear;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.75);\r\n    transform: translateX(7.5px);\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: 13px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nfunction OptionCoverListView({\r\n  deleteCard,\r\n  listId,\r\n  addPriorityForCards,\r\n  optionCoverData,\r\n  matchedPriority,\r\n  toggleCurrentListVisiFunc,\r\n}) {\r\n  return (\r\n    <StyledListBlock className=\"cover_listBlock\">\r\n      <ul>\r\n        <StyledList onClick={() => toggleCurrentListVisiFunc(\"labelVisi\")}>\r\n          <StyledIcon className=\"fas fa-tag\" />\r\n          Edit labels\r\n        </StyledList>\r\n        <StyledList\r\n          className=\"suggested\"\r\n          onClick={() => toggleCurrentListVisiFunc(\"moveToAnotherListVisi\")}\r\n        >\r\n          <StyledIcon className=\"fas fa-long-arrow-alt-right\" />\r\n          Move\r\n        </StyledList>\r\n        <StyledList\r\n          className=\"suggested\"\r\n          onClick={() => toggleCurrentListVisiFunc(\"copyCardVisi\")}\r\n        >\r\n          <StyledIcon className=\"far fa-clipboard\" />\r\n          Copy\r\n        </StyledList>\r\n        <StyledList\r\n          onClick={() => toggleCurrentListVisiFunc(\"datePickerVisi\")}\r\n          className=\"calendar\"\r\n        >\r\n          <StyledIcon className=\"far fa-clock calendaer\" />\r\n          Date Change\r\n        </StyledList>\r\n        <StyledList\r\n          onClick={(e) =>\r\n            addPriorityForCards(\r\n              e,\r\n              optionCoverData[0].clickedCardId,\r\n              \"optionCover\"\r\n            )\r\n          }\r\n          style={{\r\n            color: `${matchedPriority.length !== 0 ? \"#db4a36\" : \"#FFF\"}`,\r\n          }}\r\n        >\r\n          <StyledIcon\r\n            className=\"fas fa-exclamation-circle\"\r\n            style={{\r\n              color: `${matchedPriority.length !== 0 ? \"#db4a36\" : \"#FFF\"}`,\r\n            }}\r\n          />\r\n          Priority\r\n        </StyledList>\r\n        <StyledList\r\n          onClick={(e) =>\r\n            deleteCard(listId, optionCoverData[0].clickedCardId, \"byButton\")\r\n          }\r\n        >\r\n          <StyledIcon className=\"fas fa-archive\" />\r\n          Archive\r\n        </StyledList>\r\n      </ul>\r\n    </StyledListBlock>\r\n  );\r\n}\r\n\r\nexport default OptionCoverListView;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledChangeListDetails = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-wrap: wrap;\r\n  position: fixed;\r\n  right: ${(props) => (props.rightPosition ? \"-120px\" : \"null\")};\r\n  top: ${(props) => (props.topPosition ? \"0px\" : \"null\")};\r\n  width: 300px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  padding: 10px;\r\n  margin-bottom: 17.5px;\r\n  z-index: 999;\r\n  box-shadow: 0 0 15px 1px rgba(50, 50, 50, 0.2);\r\n`;\r\n\r\nconst StyledReplaceTitle = styled.h3`\r\n  width: 100%;\r\n  position: relative;\r\n  flex-grow: 1;\r\n  text-align: ${(props) => (props.alignCenter ? \"center\" : \"left\")};\r\n  font-size: 1.5rem;\r\n  border-bottom: ${(props) => (props.border ? \"1px solid #aaa\" : \"null\")};\r\n  padding-bottom: 6px;\r\n  color: #555;\r\n  font-weight: 400;\r\n  margin-bottom: ${(props) => (props.biggerMargin ? \"27.5px\" : \"5px\")};\r\n\r\n  & > .fa-times {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledSuggestList = styled.div`\r\n  width: 100%;\r\n  max-width: 275px;\r\n  word-break: break-all;\r\n  margin: 0 auto;\r\n  margin-bottom: 7px;\r\n  padding: 9px 7.5px;\r\n  font-size: 1.4rem;\r\n  background-color: #f5f6f8;\r\n  border-radius: 3px;\r\n  cursor: ${(props) => (props.disabled ? \"initial\" : \"pointer\")};\r\n  color: ${(props) => (props.disabled ? \"#999\" : \"#000\")};\r\n  pointer-events: ${(props) => (props.disabled ? \"none\" : \"initial\")};\r\n  transition: 0.1s linear;\r\n  z-index: 9999;\r\n\r\n  &:hover {\r\n    background-color: #e6e8ed;\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: ${(props) => (props.biggerFont ? \"15.5px\" : \"13px\")};\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nfunction MoveToAnotherListBox({\r\n  taskTitle,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  toggleCurrentListVisiFunc,\r\n  taskId,\r\n  optionCover,\r\n  currentListId,\r\n  moveToInSuggestedVisi,\r\n}) {\r\n  return (\r\n    <StyledChangeListDetails\r\n      className=\"replaceCard\"\r\n      rightPosition={optionCover}\r\n      topPosition={optionCover}\r\n    >\r\n      <StyledReplaceTitle border alignCenter biggerMargin>\r\n        Replace Card\r\n        <span\r\n          className=\"fas fa-times\"\r\n          onClick={() =>\r\n            toggleCurrentListVisiFunc(\r\n              `${\r\n                moveToInSuggestedVisi\r\n                  ? moveToInSuggestedVisi\r\n                  : \"moveToAnotherListVisi\"\r\n              }`\r\n            )\r\n          }\r\n        ></span>\r\n      </StyledReplaceTitle>\r\n      <>\r\n        <StyledReplaceTitle>\r\n          <StyledIcon className=\"fas fa-map-marker\" />\r\n          Suggested\r\n        </StyledReplaceTitle>\r\n        {wholeList.map((list) => (\r\n          <StyledSuggestList\r\n            className=\"suggestedListToMove\"\r\n            onClick={() =>\r\n              moveCardToAnotherList(taskId, taskTitle, list.id, currentListId)\r\n            }\r\n            key={list.id}\r\n            disabled={list.id === currentListId}\r\n          >\r\n            <StyledIcon biggerFont className=\"fas fa-long-arrow-alt-left\" />\r\n            {list.title.length !== 0 ? list.title : \"No Name List\"}\r\n            {list.id === currentListId ? \" (Actual)\" : null}\r\n          </StyledSuggestList>\r\n        ))}\r\n      </>\r\n    </StyledChangeListDetails>\r\n  );\r\n}\r\n\r\nexport default MoveToAnotherListBox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledCopyWrap = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  top: ${(props) => (props.optionCoverPosition ? \"0px\" : \"null\")};\r\n  right: ${(props) => (props.optionCoverPosition ? \"0px\" : \"null\")};\r\n  width: 310px;\r\n  min-height: 400px;\r\n  transform: ${(props) =>\r\n    props.optionCoverPosition ? \"translate(130px)\" : \"null\"};\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  padding: 5px;\r\n  margin-bottom: 17.5px;\r\n  box-shadow: 0 0 15px 1px rgba(50, 50, 50, 0.2);\r\n`;\r\n\r\nconst StyledReplaceTitle = styled.h3`\r\n  width: 100%;\r\n  position: relative;\r\n  flex-grow: 1;\r\n  text-align: ${(props) => (props.alignCenter ? \"center\" : \"left\")};\r\n  font-size: 1.5rem;\r\n  border-bottom: ${(props) => (props.border ? \"1px solid #aaa\" : \"null\")};\r\n  padding-bottom: 6px;\r\n  margin-left: 5px;\r\n  color: #555;\r\n  font-weight: 400;\r\n\r\n  & > .fa-times {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 95%;\r\n  background-color: #f5f6f8;\r\n  margin: 0px auto 10px auto;\r\n  padding: 7.5px 5px;\r\n  border-radius: 3px;\r\n  min-height: 75px;\r\n  resize: none;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  box-shadow: 0px 0px 1px 1.5px #aaa;\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledCheckedBox = styled.span`\r\n  position: relative;\r\n  width: 17px;\r\n  height: 17px;\r\n  border-radius: 2px;\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n  margin-left: 5px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledCheckIcon = styled.span`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 8px;\r\n`;\r\n\r\nconst StyledCheckBoxTitle = styled.span`\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst StyledSuggestList = styled.div`\r\n  width: 100%;\r\n  max-width: 275px;\r\n  align-self: flex-start;\r\n  word-break: break-all;\r\n  margin: 0 auto;\r\n  margin-bottom: 7px;\r\n  padding: 9px 7.5px;\r\n  font-size: 1.4rem;\r\n  background-color: #f5f6f8;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  color: black;\r\n  transition: 0.1s linear;\r\n  z-index: 9999;\r\n\r\n  &:hover {\r\n    background-color: #e6e8ed;\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: ${(props) => (props.biggerFont ? \"15.5px\" : \"13px\")};\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledLabelTitle = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  border-bottom: 1px solid #42516e;\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n  margin: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  margin-left: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledBack = styled.span`\r\n  font-size: 15px;\r\n  opacity: 0;\r\n`;\r\n\r\nconst StyledTitle = styled.h4``;\r\n\r\nfunction CopyCardView({\r\n  changeCopyTextArea,\r\n  copyTextArea,\r\n  matchedColorsToThisCard,\r\n  toggleCanCopyLables,\r\n  copyLabelsAllow,\r\n  wholeList,\r\n  optionCover,\r\n  toggleCurrentListVisiFunc,\r\n  taskId,\r\n  taskTitle,\r\n  currentListId,\r\n  copyCard,\r\n}) {\r\n  return (\r\n    <StyledCopyWrap optionCoverPosition={optionCover}>\r\n      <StyledLabelTitle>\r\n        <StyledBack className=\"fas fa-angle-left\" />\r\n        <StyledTitle>Copy Card</StyledTitle>\r\n        <StyledX\r\n          className=\"fas fa-times\"\r\n          onClick={() => toggleCurrentListVisiFunc(\"copyCardVisi\")}\r\n        />\r\n      </StyledLabelTitle>\r\n      <StyledReplaceTitle>Title</StyledReplaceTitle>\r\n      <StyledTextArea\r\n        onChange={(e) => changeCopyTextArea(e)}\r\n        value={copyTextArea}\r\n      />\r\n      <StyledReplaceTitle className=\"suggested\">Keep...</StyledReplaceTitle>\r\n      <StyledCheckedBox\r\n        onClick={() => toggleCanCopyLables()}\r\n        style={{\r\n          backgroundColor: `${copyLabelsAllow ? \"#0079bf\" : \"#fff\"}`,\r\n          border: `${copyLabelsAllow ? \"2px solid #0079bf\" : \"2px solid #aaa\"}`,\r\n        }}\r\n      >\r\n        <StyledCheckIcon className=\"fas fa-check\" />\r\n      </StyledCheckedBox>\r\n      <StyledCheckBoxTitle>\r\n        Labels ({matchedColorsToThisCard.length})\r\n      </StyledCheckBoxTitle>\r\n      <StyledReplaceTitle>\r\n        <StyledIcon className=\"fas fa-map-marker\" />\r\n        Copy to...\r\n      </StyledReplaceTitle>\r\n      {wholeList.map((list) => (\r\n        <StyledSuggestList\r\n          key={list.id}\r\n          onClick={() => copyCard(taskId, list.id, copyLabelsAllow)}\r\n        >\r\n          <StyledIcon biggerFont className=\"fas fa-long-arrow-alt-left\" />\r\n          {list.title}\r\n        </StyledSuggestList>\r\n      ))}\r\n    </StyledCopyWrap>\r\n  );\r\n}\r\n\r\nexport default CopyCardView;\r\n","import React, { Component } from \"react\";\r\nimport CopyCardView from \"../../components/CopyCard/CopyCardView\";\r\n\r\nclass CopyCard extends Component {\r\n  state = {\r\n    copyTextArea: \"\",\r\n    copyLabelsAllow: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ copyTextArea: this.props.taskTitle });\r\n  }\r\n  changeCopyTextArea = (e) => {\r\n    this.setState({ copyTextArea: e.target.value });\r\n  };\r\n\r\n  toggleCanCopyLables = () => {\r\n    this.setState({\r\n      copyLabelsAllow: !this.state.copyLabelsAllow,\r\n    });\r\n  };\r\n\r\n  copyCard = (preventCardId, listId, copyLabelsAllow) => {\r\n    const {\r\n      listOfAllComments,\r\n      listOfAllTasksId,\r\n      listOfAllBadges,\r\n      listOfAllTerms,\r\n      addNewCard,\r\n    } = this.props;\r\n    const lablesToCopy = listOfAllBadges.filter(\r\n      (ele) => ele.id === preventCardId\r\n    );\r\n\r\n    const commentToCopy = listOfAllComments.filter(\r\n      (ele) => ele.id === preventCardId\r\n    );\r\n\r\n    const newId = Math.max(...listOfAllTasksId) + 1;\r\n    listOfAllTasksId.push(newId);\r\n\r\n    const dateToCopy = listOfAllTerms.filter((ele) => ele.id === preventCardId);\r\n\r\n    if (lablesToCopy.length !== 0 && copyLabelsAllow) {\r\n      lablesToCopy.forEach((ele) => {\r\n        listOfAllBadges.push({\r\n          id: String(newId),\r\n          color: ele.color,\r\n          labelId: `${ele.color}${newId}`,\r\n          name: ele.name,\r\n        });\r\n      });\r\n    }\r\n\r\n    if (commentToCopy.length !== 0) {\r\n      listOfAllComments.push({\r\n        id: String(newId),\r\n        comment: commentToCopy[0].comment,\r\n      });\r\n    }\r\n\r\n    if (dateToCopy.length !== 0) {\r\n      listOfAllTerms.push({\r\n        id: String(newId),\r\n        term: dateToCopy[0].term,\r\n        classN: \"termSpan\",\r\n        day: dateToCopy[0].day,\r\n        month: dateToCopy[0].month,\r\n        year: dateToCopy[0].year,\r\n        monthName: dateToCopy[0].monthName,\r\n        hour: dateToCopy[0].hour,\r\n        minutes: dateToCopy[0].minutes,\r\n        status: dateToCopy[0].status,\r\n        statusColor: dateToCopy[0].statusColor,\r\n        fontColor: dateToCopy[0].fontColor,\r\n        beforeDoneState: dateToCopy[0].beforeDoneState,\r\n      });\r\n    }\r\n\r\n    addNewCard(listId, this.state.copyTextArea, String(newId));\r\n    this.props.toggleCurrentListVisiFunc(\"copyCardVisi\");\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      matchedColorsToThisCard,\r\n      wholeList,\r\n      taskId,\r\n      taskTitle,\r\n      currentListId,\r\n      optionCover,\r\n      toggleCurrentListVisiFunc,\r\n    } = this.props;\r\n    const { copyTextArea, copyLabelsAllow } = this.state;\r\n    return (\r\n      <CopyCardView\r\n        changeCopyTextArea={this.changeCopyTextArea}\r\n        copyTextArea={copyTextArea}\r\n        matchedColorsToThisCard={matchedColorsToThisCard}\r\n        toggleCanCopyLables={this.toggleCanCopyLables}\r\n        copyLabelsAllow={copyLabelsAllow}\r\n        wholeList={wholeList}\r\n        taskId={taskId}\r\n        taskTitle={taskTitle}\r\n        currentListId={currentListId}\r\n        optionCover={optionCover}\r\n        toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n        copyCard={this.copyCard}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CopyCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledBack = styled.span`\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledNameLabels = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: column;\r\n  top: ${(props) => (props.optionCoverPosition ? \"0px\" : \"null\")};\r\n  right: ${(props) => (props.optionCoverPosition ? \"0px\" : \"null\")};\r\n  width: 310px;\r\n  height: 350px;\r\n  transform: ${(props) =>\r\n    props.optionCoverPosition ? \"translate(130px)\" : \"null\"};\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  padding: 5px;\r\n  margin-bottom: 17.5px;\r\n  box-shadow: 0 0 15px 1px rgba(50, 50, 50, 0.2);\r\n`;\r\n\r\nconst StyledLabelTitle = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #42516e;\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n  margin: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledLabelInput = styled.input`\r\n  width: 95%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 7.5px 5px;\r\n  margin: 15px auto;\r\n  margin-top: ${(props) => (props.marginTop ? \"5px\" : \"15px\")};\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledName = styled.h3`\r\n  margin-left: 7px;\r\n  margin-top: 7px;\r\n`;\r\n\r\nconst StyledWrapColors = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  margin-top: 7px;\r\n`;\r\n\r\nconst StyledColorSquar = styled.div`\r\n  width: 18%;\r\n  height: 40px;\r\n  border-radius: 4px;\r\n  margin-right: 2.5px;\r\n  margin-left: 2.5px;\r\n  margin-bottom: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.85;\r\n  }\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: #5aac44;\r\n  border-radius: 4px;\r\n  margin: 0 auto;\r\n  margin-top: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: #6abc54;\r\n  }\r\n`;\r\n\r\nconst StyledTitle = styled.h4``;\r\n\r\nfunction LabelsNameColors({\r\n  nameLabelVisibilityFunc,\r\n  filteredColors,\r\n  detailCover,\r\n  optionCover,\r\n  nameLabelInput,\r\n  nameLabelInputValue,\r\n  choosedSquar,\r\n  saveNameLabel,\r\n  currentSquarEdit,\r\n}) {\r\n  return (\r\n    <StyledNameLabels\r\n      className=\"label\"\r\n      detailCover={detailCover}\r\n      optionCoverPosition={optionCover}\r\n      onKeyPress={(e) => saveNameLabel(e)}\r\n    >\r\n      <StyledLabelTitle className=\"label\">\r\n        <StyledBack\r\n          className=\"fas fa-angle-left label\"\r\n          onClick={(e) => nameLabelVisibilityFunc(e, false, null, \"back\")}\r\n        />\r\n        <StyledTitle>Change Label</StyledTitle>\r\n        <StyledX\r\n          className=\"fas fa-times\"\r\n          onClick={(e) => nameLabelVisibilityFunc(e, false, null)}\r\n        />\r\n      </StyledLabelTitle>\r\n      <StyledName>Name</StyledName>\r\n      <StyledLabelInput\r\n        className=\"label\"\r\n        marginTop\r\n        onChange={(e) => nameLabelInput(e)}\r\n        value={nameLabelInputValue}\r\n      />\r\n      <StyledName>Colors</StyledName>\r\n      <StyledWrapColors>\r\n        {filteredColors.map((color) => (\r\n          <StyledColorSquar\r\n            style={{\r\n              backgroundColor: `${color.color}`,\r\n              border:\r\n                currentSquarEdit === color.color ? \"1.5px solid black\" : null,\r\n            }}\r\n            className=\"label_colorSquar\"\r\n            key={color.color}\r\n            id={color.color}\r\n            onClick={(e) => choosedSquar(e, color.color)}\r\n          />\r\n        ))}\r\n      </StyledWrapColors>\r\n      <StyledButton className=\"label_saveBtn\" onClick={(e) => saveNameLabel(e)}>\r\n        SAVE\r\n      </StyledButton>\r\n    </StyledNameLabels>\r\n  );\r\n}\r\n\r\nexport default LabelsNameColors;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLabels = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: column;\r\n  top: ${(props) => (props.optionCoverPosition ? \"0px\" : \"null\")};\r\n  right: ${(props) => (props.optionCoverPosition ? \"0px\" : \"null\")};\r\n  width: 310px;\r\n  height: 555px;\r\n  transform: ${(props) =>\r\n    props.optionCoverPosition ? \"translate(130px)\" : \"null\"};\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  padding: 5px;\r\n  margin-bottom: 17.5px;\r\n  box-shadow: 0 0 15px 1px rgba(50, 50, 50, 0.2);\r\n`;\r\n\r\nconst StyledLabelWrapEle = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledLabelElement = styled.div`\r\n  position: relative;\r\n  width: 80%;\r\n  height: 35px;\r\n  border-radius: 5px;\r\n  margin: 0 10px;\r\n  margin-bottom: 4px;\r\n  list-style: none;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    border-left: 10px solid rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  align-self: center;\r\n  border-radius: 3px;\r\n  margin: 0 auto;\r\n  margin-bottom: 4px;\r\n  padding: 10.5px;\r\n  font-size: 15px;\r\n  color: #aaa;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #eee;\r\n  }\r\n`;\r\n\r\nconst StyledLabelTitle = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #42516e;\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n  margin: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledLabelInput = styled.input`\r\n  width: 95%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 7.5px 5px;\r\n  margin: 15px auto;\r\n  margin-top: ${(props) => (props.marginTop ? \"5px\" : \"15px\")};\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  margin-left: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledBack = styled.span`\r\n  font-size: 15px;\r\n  opacity: 0;\r\n`;\r\n\r\nconst StyledTitle = styled.h4``;\r\n\r\nconst StyledIconCheck = styled.div`\r\n  display: none;\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 17.5px;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 10px;\r\n  color: #fff;\r\n`;\r\n\r\nconst StyledNameSox = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  color: white;\r\n  font-weight: 600;\r\n  font-size: 13px;\r\n`;\r\nfunction LabelsChooseColors({\r\n  detailCover,\r\n  optionCover,\r\n  toggleCurrentListVisiFunc,\r\n  filteredColors,\r\n  nameLabelVisibilityFunc,\r\n  toggleLabelColorToCard,\r\n  taskId,\r\n  generateCheckIcon,\r\n  searchLabelColor,\r\n  searchInputLabel,\r\n}) {\r\n  useEffect(() => {\r\n    generateCheckIcon();\r\n  });\r\n\r\n  return (\r\n    <StyledLabels\r\n      className=\"label\"\r\n      optionCoverPosition={optionCover}\r\n      detailCover={detailCover}\r\n    >\r\n      <StyledLabelTitle className=\"label\">\r\n        <StyledBack className=\"fas fa-angle-left label\" />\r\n        <StyledTitle>Labels</StyledTitle>\r\n        <StyledX\r\n          className=\"fas fa-times\"\r\n          onClick={() => toggleCurrentListVisiFunc(\"labelVisi\")}\r\n        />\r\n      </StyledLabelTitle>\r\n      <StyledLabelInput\r\n        placeholder=\"Search Labels...\"\r\n        className=\"label\"\r\n        onChange={(e) => searchLabelColor(e)}\r\n        value={searchInputLabel}\r\n      />\r\n      {filteredColors.map((color) => (\r\n        <StyledLabelWrapEle key={color.color} className=\"label\">\r\n          <StyledLabelElement\r\n            onClick={() => toggleLabelColorToCard(color.color, taskId)}\r\n            style={{ backgroundColor: `${color.color}` }}\r\n            className=\"label\"\r\n            id={color.color}\r\n          >\r\n            <StyledNameSox>{color.value}</StyledNameSox>\r\n            <StyledIconCheck\r\n              className=\"fas fa-check\"\r\n              id={`${color.color}Check`}\r\n            />\r\n          </StyledLabelElement>{\" \"}\r\n          <StyledIcon\r\n            className=\"fas fa-pen label\"\r\n            onClick={(e) =>\r\n              nameLabelVisibilityFunc(e, true, color.color, \"edit\")\r\n            }\r\n          />\r\n        </StyledLabelWrapEle>\r\n      ))}\r\n    </StyledLabels>\r\n  );\r\n}\r\n\r\nexport default LabelsChooseColors;\r\n","import React from \"react\";\r\nimport LabelsNameColors from \"./LabelView/LabelsNameColors\";\r\nimport LabelsChooseColors from \"./LabelView/LabelsChooseColors\";\r\n\r\nfunction LabelsView({\r\n  toggleCurrentListVisiFunc,\r\n  detailCover,\r\n  optionCover,\r\n  nameLabelVisibilityFunc,\r\n  colorNameWindowVisi,\r\n  toggleLabelColorToCard,\r\n  taskId,\r\n  generateCheckIcon,\r\n  searchLabelColor,\r\n  searchInputLabel,\r\n  filteredColors,\r\n  nameLabelInput,\r\n  nameLabelInputValue,\r\n  choosedSquar,\r\n  saveNameLabel,\r\n  currentSquarEdit,\r\n}) {\r\n  return (\r\n    <>\r\n      {colorNameWindowVisi ? (\r\n        <LabelsNameColors\r\n          nameLabelVisibilityFunc={nameLabelVisibilityFunc}\r\n          filteredColors={filteredColors}\r\n          detailCover={detailCover}\r\n          nameLabelInput={nameLabelInput}\r\n          nameLabelInputValue={nameLabelInputValue}\r\n          choosedSquar={choosedSquar}\r\n          saveNameLabel={saveNameLabel}\r\n          currentSquarEdit={currentSquarEdit}\r\n          optionCover={optionCover}\r\n        />\r\n      ) : (\r\n        <LabelsChooseColors\r\n          detailCover={detailCover}\r\n          toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n          filteredColors={filteredColors}\r\n          nameLabelVisibilityFunc={nameLabelVisibilityFunc}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          taskId={taskId}\r\n          generateCheckIcon={generateCheckIcon}\r\n          searchLabelColor={searchLabelColor}\r\n          searchInputLabel={searchInputLabel}\r\n          optionCover={optionCover}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LabelsView;\r\n","import React, { Component } from \"react\";\r\nimport LabelsView from \"../../components/Labels/LabelsView\";\r\n\r\nclass Labels extends Component {\r\n  state = {\r\n    colorNameWindowVisi: false,\r\n    searchInputLabel: \"\",\r\n    nameLabelInputValue: \"\",\r\n    currentMatchedColors: \"\",\r\n    currentSquarEdit: \"\",\r\n  };\r\n\r\n  nameLabelVisibilityFunc = (e, toggle, colorId, from) => {\r\n    if (from === \"back\") {\r\n      this.setState({\r\n        colorNameWindowVisi: toggle,\r\n      });\r\n      return;\r\n    }\r\n    if (colorId === null) {\r\n      this.setState({\r\n        colorNameWindowVisi: toggle,\r\n      });\r\n      return;\r\n    }\r\n    if (from === \"edit\") {\r\n      const isAnyTextAlready = e.target.parentNode.textContent;\r\n      this.setState({\r\n        colorNameWindowVisi: toggle,\r\n        currentSquarEdit: colorId,\r\n        currentMatchedColors: colorId,\r\n        nameLabelInputValue: isAnyTextAlready,\r\n      });\r\n    }\r\n  };\r\n\r\n  generateCheckIcon = () => {\r\n    const matchedBadges = this.props.listOfAllBadges.filter(\r\n      (ele) => ele.id === this.props.taskId\r\n    );\r\n    if (matchedBadges.length !== 0) {\r\n      matchedBadges.forEach((element) => {\r\n        const currentCheckIcon = document.getElementById(\r\n          `${element.color}Check`\r\n        );\r\n        if (currentCheckIcon) {\r\n          currentCheckIcon.style.display = \"block\";\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  searchLabelColor = (e) => {\r\n    this.setState({\r\n      searchInputLabel: e.target.value.substr(0, 17),\r\n    });\r\n  };\r\n\r\n  nameLabelInput = (e) => {\r\n    this.setState({\r\n      nameLabelInputValue: e.target.value.substr(0, 17),\r\n    });\r\n  };\r\n\r\n  choosedSquar = (e, colorId) => {\r\n    const allSquars = document.querySelectorAll(\".label_colorSquar\");\r\n    allSquars.forEach((ele) => {\r\n      ele.style.border = \"none\";\r\n    });\r\n    e.target.style.border = \"1.5px solid black\";\r\n\r\n    this.setState({\r\n      currentMatchedColors: colorId,\r\n    });\r\n  };\r\n\r\n  saveNameLabel = (e) => {\r\n    //Zmieniamy wartość name w badges ( renderuje sie nazwa w optionCover i detailCover lables)\r\n    const {\r\n      listOfAllBadges,\r\n      listOfAllTasksId,\r\n      labelColors,\r\n      setLabelColors,\r\n    } = this.props;\r\n\r\n    if (e.target.className.includes(\"label_saveBtn\") || e.which === 13) {\r\n      const { currentMatchedColors, nameLabelInputValue } = this.state;\r\n\r\n      if (currentMatchedColors.length === 0) return; // Return If color isn't choosed\r\n      const matchedBadges = listOfAllBadges.filter(\r\n        (ele) => ele.color === currentMatchedColors\r\n      );\r\n\r\n      matchedBadges.forEach((ele) => {\r\n        ele.name = nameLabelInputValue;\r\n      });\r\n\r\n      //Od razu pojawia się nazwa labeli w srodku labeli w CARD\r\n      listOfAllTasksId.forEach((ele) => {\r\n        const matchedLabelInCard = document.getElementById(\r\n          `${currentMatchedColors}${ele}`\r\n        );\r\n\r\n        if (matchedLabelInCard) {\r\n          matchedLabelInCard.textContent = nameLabelInputValue;\r\n        }\r\n      });\r\n\r\n      // zmieniamy odgórne labelColors by wszedzie wyswietlalo sie od razu i tak samo przy tworzeniu nowych\r\n      const index = labelColors.findIndex(\r\n        (ele) => ele.color === currentMatchedColors\r\n      );\r\n\r\n      const copyOfLabelColor = [...labelColors];\r\n      copyOfLabelColor.splice(index, 1, {\r\n        color: labelColors[index].color,\r\n        colorName: labelColors[index].colorName,\r\n        value: nameLabelInputValue,\r\n      });\r\n\r\n      //Update\r\n      setLabelColors(copyOfLabelColor);\r\n      this.nameLabelVisibilityFunc(null, false, null, \"back\");\r\n    }\r\n  };\r\n\r\n  //LABLES FEATURES\r\n  toggleLabelColorToCard = (color, taskId) => {\r\n    const { listOfAllBadges, labelColors } = this.props;\r\n    const alreadyExistedBadges = listOfAllBadges.filter(\r\n      (ele) => ele.id === taskId\r\n    );\r\n\r\n    const matchedBages = [];\r\n    alreadyExistedBadges.forEach((ele) => {\r\n      if (ele.color === color) {\r\n        matchedBages.push(color);\r\n      }\r\n    });\r\n\r\n    if (matchedBages.length === 0) {\r\n      //Add only if this color and Id don't exist already\r\n      const nameBadge = labelColors.filter((ele) => ele.color === color);\r\n      // const dataForClasses = color.slice(1, -1);\r\n\r\n      listOfAllBadges.push({\r\n        id: taskId,\r\n        color: color,\r\n        name: nameBadge[0].value,\r\n        labelId: `${color}${taskId}`,\r\n      });\r\n\r\n      this.createLabelsElement(color, taskId, nameBadge[0].value);\r\n\r\n      //CheckIcon Visible\r\n      const checkIcon = document.getElementById(`${color}Check`);\r\n      checkIcon.style.display = \"block\";\r\n      this.props.reloadCoverComponentFunc();\r\n    } else {\r\n      const indexToDelete = listOfAllBadges.findIndex(\r\n        (ele) => ele.id === taskId && ele.color === color\r\n      );\r\n\r\n      //Delete from list of badges when exist and from DOM\r\n      listOfAllBadges.splice(indexToDelete, 1);\r\n      const matchedColor = document.getElementById(`${color}${taskId}`);\r\n      matchedColor.remove();\r\n\r\n      //CheckIcon Visible\r\n      const checkIcon = document.getElementById(`${color}Check`);\r\n      checkIcon.style.display = \"none\";\r\n      this.props.reloadCoverComponentFunc();\r\n    }\r\n  };\r\n\r\n  createLabelsElement = (color, taskId, nameLabel) => {\r\n    const currentTask = document.getElementById(taskId);\r\n    const newLabel = document.createElement(\"div\");\r\n    newLabel.classList.add(`labelElement`);\r\n    newLabel.setAttribute(\"id\", `${color}${taskId}`);\r\n    newLabel.style.backgroundColor = `${color}`;\r\n    newLabel.textContent = nameLabel;\r\n    currentTask.children[0].appendChild(newLabel);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      toggleCurrentListVisiFunc,\r\n      detailCover,\r\n      optionCover,\r\n      addLabelColor,\r\n      optionCoverData,\r\n      taskId,\r\n      labelColors,\r\n    } = this.props;\r\n\r\n    const {\r\n      searchInputLabel,\r\n      colorNameWindowVisi,\r\n      nameLabelInputValue,\r\n      currentSquarEdit,\r\n    } = this.state;\r\n\r\n    const copyOfColorsArray = [...labelColors];\r\n    const filteredColors = copyOfColorsArray.filter((ele) =>\r\n      ele.colorName.toUpperCase().includes(searchInputLabel.toUpperCase())\r\n    );\r\n    return (\r\n      <LabelsView\r\n        toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n        detailCover={detailCover}\r\n        nameLabelVisibilityFunc={this.nameLabelVisibilityFunc}\r\n        colorNameWindowVisi={colorNameWindowVisi}\r\n        addLabelColor={addLabelColor}\r\n        optionCoverData={optionCoverData}\r\n        toggleLabelColorToCard={this.toggleLabelColorToCard}\r\n        taskId={taskId}\r\n        generateCheckIcon={this.generateCheckIcon}\r\n        searchLabelColor={this.searchLabelColor}\r\n        searchInputLabel={searchInputLabel}\r\n        filteredColors={filteredColors}\r\n        nameLabelInput={this.nameLabelInput}\r\n        nameLabelInputValue={nameLabelInputValue}\r\n        choosedSquar={this.choosedSquar}\r\n        saveNameLabel={this.saveNameLabel}\r\n        currentSquarEdit={currentSquarEdit}\r\n        optionCover={optionCover}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Labels;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledCalendar = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  height: 250px;\r\n  color: white;\r\n`;\r\n\r\nconst StyledCalendarDays = styled.div`\r\n  width: 36px;\r\n  height: 36px;\r\n  margin: 0 3px;\r\n  text-align: center;\r\n  line-height: 36px;\r\n  font-size: 13px;\r\n  font-weight: 600;\r\n  background-color: #fff;\r\n  color: ${(props) => (props.darkerColor ? \"#42516e\" : \"#aaa\")};\r\n  border: 0.5px solid #fff;\r\n  border-radius: 50%;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.bgc ? \"#73829f !important\" : \"#fff\")};\r\n    color: ${(props) => (props.col ? \"#fff !important\" : \"#42516e\")};\r\n    cursor: ${(props) => (props.cur ? \"pointer !important\" : \"inherit\")};\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nfunction Calendar({\r\n  days,\r\n  emptyFields,\r\n  howManyDaysMonth,\r\n  todayDay,\r\n  setThisDayFunc,\r\n}) {\r\n  return (\r\n    <StyledCalendar className=\"calendar\">\r\n      {days.map((ele) => (\r\n        <StyledCalendarDays key={ele} className=\"calendar\">\r\n          {ele}\r\n        </StyledCalendarDays>\r\n      ))}\r\n      {emptyFields.map((ele) => (\r\n        <StyledCalendarDays ele={ele.id} className=\"calendar\" />\r\n      ))}\r\n      {howManyDaysMonth.map((ele) => (\r\n        <>\r\n          <StyledCalendarDays\r\n            key={ele.id}\r\n            bgc\r\n            col\r\n            cur\r\n            darkerColor\r\n            onClick={(e) => setThisDayFunc(e, ele.id)}\r\n            className=\"calendarDays calendar\"\r\n            style={{\r\n              backgroundColor: `${ele.id === todayDay ? \"#42516e\" : \"#fff\"}`,\r\n              color: `${ele.id === todayDay ? \"#fff\" : \"#42516e\"}`,\r\n            }}\r\n          >\r\n            {ele.day}\r\n          </StyledCalendarDays>\r\n        </>\r\n      ))}\r\n    </StyledCalendar>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Calendar from \"./Calendar\";\r\n\r\nconst StyledChangeListDetails = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  align-content: flex-start;\r\n  flex-wrap: wrap;\r\n  position: fixed;\r\n  width: 300px;\r\n  height: 590px;\r\n  top: ${(props) => (props.optionCoverPosition ? \"0px\" : \"null\")};\r\n  right: ${(props) => (props.optionCoverPosition ? \"-120px\" : \"null\")};\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  margin-bottom: 17.5px;\r\n  box-shadow: 0 0 15px 1px rgba(50, 50, 50, 0.2);\r\n`;\r\n\r\nconst StyledDateTitle = styled.h3`\r\n  width: 100%;\r\n  position: relative;\r\n  flex-grow: 1;\r\n  text-align: center;\r\n  font-size: 1.5rem;\r\n  border-bottom: 1px solid #aaa;\r\n  padding-bottom: 6px;\r\n  color: #555;\r\n  font-weight: 400;\r\n  margin-bottom: 5px;\r\n  padding: 10px;\r\n\r\n  & > .fa-times {\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledText = styled.h2`\r\n  width: 100%;\r\n  text-align: center;\r\n  font-size: ${(props) => (props.biggerFontSize ? \"40px\" : \"25px\")};\r\n  margin-left: 5px;\r\n  margin-bottom: 5px;\r\n  padding: 5px;\r\n  color: white;\r\n`;\r\n\r\nconst StyledDateWrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  background-color: #5aac44;\r\n  padding: 5px 10px;\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin: 0 5px;\r\n  font-size: 45px;\r\n  align-self: center;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst StyledColumnDate = styled.div`\r\n  display: flex;\r\n  flex-grow: 1;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: ${(props) => (props.redButton ? \"#CF513D\" : \"#5aac44\")};\r\n  border-radius: 4px;\r\n  margin: 10px auto;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n  align-self: center;\r\n\r\n  &:hover {\r\n    opacity: 0.85;\r\n  }\r\n`;\r\n\r\nconst StyledWrapDateInputs = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  width: 50%;\r\n`;\r\n\r\nconst StyledDateInput = styled.input`\r\n  width: 25%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  text-align: center;\r\n  border-radius: 3px;\r\n  padding: 5px 2.5px;\r\n  margin: 5px;\r\n  transition: 0.1s linear;\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf !important;\r\n  }\r\n`;\r\n\r\nconst StyledTitle = styled.h3`\r\n  width: 100%;\r\n  text-align: center;\r\n  font-size: 13px;\r\n  color: #888;\r\n`;\r\n\r\nconst StyledWarnSpan = styled.span`\r\n  width: 100%;\r\n  text-align: center;\r\n  margin: 2.5px 0;\r\n  color: #fff;\r\n`;\r\n\r\nfunction DatePickerView({\r\n  toggleCurrentListVisiFunc,\r\n  todayDay,\r\n  todayMonth,\r\n  todayYear,\r\n  todayMonthName,\r\n  hour,\r\n  minutes,\r\n  days,\r\n  toggleMonths,\r\n  emptyFields,\r\n  howManyDaysMonth,\r\n  choosedDateFunction,\r\n  choosedTimeFunction,\r\n  setThisDataFunctiion,\r\n  setThisDayFunc,\r\n  optionCover,\r\n}) {\r\n  return (\r\n    <StyledChangeListDetails\r\n      optionCoverPosition={optionCover}\r\n      className=\"calendar\"\r\n    >\r\n      <StyledDateTitle className=\"calendar\">\r\n        Change Date{\" \"}\r\n        <span\r\n          className=\"fas fa-times\"\r\n          onClick={() => toggleCurrentListVisiFunc(\"datePickerVisi\")}\r\n        />\r\n      </StyledDateTitle>\r\n      <StyledDateWrap className=\"calendar\">\r\n        <StyledIcon\r\n          className=\"fas fa-caret-left calendar\"\r\n          onClick={() => toggleMonths(\"Minus\")}\r\n        />\r\n        <StyledColumnDate className=\"calendar\">\r\n          <StyledText className=\"calendar\">{todayMonthName}</StyledText>\r\n          <StyledText biggerFontSize className=\"calendar\">\r\n            {todayDay}\r\n          </StyledText>\r\n          <StyledText className=\"calendar\">{todayYear}</StyledText>\r\n        </StyledColumnDate>\r\n\r\n        <StyledIcon\r\n          className=\"fas fa-caret-right calendar\"\r\n          onClick={() => toggleMonths(\"Add\")}\r\n        />\r\n      </StyledDateWrap>\r\n      <Calendar\r\n        days={days}\r\n        todayDay={todayDay}\r\n        emptyFields={emptyFields}\r\n        howManyDaysMonth={howManyDaysMonth}\r\n        setThisDayFunc={setThisDayFunc}\r\n        className=\"calendar\"\r\n      />\r\n      <StyledWrapDateInputs className=\"calendar\">\r\n        <StyledTitle className=\"calendar\">Date</StyledTitle>\r\n        <StyledDateInput\r\n          value={todayDay}\r\n          onChange={(e) => choosedDateFunction(e)}\r\n          name=\"todayDay\"\r\n          className=\"calendar dayInput\"\r\n        />\r\n        <StyledDateInput\r\n          value={todayMonth}\r\n          onChange={(e) => choosedDateFunction(e)}\r\n          name=\"todayMonth\"\r\n          className=\"calendar monthInput\"\r\n        />\r\n        <StyledDateInput\r\n          value={todayYear}\r\n          onChange={(e) => choosedDateFunction(e)}\r\n          name=\"todayYear\"\r\n          className=\"calendar yearInput\"\r\n        />\r\n        <StyledWarnSpan className=\"calendar warnSpanDate\">\r\n          e.g 21.9.2020\r\n        </StyledWarnSpan>\r\n      </StyledWrapDateInputs>\r\n\r\n      <StyledWrapDateInputs className=\"calendar\">\r\n        <StyledTitle className=\"calendar\">Time</StyledTitle>\r\n        <StyledDateInput\r\n          value={hour}\r\n          onChange={(e) => choosedTimeFunction(e)}\r\n          className=\"calendar hourInput\"\r\n          name=\"hour\"\r\n        />\r\n        <StyledDateInput\r\n          value={minutes}\r\n          onChange={(e) => choosedTimeFunction(e)}\r\n          className=\"calendar minutesInput\"\r\n          name=\"minutes\"\r\n        />\r\n        <StyledWarnSpan className=\"calendar warnSpanTime\">\r\n          e.g 06:45\r\n        </StyledWarnSpan>\r\n      </StyledWrapDateInputs>\r\n\r\n      <StyledButton\r\n        onClick={() => setThisDataFunctiion(\"save\")}\r\n        className=\"calendar\"\r\n      >\r\n        SAVE\r\n      </StyledButton>\r\n      <StyledButton\r\n        onClick={() => setThisDataFunctiion(\"delete\")}\r\n        redButton\r\n        className=\"calendar\"\r\n      >\r\n        DELETE\r\n      </StyledButton>\r\n    </StyledChangeListDetails>\r\n  );\r\n}\r\n\r\nexport default DatePickerView;\r\n","import React, { Component } from \"react\";\r\nimport DatePickerView from \"../../components/DatePicker/DatePickerView\";\r\n\r\nclass DatePicker extends Component {\r\n  state = {\r\n    time: \"\",\r\n    hour: \"\",\r\n    minutes: \"\",\r\n    todayFullDate: \"\",\r\n    todayWeekDay: \"\",\r\n    todayDay: \"\",\r\n    todayMonthName: \"\",\r\n    todayMonth: \"\",\r\n    todayYear: \"\",\r\n    days: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\r\n    months: [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ],\r\n    updateFlag: false,\r\n    action: \"\",\r\n    preventMonthLenghtFlag: true,\r\n    displayingMonthLength: \"\",\r\n    blankPlace: \"\",\r\n    emptyFilter: [],\r\n    contentFilter: [],\r\n    backMonthLenght: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    //Calculate with module which day will be FirstDay on INITIAL month\r\n    const date = new Date();\r\n    const counterModulo = (date.getDate() % 7) - 1;\r\n    const firstOfMonth = this.state.days.slice(\r\n      date.getDay() - counterModulo - 1\r\n    );\r\n\r\n    //Set INITIAL date ( current date ) in input\r\n    const todayFull = `${\r\n      date.getDate() <= 9 ? \"0\" + date.getDate() : date.getDate()\r\n    }.${\r\n      date.getMonth() + 1 <= 9\r\n        ? \"0\" + (date.getMonth() + 1)\r\n        : date.getMonth() + 1\r\n    }.${date.getFullYear()}`;\r\n\r\n    //Set INITIAL time ( current time ) in input\r\n    const hours = `${\r\n      date.getHours() <= 9 ? \"0\" + date.getHours() : date.getHours()\r\n    }`;\r\n    const minutes = `${\r\n      date.getMinutes() <= 9 ? \"0\" + date.getMinutes() : date.getMinutes()\r\n    }`;\r\n\r\n    //Call generate\r\n    this.generateOtherMonth(\r\n      firstOfMonth,\r\n      this.state.months[date.getMonth()],\r\n      date.getFullYear()\r\n    );\r\n    //INITIAL data for date\r\n    this.setState({\r\n      time: `${hours}:${minutes}`,\r\n      hour: hours,\r\n      minutes: minutes,\r\n      todayDay: date.getDate(),\r\n      todayMonthName: this.state.months[date.getMonth()],\r\n      todayMonth: date.getMonth() + 1,\r\n      todayYear: date.getFullYear(),\r\n      todayWeekDay: date.getDay(),\r\n      firstOfMonth: firstOfMonth,\r\n      todayFullDate: todayFull,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {\r\n      days,\r\n      todayDay,\r\n      todayMonth,\r\n      todayYear,\r\n      months,\r\n      updateFlag,\r\n      action,\r\n      displayingMonthLength,\r\n      backMonthLenght,\r\n      blankPlace,\r\n    } = this.state;\r\n\r\n    const todayWithZero = `${todayDay <= 9 ? \"0\" + todayDay : todayDay}`;\r\n    const monthWithZero = `${todayMonth <= 9 ? \"0\" + todayMonth : todayMonth}`;\r\n\r\n    //Update date ( month and year)\r\n    if (updateFlag && action === \"Add\") {\r\n      //Calculate which day will be FirstDay on next Month\r\n      const nextMonthFromDay = 7 - (42 - displayingMonthLength);\r\n      const nextMonthDay = days.slice(nextMonthFromDay);\r\n      const nextMonthDayArr = [];\r\n      nextMonthDayArr.push(nextMonthDay[0]);\r\n      if (todayMonth > 12) {\r\n        //Generate Call for Next Month and Year,send to state new date\r\n        this.generateOtherMonth(nextMonthDayArr, months[0], todayYear + 1);\r\n        this.setState({\r\n          todayDay: todayDay,\r\n          todayMonthName: months[0],\r\n          todayMonth: 1,\r\n          todayYear: todayYear + 1,\r\n          updateFlag: false,\r\n          preventMonthLenghtFlag: true,\r\n          firstOfMonth: nextMonthDayArr,\r\n          todayFullDate: `${todayWithZero}.${\"0\" + 1}.${todayYear + 1}`, //Input udating with every back/next click\r\n        });\r\n        return;\r\n      }\r\n      //Generate Call for Next Month, send to state new date\r\n      this.generateOtherMonth(\r\n        nextMonthDayArr,\r\n        months[todayMonth - 1],\r\n        todayYear\r\n      );\r\n      this.setState({\r\n        todayDay: todayDay,\r\n        todayMonthName: months[todayMonth - 1],\r\n        todayMonth: todayMonth,\r\n        todayYear: todayYear,\r\n        updateFlag: false,\r\n        preventMonthLenghtFlag: true,\r\n        firstOfMonth: nextMonthDayArr,\r\n        todayFullDate: `${todayWithZero}.${monthWithZero}.${todayYear}`,\r\n      });\r\n    } else if (updateFlag && action === \"Minus\") {\r\n      const blankInPrevMonthInEnd = 7 - blankPlace;\r\n      const firstDayOfPrevMonth =\r\n        35 - (backMonthLenght + blankInPrevMonthInEnd);\r\n      const nextMonthDayArr = days.slice(firstDayOfPrevMonth);\r\n      if (todayMonth < 1) {\r\n        //Generate Call for Back Month and Year, send to state new date\r\n        this.generateOtherMonth(nextMonthDayArr, months[11], todayYear - 1);\r\n        this.setState({\r\n          todayDay: todayDay,\r\n          todayMonthName: months[11],\r\n          todayMonth: 12,\r\n          todayYear: todayYear - 1,\r\n          updateFlag: false,\r\n          preventMonthLenghtFlag: true,\r\n          firstOfMonth: nextMonthDayArr,\r\n          todayFullDate: `${todayWithZero}.${12}.${todayYear - 1}`,\r\n        });\r\n        return;\r\n      }\r\n      //Generate Call for Back Month, send to state new date\r\n      this.generateOtherMonth(\r\n        nextMonthDayArr,\r\n        months[todayMonth - 1],\r\n        todayYear\r\n      );\r\n      this.setState({\r\n        todayDay: todayDay,\r\n        todayMonthName: months[todayMonth - 1],\r\n        todayMonth: todayMonth,\r\n        todayYear: todayYear,\r\n        updateFlag: false,\r\n        preventMonthLenghtFlag: true,\r\n        firstOfMonth: nextMonthDayArr,\r\n        todayFullDate: `${todayWithZero}.${monthWithZero}.${todayYear}`,\r\n      });\r\n    }\r\n  }\r\n\r\n  generateOtherMonth = (firstOfMonth, todayMonthName, todayYear) => {\r\n    const displayingMonthLength = [];\r\n    let stepBackMonthLength = \"\";\r\n    if (firstOfMonth) {\r\n      //Empty - how many EMPTY SQUAR we need AGAINST back or next calendaer/month\r\n      const empty = this.state.days.findIndex((ele) => ele === firstOfMonth[0]);\r\n      //Calculate backMonthLenght, when we BACK calendar, calucalte prevMonthLenght when we NEXT calendar\r\n      if (\r\n        todayMonthName === \"January\" ||\r\n        todayMonthName === \"March\" ||\r\n        todayMonthName === \"May\" ||\r\n        todayMonthName === \"July\" ||\r\n        todayMonthName === \"August\" ||\r\n        todayMonthName === \"October\" ||\r\n        todayMonthName === \"December\"\r\n      ) {\r\n        for (let i = 1; i < 32; i++) {\r\n          displayingMonthLength.push({ day: i, id: i });\r\n        }\r\n        if (todayMonthName === \"August\" || todayMonthName === \"January\") {\r\n          stepBackMonthLength = 31;\r\n        } else if (todayMonthName === \"March\" && todayYear % 4 === 0) {\r\n          stepBackMonthLength = 29;\r\n        } else if (todayMonthName === \"March\" && todayYear % 4 !== 0) {\r\n          stepBackMonthLength = 28;\r\n        } else {\r\n          stepBackMonthLength = 30;\r\n        }\r\n      } else if (todayMonthName === \"February\" && todayYear % 4 === 0) {\r\n        for (let i = 1; i < 30; i++) {\r\n          displayingMonthLength.push({ day: i, id: i });\r\n        }\r\n        stepBackMonthLength = 31;\r\n      } else if (todayMonthName === \"February\" && todayYear % 4 !== 0) {\r\n        for (let i = 1; i < 29; i++) {\r\n          displayingMonthLength.push({ day: i, id: i });\r\n        }\r\n        stepBackMonthLength = 31;\r\n      } else {\r\n        for (let i = 1; i < 31; i++) {\r\n          displayingMonthLength.push({ day: i, id: i });\r\n        }\r\n        stepBackMonthLength = 31;\r\n      }\r\n\r\n      for (let i = 0; empty > i; i++) {\r\n        displayingMonthLength.unshift({ day: \"\", id: `blank${i}` });\r\n      }\r\n\r\n      //Filtering seperately emptyFields before first day of Month, and\r\n      // proper days with number content inside\r\n      const emptyFilter = displayingMonthLength.filter(\r\n        (ele) => ele.day.length === 0\r\n      );\r\n      const mappingArrayWithContent = displayingMonthLength.filter(\r\n        (ele) => ele.day.length !== 0\r\n      );\r\n\r\n      //Send every made informations to STATE, so during componentUpdate we can use it (when back or next calendar)\r\n      this.setState({\r\n        displayingMonthLength: displayingMonthLength.length,\r\n        blankPlace: empty,\r\n        emptyFilter: emptyFilter,\r\n        contentFilter: mappingArrayWithContent,\r\n        backMonthLenght: stepBackMonthLength,\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleMonths = (whichWay) => {\r\n    //Back or Next month for toggle months and years\r\n    if (whichWay === \"Add\") {\r\n      this.setState({\r\n        todayMonth: this.state.todayMonth + 1,\r\n        updateFlag: true,\r\n        action: whichWay,\r\n      });\r\n    }\r\n\r\n    if (whichWay === \"Minus\") {\r\n      this.setState({\r\n        todayMonth: this.state.todayMonth - 1,\r\n        updateFlag: true,\r\n        action: whichWay,\r\n      });\r\n    }\r\n  };\r\n\r\n  choosedDateFunction = (e) => {\r\n    //Input onChange function for date\r\n    this.setState({\r\n      [e.target.name]: e.target.value.substr(0, 4),\r\n    });\r\n  };\r\n\r\n  choosedTimeFunction = (e) => {\r\n    //Input onChange function for time\r\n    this.setState({\r\n      [e.target.name]: e.target.value.substr(0, 2),\r\n    });\r\n  };\r\n\r\n  setThisDayFunc = (e, thisDay) => {\r\n    //Set proper style for clicked Day and set proper date in input\r\n    const calendarDays = document.querySelectorAll(\".calendarDays\");\r\n    calendarDays.forEach((ele) => {\r\n      ele.style.backgroundColor = \"#fff\";\r\n      ele.style.color = \"#42516e\";\r\n      ele.style.fontSize = \"13px\";\r\n    });\r\n    e.target.style.backgroundColor = \"#42516e\";\r\n    e.target.style.color = \"#fff\";\r\n    e.target.style.fontSize = \"16px\";\r\n\r\n    const day = `${thisDay <= 9 ? \"0\" + thisDay : thisDay}`;\r\n    const month = `${\r\n      this.state.todayMonth <= 9\r\n        ? \"0\" + this.state.todayMonth\r\n        : this.state.todayMonth\r\n    }`;\r\n    const year = this.state.todayYear;\r\n\r\n    this.setState({\r\n      todayFullDate: `${day}.${month}.${year}`,\r\n      todayDay: thisDay,\r\n    });\r\n  };\r\n\r\n  setThisDataFunctiion = (buttonType) => {\r\n    //Send choosed date to main function and currentCard object, after validation by patter RegEx\r\n    const patternDay = /^([1-9]|[12][0-9]|3[01])$/;\r\n    const patternMonth = /^([1-9]|1[012])$/;\r\n    const patternYear = /^(19|20)\\d\\d$/;\r\n    const patternHour = /^([0-1][0-9]|[2][0-4])$/;\r\n    const patternMinutes = /^([0-5][0-9])$/;\r\n\r\n    const {\r\n      todayFullDate,\r\n      todayDay: toD,\r\n      todayMonth: toM,\r\n      todayYear: toY,\r\n      hour,\r\n      minutes,\r\n    } = this.state;\r\n    if (\r\n      patternDay.test(toD) &&\r\n      patternMonth.test(toM) &&\r\n      patternYear.test(toY) &&\r\n      patternHour.test(hour) &&\r\n      patternMinutes.test(minutes)\r\n    ) {\r\n      const currDate = new Date();\r\n      const currD = currDate.getDate();\r\n      const currM = currDate.getMonth() + 1;\r\n      const currY = currDate.getFullYear();\r\n      const currH = currDate.getHours();\r\n      const currMin = currDate.getMinutes();\r\n      const shorcutMonth = this.state.months[toM - 1];\r\n\r\n      if (\r\n        (toD === currD + 3 && currM === toM && currY === toY) ||\r\n        (toD === currD + 2 && currM === toM && currY === toY)\r\n      ) {\r\n        return this.toggleTermToCard(\r\n          this.props.taskId,\r\n          todayFullDate,\r\n          toD,\r\n          toM,\r\n          toY,\r\n          shorcutMonth,\r\n          hour,\r\n          minutes,\r\n          \"Soon\",\r\n          \"#E6C60D\",\r\n          \"#fff\",\r\n          buttonType\r\n        );\r\n      }\r\n      if (toD === currD + 1 && currM === toM && currY === toY) {\r\n        return this.toggleTermToCard(\r\n          this.props.taskId,\r\n          todayFullDate,\r\n          \"Tomorrow\",\r\n          toM,\r\n          toY,\r\n          shorcutMonth,\r\n          hour,\r\n          minutes,\r\n          \"Soon\",\r\n          \"#E6C60D\",\r\n          \"#fff\",\r\n          buttonType\r\n        );\r\n      } else if (\r\n        toD === currD &&\r\n        currM === toM &&\r\n        currY === toY &&\r\n        currH <= hour &&\r\n        currMin <= minutes\r\n      ) {\r\n        return this.toggleTermToCard(\r\n          this.props.taskId,\r\n          todayFullDate,\r\n          \"Today\",\r\n          toM,\r\n          toY,\r\n          shorcutMonth,\r\n          hour,\r\n          minutes,\r\n          \"Soon\",\r\n          \"#E6C60D\",\r\n          \"#fff\",\r\n          buttonType\r\n        );\r\n      } else if (\r\n        (currD <= toD &&\r\n          currM <= toM &&\r\n          currY <= toY &&\r\n          currH <= hour &&\r\n          currMin <= minutes) ||\r\n        (currD > toD && currM < toM && currY <= toY) ||\r\n        currY < toY\r\n      ) {\r\n        return this.toggleTermToCard(\r\n          this.props.taskId,\r\n          todayFullDate,\r\n          toD,\r\n          toM,\r\n          toY,\r\n          shorcutMonth,\r\n          hour,\r\n          minutes,\r\n          \"\",\r\n          \"#888\",\r\n          \"#fff\",\r\n          buttonType\r\n        );\r\n      } else {\r\n        return this.toggleTermToCard(\r\n          this.props.taskId,\r\n          todayFullDate,\r\n          toD,\r\n          toM,\r\n          toY,\r\n          shorcutMonth,\r\n          hour,\r\n          minutes,\r\n          \"Overdue\",\r\n          \"#EB5A46\",\r\n          \"#fff\",\r\n          buttonType\r\n        );\r\n      }\r\n    } else {\r\n      if (!patternDay.test(toD)) {\r\n        document.querySelector(\".dayInput\").style.boxShadow =\r\n          \"0px 0px 1px 1.5px #f55\";\r\n      } else {\r\n        document.querySelector(\".dayInput\").style.boxShadow =\r\n          \"0px 0px 1px 1.5px #ccc\";\r\n      }\r\n\r\n      if (!patternMonth.test(toM)) {\r\n        document.querySelector(\".monthInput\").style.boxShadow =\r\n          \"0px 0px 1px 1.5px #f55\";\r\n      } else {\r\n        document.querySelector(\".monthInput\").style.boxShadow =\r\n          \"0px 0px 1px 1.5px #ccc\";\r\n      }\r\n\r\n      if (!patternYear.test(toY)) {\r\n        document.querySelector(\".yearInput\").style.boxShadow =\r\n          \"0px 0px 1px 1.5px #f55\";\r\n      } else {\r\n        document.querySelector(\".yearInput\").style.boxShadow =\r\n          \"0px 0px 1px 1.5px #ccc\";\r\n      }\r\n\r\n      if (!patternHour.test(hour)) {\r\n        document.querySelector(\".hourInput\").style.boxShadow =\r\n          \"0px 0px 1px 1.5px #f55\";\r\n      } else {\r\n        document.querySelector(\".hourInput\").style.boxShadow =\r\n          \"0px 0px 1px 1.5px #ccc\";\r\n      }\r\n\r\n      if (!patternMinutes.test(minutes)) {\r\n        document.querySelector(\".minutesInput\").style.boxShadow =\r\n          \"0px 0px 1px 1.5px #f55\";\r\n      } else {\r\n        document.querySelector(\".minutesInput\").style.boxShadow =\r\n          \"0px 0px 1px 1.5px #ccc\";\r\n      }\r\n\r\n      if (\r\n        !patternDay.test(toD) ||\r\n        !patternMonth.test(toM) ||\r\n        !patternYear.test(toY)\r\n      ) {\r\n        document.querySelector(\".warnSpanDate\").style.color = \"#f55\";\r\n      } else if (\r\n        patternDay.test(toD) &&\r\n        patternMonth.test(toM) &&\r\n        patternYear.test(toY)\r\n      ) {\r\n        document.querySelector(\".warnSpanDate\").style.color = \"#fff\";\r\n      }\r\n\r\n      if (!patternHour.test(hour) || !patternMinutes.test(minutes)) {\r\n        document.querySelector(\".warnSpanTime\").style.color = \"#f55\";\r\n      } else if (patternHour.test(hour) && patternMinutes.test(minutes)) {\r\n        document.querySelector(\".warnSpanTime\").style.color = \"#fff\";\r\n      }\r\n    }\r\n  };\r\n\r\n  toggleTermToCard = (\r\n    taskId,\r\n    date,\r\n    day,\r\n    month,\r\n    year,\r\n    monthName,\r\n    hour,\r\n    minutes,\r\n    status,\r\n    statusColor,\r\n    fontColor,\r\n    buttonType\r\n  ) => {\r\n    if (buttonType === \"save\") {\r\n      const termExistAlready = this.props.listOfAllTerms.filter(\r\n        (ele) => ele.id === taskId\r\n      );\r\n      if (termExistAlready.length !== 0) {\r\n        const existingTermIndex = this.props.listOfAllTerms.findIndex(\r\n          (ele) => ele.id === taskId\r\n        );\r\n        const currentCard = document.getElementById(`${taskId}term`);\r\n        currentCard.innerHTML = \"\";\r\n        this.props.listOfAllTerms.splice(existingTermIndex, 1);\r\n      }\r\n      const currentCard = document.getElementById(`${taskId}term`);\r\n      const termSpan = document.createElement(\"span\");\r\n      termSpan.classList.add(\"termSpan\");\r\n      termSpan.textContent = `${day} ${monthName} ${status}`;\r\n      termSpan.style.backgroundColor = statusColor;\r\n      termSpan.style.color = fontColor;\r\n      currentCard.appendChild(termSpan);\r\n\r\n      this.props.setListOfallTerms([\r\n        ...this.props.listOfAllTerms,\r\n        {\r\n          id: taskId,\r\n          classN: \"termSpan\",\r\n          term: date,\r\n          day,\r\n          month,\r\n          year,\r\n          monthName,\r\n          hour,\r\n          minutes,\r\n          status,\r\n          statusColor,\r\n          fontColor,\r\n          beforeDoneState: { beforeColor: \"\", beforeStatus: \"\" },\r\n        },\r\n      ]);\r\n    } else {\r\n      //When btnDelete clicked, delete from list and form card DOM\r\n      const termToDeleteIndex = this.props.listOfAllTerms.findIndex(\r\n        (ele) => ele.id === taskId\r\n      );\r\n      this.props.listOfAllTerms.splice(termToDeleteIndex, 1);\r\n      const currentCardTerm = document.getElementById(`${taskId}term`);\r\n      currentCardTerm.innerHTML = \"\";\r\n    }\r\n    this.props.toggleCurrentListVisiFunc(\"datePickerVisi\");\r\n  };\r\n\r\n  render() {\r\n    const { toggleCurrentListVisiFunc, optionCover } = this.props;\r\n    const {\r\n      hour,\r\n      minutes,\r\n      days,\r\n      todayDay,\r\n      todayMonth,\r\n      todayYear,\r\n      todayMonthName,\r\n    } = this.state;\r\n\r\n    return (\r\n      <DatePickerView\r\n        toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n        hour={hour}\r\n        minutes={minutes}\r\n        days={days}\r\n        todayDay={todayDay}\r\n        todayYear={todayYear}\r\n        todayMonth={todayMonth}\r\n        todayMonthName={todayMonthName}\r\n        toggleMonths={this.toggleMonths}\r\n        choosedDateFunction={this.choosedDateFunction}\r\n        choosedTimeFunction={this.choosedTimeFunction}\r\n        setThisDataFunctiion={this.setThisDataFunctiion}\r\n        emptyFields={this.state.emptyFilter}\r\n        howManyDaysMonth={this.state.contentFilter}\r\n        setThisDayFunc={this.setThisDayFunc}\r\n        optionCover={optionCover}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatePicker;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport OptionCoverListView from \"./OptionCoverListView/OptionCoverListView\";\r\nimport MoveToAnotherListBox from \"../MoveToAnotherList/MoveToAnotherListBox\";\r\nimport CopyCard from \"../../Containers/CopyCard/CopyCard\";\r\nimport Labels from \"../../Containers/Labels/Labels\";\r\nimport DatePicker from \"../../Containers/DatePicker/DatePicker\";\r\nimport TaskPreviewCard from \"../TasksList/TasksPreviewInCard/TaskPreviewInCard\";\r\n\r\nconst StyledCover = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.65);\r\n  z-index: 0;\r\n  overflow-x: scroll;\r\n  background-attachment: fixed;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n\r\n  &::-webkit-scrollbar {\r\n    height: 17.5px;\r\n    width: 0px;\r\n    position: relative;\r\n    z-index: 999;\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    background: rgba(0, 0, 0, 1);\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background: rgba(45, 45, 45, 1);\r\n    border-radius: 10px;\r\n    height: 10px;\r\n  }\r\n  &::-webkit-scrollbar-thumb:hover {\r\n    background: rgba(55, 55, 55, 1);\r\n  }\r\n`;\r\n\r\nconst StyledOptionBox = styled.div`\r\n  position: relative;\r\n  transform: translate(0, -50%);\r\n  height: 400px;\r\n  width: 450px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  z-index: 999;\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 260px;\r\n  min-height: 70px;\r\n  padding: 0px 7.5px;\r\n  font-size: 14px;\r\n  color: #172b4d;\r\n  resize: none;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 0px;\r\n  }\r\n`;\r\n\r\nconst StyledSaveButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: #5aac44;\r\n  border-radius: 4px;\r\n  margin-top: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: #6abc54;\r\n  }\r\n`;\r\n\r\nconst StyledWrapLabels = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 260px;\r\n  min-height: 10px;\r\n  padding: 5px 5px 0px 5px;\r\n  border-top-left-radius: 5px;\r\n  border-top-right-radius: 5px;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst StyledWrapTextAndLabels = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 260px;\r\n  align-self: flex-start;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: 13px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledDate = styled.span`\r\n  text-align: center;\r\n  align-self: flex-start;\r\n  padding: 5px 7.5px;\r\n  background-color: rgba(255, 255, 255, 0.85);\r\n  border-bottom-left-radius: 5px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst StyledWrapTerms = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 260px;\r\n  min-height: 25px;\r\n  border-bottom-left-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n  background-color: #fff;\r\n  color: #777;\r\n`;\r\n\r\nconst OptionCover = ({\r\n  optionCoverData,\r\n  taskTitleFeature,\r\n  taskTitle,\r\n  updateCard,\r\n  deleteCard,\r\n  handleLabelsVisibility,\r\n  labelVisi,\r\n  toggleLabelColorToCard,\r\n  listOfAllBadges,\r\n  matchedColorsToThisCard,\r\n  listOfAllTasksId,\r\n  labelColors,\r\n  setLabelColors,\r\n  addPriorityForCards,\r\n  moveToAnotherListVisi,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  matchedPriority,\r\n  copyCardVisi,\r\n  datePickerVisi,\r\n  toggleTermToCard,\r\n  matchedTerms,\r\n  unActiveTasks,\r\n  totalTasks,\r\n  toggleCurrentListVisiFunc,\r\n  closeAllListsWindowsFunc,\r\n  setListOfallTerms,\r\n  listOfAllTerms,\r\n  reloadCoverComponentFunc,\r\n  listOfAllComments,\r\n  addNewCard,\r\n}) => {\r\n  return (\r\n    <StyledCover className=\"coverOption\">\r\n      <StyledOptionBox className=\"cover_box\">\r\n        <StyledWrapTextAndLabels className=\"cover_box\">\r\n          <StyledWrapLabels className=\"coverOption_wrapLabel\">\r\n            {matchedColorsToThisCard.map((ele) => (\r\n              <div\r\n                key={ele.color}\r\n                id={`${ele.labelId}OptionCover`}\r\n                className={`labelElement`}\r\n                style={{ backgroundColor: ele.color }}\r\n              >\r\n                {ele.name}\r\n              </div>\r\n            ))}\r\n          </StyledWrapLabels>\r\n          <StyledTextArea\r\n            className=\"textArea_Option\"\r\n            onClick={() => closeAllListsWindowsFunc()}\r\n            onChange={(e) => taskTitleFeature(e)}\r\n            onKeyPress={(e) =>\r\n              updateCard(\r\n                e,\r\n                taskTitle,\r\n                optionCoverData[0].listId,\r\n                optionCoverData[0].clickedCardId\r\n              )\r\n            }\r\n            value={taskTitle}\r\n          />\r\n          <StyledWrapTerms>\r\n            {matchedTerms.map((ele) => (\r\n              <StyledDate\r\n                key={ele.id}\r\n                className={ele.classN}\r\n                style={{\r\n                  backgroundColor: ele.statusColor,\r\n                  color: ele.fontColor,\r\n                }}\r\n              >\r\n                <StyledIcon className=\"far fa-clock\" />\r\n                {`${ele.day} ${ele.monthName} ${ele.status}`}\r\n              </StyledDate>\r\n            ))}\r\n            <TaskPreviewCard\r\n              unActiveTasks={unActiveTasks}\r\n              totalTasks={totalTasks}\r\n            />\r\n          </StyledWrapTerms>\r\n          <StyledSaveButton\r\n            className=\"cover_saveBtn\"\r\n            onClick={(e) =>\r\n              updateCard(\r\n                e,\r\n                taskTitle,\r\n                optionCoverData[0].listId,\r\n                optionCoverData[0].clickedCardId\r\n              )\r\n            }\r\n          >\r\n            Save\r\n          </StyledSaveButton>\r\n        </StyledWrapTextAndLabels>\r\n        <OptionCoverListView\r\n          deleteCard={deleteCard}\r\n          taskTitle={taskTitle}\r\n          listId={optionCoverData[0].listId}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          optionCoverData={optionCoverData}\r\n          addPriorityForCards={addPriorityForCards}\r\n          matchedPriority={matchedPriority}\r\n          toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n        />\r\n\r\n        {labelVisi ? (\r\n          <Labels\r\n            toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n            optionCoverData={optionCoverData}\r\n            toggleLabelColorToCard={toggleLabelColorToCard}\r\n            taskId={optionCoverData[0].clickedCardId}\r\n            listOfAllBadges={listOfAllBadges}\r\n            listOfAllTasksId={listOfAllTasksId}\r\n            labelColors={labelColors}\r\n            setLabelColors={setLabelColors}\r\n            optionCover={true}\r\n            reloadCoverComponentFunc={reloadCoverComponentFunc}\r\n          />\r\n        ) : null}\r\n        {moveToAnotherListVisi ? (\r\n          <MoveToAnotherListBox\r\n            taskTitle={taskTitle}\r\n            wholeList={wholeList}\r\n            moveCardToAnotherList={moveCardToAnotherList}\r\n            taskId={optionCoverData[0].clickedCardId}\r\n            currentListId={optionCoverData[0].listId}\r\n            optionCover={true}\r\n            toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n          />\r\n        ) : null}\r\n        {copyCardVisi ? (\r\n          <CopyCard\r\n            matchedColorsToThisCard={matchedColorsToThisCard}\r\n            toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n            wholeList={wholeList}\r\n            taskTitle={taskTitle}\r\n            taskId={optionCoverData[0].clickedCardId}\r\n            currentListId={optionCoverData[0].listId}\r\n            optionCover={true}\r\n            listOfAllBadges={listOfAllBadges}\r\n            listOfAllTerms={listOfAllTerms}\r\n            listOfAllComments={listOfAllComments}\r\n            listOfAllTasksId={listOfAllTasksId}\r\n            addNewCard={addNewCard}\r\n          />\r\n        ) : null}\r\n        {datePickerVisi ? (\r\n          <DatePicker\r\n            toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n            taskId={optionCoverData[0].clickedCardId}\r\n            toggleTermToCard={toggleTermToCard}\r\n            optionCover={true}\r\n            setListOfallTerms={setListOfallTerms}\r\n            listOfAllTerms={listOfAllTerms}\r\n          />\r\n        ) : null}\r\n      </StyledOptionBox>\r\n    </StyledCover>\r\n  );\r\n};\r\n\r\nexport default OptionCover;\r\n","import React, { Component } from \"react\";\r\nimport OptionCoverView from \"../../components/OptionCover/OptionCoverView\";\r\n\r\nclass OptionCover extends Component {\r\n  state = {\r\n    taskTitle: \"\",\r\n    moveToAnotherListVisi: false,\r\n    copyCardVisi: false,\r\n    labelVisi: false,\r\n    datePickerVisi: false,\r\n    reloadOptionCoverCompState: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setOptionCoverPostion(this.props.optionCoverData);\r\n    this.setState({\r\n      taskTitle: this.props.optionCoverData[0].taskTitle.taskName,\r\n    });\r\n  }\r\n\r\n  addPriorityForCards = (e, cardId, byElement) => {\r\n    const { listOfAllPriorityTasks, setListOfPriority } = this.props;\r\n    if (!listOfAllPriorityTasks.includes(cardId)) {\r\n      setListOfPriority([...listOfAllPriorityTasks, cardId]);\r\n      const clickedCardDOM = document.getElementById(cardId);\r\n      clickedCardDOM.style.border = \"1px solid #db4a36\";\r\n      e.target.style.color = \"#db4a36\";\r\n      e.target.children[0].style.color = \"#db4a36\";\r\n    } else if (listOfAllPriorityTasks.includes(cardId)) {\r\n      const indexToDelete = listOfAllPriorityTasks.findIndex(\r\n        (ele) => ele === cardId\r\n      );\r\n      listOfAllPriorityTasks.splice(indexToDelete, 1);\r\n      const clickedCardDOM = document.getElementById(cardId);\r\n      clickedCardDOM.style.border = null;\r\n      if (byElement === \"detailCover\") {\r\n        e.target.style.color = \"#42516e\";\r\n        e.target.children[0].style.color = \"#42516e\";\r\n      } else {\r\n        e.target.style.color = \"#fff\";\r\n        e.target.children[0].style.color = \"#fff\";\r\n      }\r\n    }\r\n  };\r\n\r\n  setOptionCoverPostion = (taskData) => {\r\n    const mainOffsetTop = document.querySelector(\".main\").offsetTop;\r\n    const coverBox = document.querySelector(\".cover_box\");\r\n    const coverBoxHeight = coverBox.offsetHeight;\r\n    const scrollPosition = Math.floor(\r\n      document.querySelector(\".main\").scrollLeft\r\n    );\r\n\r\n    const currentList = document.getElementById(`list${taskData[0].listId}`);\r\n    const currentListScrollNow = currentList.scrollTop;\r\n\r\n    //ListIndex, when list is moving to another place\r\n    const listIndex = taskData[0].wholeList.findIndex(\r\n      (element) => element.id === taskData[0].listId\r\n    );\r\n\r\n    const positionY =\r\n      mainOffsetTop +\r\n      taskData[0].top -\r\n      currentListScrollNow -\r\n      25 +\r\n      coverBoxHeight / 1.65;\r\n    const positionX = 285 * listIndex + 18.5 - scrollPosition;\r\n\r\n    //Top and Left BOX Position Calculate\r\n    coverBox.style.top = `${positionY}px`;\r\n    coverBox.style.left = `${positionX}px`;\r\n  };\r\n\r\n  taskTitleFeature = (e) => {\r\n    this.setState({ taskTitle: e.target.value });\r\n  };\r\n\r\n  toggleCurrentListVisiFunc = (nameVisi) => {\r\n    this.setState({ [nameVisi]: !this.state[nameVisi] });\r\n  };\r\n\r\n  closeAllListsWindowsFunc = () => {\r\n    this.setState({\r\n      moveToAnotherListVisi: false,\r\n      copyCardVisi: false,\r\n      labelVisi: false,\r\n      datePickerVisi: false,\r\n    });\r\n  };\r\n\r\n  reloadCoverComponentFunc = () => {\r\n    this.setState({\r\n      reloadOptionCoverCompState: !this.state.reloadOptionCoverCompState,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      optionCoverData,\r\n      updateCard,\r\n      deleteCard,\r\n      toggleLabelColorToCard,\r\n      listOfAllBadges,\r\n      listOfAllTasksId,\r\n      labelColors,\r\n      setLabelColors,\r\n      wholeList,\r\n      moveCardToAnotherList,\r\n      listOfAllPriorityTasks,\r\n      toggleDateVisibility,\r\n      toggleTermToCard,\r\n      listOfAllTerms,\r\n      listOfAllTasksList,\r\n      listOfAllComments,\r\n      setListOfallTerms,\r\n      addNewCard,\r\n    } = this.props;\r\n\r\n    const {\r\n      taskTitle,\r\n      moveToAnotherListVisi,\r\n      copyCardVisi,\r\n      labelVisi,\r\n      datePickerVisi,\r\n    } = this.state;\r\n\r\n    const copyOfallBadges = [...listOfAllBadges];\r\n\r\n    const matchedColorsToThisCard = copyOfallBadges.filter(\r\n      (ele) => ele.id === optionCoverData[0].clickedCardId\r\n    );\r\n\r\n    const copyOfAllPriority = [...listOfAllPriorityTasks];\r\n    const matchedPriority = copyOfAllPriority.filter(\r\n      (ele) => ele === optionCoverData[0].clickedCardId\r\n    );\r\n\r\n    const copyOfAllTerms = [...listOfAllTerms];\r\n    const matchedTerms = copyOfAllTerms.filter(\r\n      (ele) => ele.id === optionCoverData[0].clickedCardId\r\n    );\r\n\r\n    const copyOfAllTasksList = [...listOfAllTasksList];\r\n    const matchedTasksList = copyOfAllTasksList.filter(\r\n      (ele) => ele.id === optionCoverData[0].clickedCardId\r\n    );\r\n\r\n    let unActiveTasks = 0;\r\n    let totalTasks = 0;\r\n\r\n    matchedTasksList.forEach((ele) => {\r\n      totalTasks += ele.totalOfSubTasks;\r\n      unActiveTasks += ele.unActiveSubtasks;\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <OptionCoverView\r\n          optionCoverData={optionCoverData}\r\n          taskTitleFeature={this.taskTitleFeature}\r\n          taskTitle={taskTitle}\r\n          updateCard={updateCard}\r\n          deleteCard={deleteCard}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          addPriorityForCards={this.addPriorityForCards}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          matchedPriority={matchedPriority}\r\n          toggleDateVisibility={toggleDateVisibility}\r\n          toggleTermToCard={toggleTermToCard}\r\n          matchedTerms={matchedTerms}\r\n          unActiveTasks={unActiveTasks}\r\n          totalTasks={totalTasks}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          listOfAllTasksList={listOfAllTasksList}\r\n          closeAllListsWindowsFunc={this.closeAllListsWindowsFunc}\r\n          toggleCurrentListVisiFunc={this.toggleCurrentListVisiFunc}\r\n          labelVisi={labelVisi}\r\n          moveToAnotherListVisi={moveToAnotherListVisi}\r\n          datePickerVisi={datePickerVisi}\r\n          copyCardVisi={copyCardVisi}\r\n          setListOfallTerms={setListOfallTerms}\r\n          listOfAllTerms={listOfAllTerms}\r\n          listOfAllComments={listOfAllComments}\r\n          reloadCoverComponentFunc={this.reloadCoverComponentFunc}\r\n          addNewCard={addNewCard}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OptionCover;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTaskName = styled.input`\r\n  width: calc(100% - 50px);\r\n  background-color: #f4f5f7;\r\n  border-radius: 1px;\r\n  padding: 5px 4px;\r\n  font-size: 1.8rem;\r\n  font-weight: 600;\r\n  color: #172b4d;\r\n\r\n  &:focus {\r\n    background-color: white;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nfunction Detail_Input({\r\n  taskTitle,\r\n  taskTitleFeature,\r\n  updateCard,\r\n  currentListId,\r\n  taskId,\r\n}) {\r\n  return (\r\n    <>\r\n      <StyledTaskName\r\n        className=\"input detailCoverClose\"\r\n        value={taskTitle}\r\n        onChange={(e) => taskTitleFeature(e)}\r\n      />\r\n      <span\r\n        className=\"fas fa-times close\"\r\n        onClick={(e) => updateCard(e, taskTitle, currentListId, taskId)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Detail_Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MoveToAnotherListBox from \"../../../MoveToAnotherList/MoveToAnotherListBox\";\r\n\r\nconst StyledLightText = styled.h3`\r\n  margin-top: 7.5px;\r\n  font-weight: 400;\r\n  font-size: 1.4rem;\r\n  color: #172b4d;\r\n`;\r\n\r\nconst StyledStrongText = styled.strong`\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction DetailSuggestedElement({\r\n  taskTitleList,\r\n  taskTitle,\r\n  moveToInSuggestedVisi,\r\n  toggleCurrentListVisiFunc,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  taskId,\r\n  currentListId,\r\n}) {\r\n  return (\r\n    <StyledLightText>\r\n      On the list{\" \"}\r\n      <StyledStrongText\r\n        onClick={() => toggleCurrentListVisiFunc(\"moveToInSuggestedVisi\")}\r\n      >\r\n        {taskTitleList.length !== 0 ? taskTitleList : \"No Name List\"}\r\n        {}\r\n      </StyledStrongText>\r\n      {moveToInSuggestedVisi ? (\r\n        <MoveToAnotherListBox\r\n          taskTitle={taskTitle}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          taskId={taskId}\r\n          taskTitleList={taskTitleList}\r\n          toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n          currentListId={currentListId}\r\n          moveToInSuggestedVisi={\"moveToInSuggestedVisi\"}\r\n        />\r\n      ) : null}\r\n    </StyledLightText>\r\n  );\r\n}\r\n\r\nexport default DetailSuggestedElement;\r\n","const size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n  desktop: \"2560px\",\r\n};\r\n\r\nexport const device = {\r\n  mobileS: `(min-width: ${size.mobileS})`,\r\n  mobileM: `(min-width: ${size.mobileM})`,\r\n  mobileL: `(min-width: ${size.mobileL})`,\r\n  tablet: `(min-width: ${size.tablet})`,\r\n  laptop: `(min-width: ${size.laptop})`,\r\n  laptopL: `(min-width: ${size.laptopL})`,\r\n  desktop: `(min-width: ${size.desktop})`,\r\n  desktopL: `(min-width: ${size.desktop})`,\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledNameTask = styled.div`\r\n  display: flex;\r\n  align-content: flex-start;\r\n  align-items: flex-start;\r\n  flex-wrap: wrap;\r\n  position: fixed;\r\n  width: 300px;\r\n  height: 200px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  padding: 10px;\r\n  box-shadow: 0 0 15px 1px rgba(50, 50, 50, 0.2);\r\n`;\r\n\r\nconst StyledReplaceTitle = styled.h3`\r\n  width: 100%;\r\n  position: relative;\r\n  flex-grow: 1;\r\n  text-align: center;\r\n  font-size: 1.5rem;\r\n  border-bottom: 1px solid #aaa;\r\n  padding-bottom: 6px;\r\n  color: #555;\r\n  font-weight: 400;\r\n\r\n  & > .fa-times {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledLabelInput = styled.input`\r\n  width: 95%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 7.5px 5px;\r\n  margin: 0px auto;\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledTitle = styled.h3`\r\n  width: 95%;\r\n  padding: 7.5px 5px;\r\n  color: #888;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: #5aac44;\r\n  border-radius: 4px;\r\n  margin: 0 auto;\r\n  margin-top: 25px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: #6abc54;\r\n  }\r\n`;\r\n\r\nfunction TasksListView({\r\n  changeTasksListTitle,\r\n  tasksListTitle,\r\n  addTasksList,\r\n  toggleCurrentListVisiFunc,\r\n}) {\r\n  return (\r\n    <StyledNameTask className=\"tasksList\">\r\n      <StyledReplaceTitle className=\"tasksList\">\r\n        Add tasks list\r\n        <span\r\n          className=\"fas fa-times\"\r\n          onClick={() => toggleCurrentListVisiFunc(\"tasksListVisi\")}\r\n        />\r\n      </StyledReplaceTitle>\r\n      <StyledTitle className=\"tasksList\">Title</StyledTitle>\r\n      <StyledLabelInput\r\n        className=\"tasksList\"\r\n        onChange={(e) => changeTasksListTitle(e)}\r\n        value={tasksListTitle}\r\n      />\r\n      <StyledButton onClick={() => addTasksList()}>ADD</StyledButton>\r\n    </StyledNameTask>\r\n  );\r\n}\r\n\r\nexport default TasksListView;\r\n","import React, { Component } from \"react\";\r\nimport TasksListView from \"../../components/TasksList/TasksListView\";\r\n\r\nclass TasksList extends Component {\r\n  state = {\r\n    tasksListTitle: \"Tasks List\",\r\n  };\r\n\r\n  changeTasksListTitle = (e) => {\r\n    this.setState({\r\n      tasksListTitle: e.target.value,\r\n    });\r\n  };\r\n\r\n  addTasksList = () => {\r\n    const copyOfListTasks = this.props.listOfAllTasksList;\r\n    const taskAlreadyExist = copyOfListTasks.filter(\r\n      (ele) =>\r\n        ele.id === this.props.taskId &&\r\n        ele.listName === this.state.tasksListTitle\r\n    );\r\n    if (taskAlreadyExist.length !== 0 || this.state.tasksListTitle === \"\")\r\n      return;\r\n    this.props.setListOfTasksList([\r\n      ...this.props.listOfAllTasksList,\r\n      {\r\n        id: this.props.taskId,\r\n        listName: this.state.tasksListTitle,\r\n        subTasksList: [],\r\n        activeSubtasks: 0,\r\n        unActiveSubtasks: 0,\r\n        totalOfSubTasks: 0,\r\n      },\r\n    ]);\r\n    this.props.toggleCurrentListVisiFunc(\"tasksListVisi\"); // Close this tasksList window\r\n  };\r\n\r\n  render() {\r\n    const { tasksListTitle } = this.state;\r\n    const { toggleCurrentListVisiFunc } = this.props;\r\n    return (\r\n      <TasksListView\r\n        changeTasksListTitle={this.changeTasksListTitle}\r\n        tasksListTitle={tasksListTitle}\r\n        addTasksList={this.addTasksList}\r\n        toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TasksList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Labels from \"../../../../Containers/Labels/Labels\";\r\nimport MoveToAnotherListBox from \"../../../MoveToAnotherList/MoveToAnotherListBox\";\r\nimport DatePicker from \"../../../../Containers/DatePicker/DatePicker\";\r\nimport TasksList from \"../../../../Containers/TasksList/TasksList\";\r\nimport CopyCard from \"../../../../Containers/CopyCard/CopyCard\";\r\nimport { device } from \"../../../../Style/MediaQuery/mq\";\r\n\r\nconst StyledDetailNav = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 300px;\r\n  @media ${device.laptop} {\r\n    width: 200px;\r\n  }\r\n`;\r\n\r\nconst StyledDetailUl = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  @media ${device.laptop} {\r\n    flex-direction: column;\r\n    width: 200px;\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: 13px;\r\n  color: #42516e;\r\n  pointer-events: none;\r\n`;\r\n\r\nconst StyledDetailList = styled.li`\r\n  width: ${(props) => (props.first ? \"100%\" : \"45%\")};\r\n  background-color: ${(props) => (props.first ? \"transparent\" : \"#eaecf0\")};\r\n  border-radius: ${(props) => (props.first ? \"null\" : \"3px\")};\r\n  padding: 7.5px;\r\n  margin-right: ${(props) => (props.first ? \"0px\" : \"10px\")};\r\n  margin-bottom: ${(props) => (props.first ? \"5px\" : \"10px\")};\r\n  list-style: none;\r\n  font-size: 14px;\r\n  color: #42516e;\r\n  cursor: ${(props) => (props.first ? \"initial\" : \"pointer\")};\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.first ? \"transparent\" : \"#dadce0\")};\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nfunction DetailCoverNav({\r\n  labelVisi,\r\n  deleteCard,\r\n  currentListId,\r\n  taskId,\r\n  addPriorityForCards,\r\n  moveToAnotherListVisi,\r\n  taskTitle,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  taskTitleList,\r\n  matchedPriority,\r\n  matchedColorsToThisCard,\r\n  datePickerVisi,\r\n  toggleLabelColorToCard,\r\n  listOfAllBadges,\r\n  listOfAllTasksId,\r\n  labelColors,\r\n  setLabelColors,\r\n  toggleTermToCard,\r\n  tasksListVisi,\r\n  setListOfTasksList,\r\n  listOfAllTasksList,\r\n  copyCardVisi,\r\n  toggleCurrentListVisiFunc,\r\n  listOfAllTerms,\r\n  listOfAllComments,\r\n  setListOfallTerms,\r\n  reloadCoverComponentFunc,\r\n  addNewCard,\r\n}) {\r\n  return (\r\n    <StyledDetailNav>\r\n      <StyledDetailUl>\r\n        <StyledDetailList first> ADD TO CARD</StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={() => toggleCurrentListVisiFunc(\"labelVisi\")}\r\n        >\r\n          <StyledIcon className=\"fas fa-tag\" />\r\n          Edit labels\r\n        </StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={() => toggleCurrentListVisiFunc(\"tasksListVisi\")}\r\n        >\r\n          <StyledIcon className=\"fas fa-list-alt\" />\r\n          Tasks list\r\n        </StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={() => toggleCurrentListVisiFunc(\"datePickerVisi\")}\r\n        >\r\n          <StyledIcon className=\"far fa-clock\" />\r\n          Term\r\n        </StyledDetailList>\r\n        <StyledDetailList>\r\n          <StyledIcon className=\"far fa-image\" />\r\n          Cover\r\n        </StyledDetailList>\r\n      </StyledDetailUl>\r\n      <StyledDetailUl>\r\n        <StyledDetailList first> ACTIONS</StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={() => toggleCurrentListVisiFunc(\"moveToAnotherListVisi\")}\r\n        >\r\n          <StyledIcon className=\"fas fa-long-arrow-alt-right\" />\r\n          Move\r\n        </StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={() => toggleCurrentListVisiFunc(\"copyCardVisi\")}\r\n        >\r\n          <StyledIcon className=\"far fa-clipboard\" />\r\n          Copy\r\n        </StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={(e) => addPriorityForCards(e, taskId, \"detailCover\")}\r\n          style={{\r\n            color: `${matchedPriority.length !== 0 ? \"#db4a36\" : \"#42516e\"}`,\r\n          }}\r\n        >\r\n          <StyledIcon\r\n            className=\"fas fa-exclamation-circle\"\r\n            style={{\r\n              color: `${matchedPriority.length !== 0 ? \"#db4a36\" : \"#42516e\"}`,\r\n            }}\r\n          />\r\n          Priority\r\n        </StyledDetailList>\r\n        <StyledDetailList\r\n          className=\"delete\"\r\n          onClick={(e) => deleteCard(currentListId, taskId, \"byButton\")}\r\n        >\r\n          <StyledIcon className=\"fas fa-archive\" />\r\n          Archive\r\n        </StyledDetailList>\r\n      </StyledDetailUl>\r\n      {labelVisi ? (\r\n        <Labels\r\n          detailCover={true}\r\n          toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          taskId={taskId}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          reloadCoverComponentFunc={reloadCoverComponentFunc}\r\n        />\r\n      ) : null}\r\n      {moveToAnotherListVisi ? (\r\n        <MoveToAnotherListBox\r\n          taskTitle={taskTitle}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n          taskId={taskId}\r\n          currentListId={currentListId}\r\n        />\r\n      ) : null}\r\n      {copyCardVisi ? (\r\n        <CopyCard\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n          toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n          wholeList={wholeList}\r\n          taskTitle={taskTitle}\r\n          taskId={taskId}\r\n          currentListId={currentListId}\r\n          listOfAllBadges={listOfAllBadges}\r\n          listOfAllTerms={listOfAllTerms}\r\n          listOfAllComments={listOfAllComments}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          addNewCard={addNewCard}\r\n        />\r\n      ) : null}\r\n      {datePickerVisi ? (\r\n        <DatePicker\r\n          toggleTermToCard={toggleTermToCard}\r\n          taskId={taskId}\r\n          toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n          listOfAllTerms={listOfAllTerms}\r\n          setListOfallTerms={setListOfallTerms}\r\n        />\r\n      ) : null}\r\n      {tasksListVisi ? (\r\n        <TasksList\r\n          setListOfTasksList={setListOfTasksList}\r\n          listOfAllTasksList={listOfAllTasksList}\r\n          taskId={taskId}\r\n          toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n        />\r\n      ) : null}\r\n    </StyledDetailNav>\r\n  );\r\n}\r\n\r\nexport default DetailCoverNav;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledOptionWindow = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  right: 0;\r\n  width: 300px;\r\n  height: 140px;\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  box-shadow: 0 0 15px 1px rgba(50, 50, 50, 0.2);\r\n`;\r\n\r\nconst StyledTitle = styled.h3`\r\n  width: 100%;\r\n  border-bottom: 1px solid #42516e;\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n  margin: 10px 7.5px 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  position: fixed;\r\n  transform: translateY(10px);\r\n  right: 15px;\r\n  font-size: 14px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledWrapList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  list-style: none;\r\n`;\r\n\r\nconst StyledListElement = styled.li`\r\n  width: 100%;\r\n  padding: 10px 7.5px;\r\n  margin-bottom: 7.5px;\r\n  font-size: 14px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #eaecf0;\r\n  }\r\n`;\r\n\r\nfunction SubtasksOptionView({\r\n  subTaskToCard,\r\n  subTaskDelete,\r\n  subTaskOptionsVisiToggle,\r\n}) {\r\n  return (\r\n    <StyledOptionWindow>\r\n      <StyledTitle>Subtasks options</StyledTitle>\r\n      <StyledX\r\n        className=\"fas fa-times\"\r\n        onClick={() => subTaskOptionsVisiToggle(\"\")}\r\n      />\r\n      <StyledWrapList>\r\n        <StyledListElement onClick={() => subTaskToCard()}>\r\n          Make card from it\r\n        </StyledListElement>\r\n        <StyledListElement onClick={() => subTaskDelete()}>\r\n          Delete\r\n        </StyledListElement>\r\n      </StyledWrapList>\r\n    </StyledOptionWindow>\r\n  );\r\n}\r\n\r\nexport default SubtasksOptionView;\r\n","import React, { Component } from \"react\";\r\nimport SubtasksOptionView from \"../../../components/TasksList/SubtasksOptionView/SubtasksOptionView\";\r\n// import PropTypes from 'prop-types'\r\n\r\nclass SubtasksOption extends Component {\r\n  subTaskToCard = () => {\r\n    this.props.addNewCard(\r\n      this.props.currentListId,\r\n      this.props.subTaskNameOptionClicked\r\n    );\r\n\r\n    this.subTaskDelete();\r\n  };\r\n\r\n  subTaskDelete = () => {\r\n    //Find current displaying tasksList\r\n    const matchedTasksList = this.props.listOfAllTasksList.filter(\r\n      (ele) =>\r\n        ele.id === this.props.taskId && ele.listName === this.props.listName\r\n    );\r\n\r\n    //Find proper tasks in above list, which is clicked\r\n    const subTaskIndex = matchedTasksList[0].subTasksList.findIndex(\r\n      (ele) => ele.name === this.props.subTaskNameOptionClicked\r\n    );\r\n\r\n    const subTaskClicked = matchedTasksList[0].subTasksList.filter(\r\n      (ele) => ele.name === this.props.subTaskNameOptionClicked\r\n    );\r\n\r\n    //Delete it\r\n    matchedTasksList[0].subTasksList.splice(subTaskIndex, 1);\r\n\r\n    //Updated active and total number of subTasks in current list\r\n    if (subTaskClicked[0].active) {\r\n      matchedTasksList[0].activeSubtasks -= 1;\r\n    } else {\r\n      matchedTasksList[0].unActiveSubtasks -= 1;\r\n    }\r\n\r\n    matchedTasksList[0].totalOfSubTasks -= 1;\r\n\r\n    this.props.subTaskOptionsVisiToggle(\"\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SubtasksOptionView\r\n        subTaskToCard={this.subTaskToCard}\r\n        subTaskDelete={this.subTaskDelete}\r\n        subTaskOptionsVisiToggle={this.props.subTaskOptionsVisiToggle}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubtasksOption;\r\n","import React from \"react\";\r\nimport SubtasksOption from \"../../../Containers/TasksList/SubtasksOption/SubtasksOption\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledWrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  margin-bottom: 15px;\r\n  padding: 0 2.5px;\r\n`;\r\n\r\nconst StyledListTitle = styled.h3`\r\n  flex-grow: 1;\r\n  align-self: center;\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledBarWrap = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledTasksList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledGreyButton = styled.button`\r\n  width: 150px;\r\n  height: 32.5px;\r\n  padding: 5px;\r\n  margin-top: ${(props) => (props.marginTop0 ? \"0px\" : \"15px\")};\r\n  margin-bottom: 10px;\r\n  background-color: #eaecf0;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #dadce0;\r\n  }\r\n`;\r\n\r\nconst StyledPerecntage = styled.h3`\r\n  width: 35px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledBarContainer = styled.span`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 10px;\r\n  background-color: #ddd;\r\n  border: 0.5px solid #bbb;\r\n  border-radius: 5px;\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst StyledBarInner = styled.span`\r\n  position: absolute;\r\n  border-radius: 5px;\r\n  transition: 0.2s linear;\r\n  height: 100%;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 90%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 7.5px 5px;\r\n  margin: 15px 0px 10px;\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 120px;\r\n  height: 32.5px;\r\n  background-color: #5aac44;\r\n  border-radius: 4px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: #6abc54;\r\n  }\r\n`;\r\n\r\nconst StyledSubTaskWrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  width: 95%;\r\n  padding: 7.5px;\r\n  margin: 5px auto;\r\n  color: #42516e;\r\n  &:hover {\r\n    background-color: #eaecf0;\r\n  }\r\n`;\r\n\r\nconst StyledCheckedBox = styled.span`\r\n  position: relative;\r\n  align-self: center;\r\n  width: 17px;\r\n  height: 17px;\r\n  border-radius: 2px;\r\n  margin-right: 10px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  background-color: red;\r\n`;\r\n\r\nconst StyledCheckIcon = styled.span`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 8px;\r\n`;\r\n\r\nconst StyledSubTaskName = styled.h3`\r\n  width: 250px;\r\n  word-break: break-all;\r\n  flex-grow: 1;\r\n  align-self: center;\r\n  font-size: 13px;\r\n`;\r\n\r\nconst StyledWarnningSpan = styled.span`\r\n  width: 100%;\r\n  opacity: 0;\r\n  color: red;\r\n  font-size: 10px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst StyledEllipsis = styled.span`\r\n  align-self: center;\r\n`;\r\n\r\nfunction TasksListInDetailCoverView({\r\n  listName,\r\n  taskId,\r\n  subTasksList,\r\n  subTaskToggle,\r\n  subTaskToggleVisi,\r\n  subTaskInupChange,\r\n  subTaskInputValue,\r\n  addSubTaskFunc,\r\n  makeThisTaskDone,\r\n  unActiveSubtasks,\r\n  totalOfSubTasks,\r\n  deleteTasksList,\r\n  subTaskOptionsVisiToggle,\r\n  subTaskOptionsVisi,\r\n  addNewCard,\r\n  currentListId,\r\n  listOfAllTasksList,\r\n  subTaskNameOptionClicked,\r\n}) {\r\n  return (\r\n    <StyledWrap className={\"detailCoverClose\"}>\r\n      <StyledListTitle className={\"detailCoverClose\"}>\r\n        {listName}\r\n      </StyledListTitle>\r\n      <StyledGreyButton\r\n        className={\"detailCoverClose\"}\r\n        marginTop0\r\n        onClick={() => deleteTasksList(listName, taskId)}\r\n      >\r\n        Delete\r\n      </StyledGreyButton>\r\n      <StyledBarWrap className={\"detailCoverClose\"}>\r\n        <StyledPerecntage className={\"detailCoverClose\"}>\r\n          {totalOfSubTasks === 0\r\n            ? \"0%\"\r\n            : `${Math.floor(\r\n                (unActiveSubtasks /\r\n                  `${totalOfSubTasks === 0 ? 1 : totalOfSubTasks}`) *\r\n                  100\r\n              )}%`}\r\n        </StyledPerecntage>\r\n        <StyledBarContainer className={\"detailCoverClose\"}>\r\n          <StyledBarInner\r\n            className={\"detailCoverClose\"}\r\n            style={{\r\n              width: `${\r\n                (unActiveSubtasks /\r\n                  `${totalOfSubTasks === 0 ? 1 : totalOfSubTasks}`) *\r\n                100\r\n              }%`,\r\n              backgroundColor: `${\r\n                unActiveSubtasks === totalOfSubTasks ? \"#5aac44\" : \"#5ba4cf\"\r\n              }`,\r\n            }}\r\n          />\r\n        </StyledBarContainer>\r\n      </StyledBarWrap>\r\n      <StyledTasksList className={\"detailCoverClose\"}>\r\n        {subTasksList.map((ele) => (\r\n          <StyledSubTaskWrap key={ele.id} className={\"detailCoverClose\"}>\r\n            <StyledCheckedBox\r\n              className={\"detailCoverClose\"}\r\n              style={{\r\n                backgroundColor: `${ele.active ? \"#fff\" : \"#0079bf\"}`,\r\n                border: `${\r\n                  ele.active ? \"2px solid #ccc\" : \"2px solid #0079bf\"\r\n                }`,\r\n              }}\r\n              onClick={() => makeThisTaskDone(ele.id, ele.active)}\r\n            >\r\n              <StyledCheckIcon className=\"fas fa-check\" />\r\n            </StyledCheckedBox>\r\n            <StyledSubTaskName\r\n              className={\"detailCoverClose\"}\r\n              style={{\r\n                textDecoration: `${ele.active ? \"initial\" : \"line-through\"}`,\r\n              }}\r\n            >\r\n              {ele.name}\r\n            </StyledSubTaskName>\r\n            <StyledEllipsis\r\n              className=\"fas fa-ellipsis-h\"\r\n              onClick={() => subTaskOptionsVisiToggle(ele.name)}\r\n            />\r\n          </StyledSubTaskWrap>\r\n        ))}\r\n        {subTaskOptionsVisi ? (\r\n          <SubtasksOption\r\n            subTaskNameOptionClicked={subTaskNameOptionClicked}\r\n            subTaskOptionsVisiToggle={subTaskOptionsVisiToggle}\r\n            listOfAllTasksList={listOfAllTasksList}\r\n            listName={listName}\r\n            taskId={taskId}\r\n            addNewCard={addNewCard}\r\n            currentListId={currentListId}\r\n          />\r\n        ) : null}\r\n      </StyledTasksList>\r\n      {subTaskToggleVisi ? (\r\n        <>\r\n          <StyledInput\r\n            className={\"detailCoverClose\"}\r\n            onChange={(e) => subTaskInupChange(e)}\r\n            value={subTaskInputValue}\r\n          />\r\n          <StyledButton\r\n            onClick={() => addSubTaskFunc()}\r\n            className={\"detailCoverClose\"}\r\n          >\r\n            Add SubTask\r\n          </StyledButton>\r\n          <StyledWarnningSpan className=\"subTaskWarnSpan\">\r\n            You can't add the same or blank subTasks\r\n          </StyledWarnningSpan>\r\n        </>\r\n      ) : (\r\n        <StyledGreyButton\r\n          onClick={() => subTaskToggle()}\r\n          className={\"detailCoverClose\"}\r\n        >\r\n          Add Element\r\n        </StyledGreyButton>\r\n      )}\r\n    </StyledWrap>\r\n  );\r\n}\r\n\r\nexport default TasksListInDetailCoverView;\r\n","import React, { Component } from \"react\";\r\nimport TasksListInDetailCoverView from \"../../../components/TasksList/TasksListInDetailCoverView/TasksListInDetailCoverView\";\r\n\r\nclass TasksListInDetailCover extends Component {\r\n  state = {\r\n    subTaskToggleVisi: false,\r\n    subTaskNameOptionClicked: \"\",\r\n    subTaskInputValue: \"\",\r\n    toggleForUpdate: false,\r\n    subTaskOptionsVisi: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"click\", (e) => this.subTaskOptionsHideFunc(e));\r\n  }\r\n\r\n  subTaskToggle = () => {\r\n    //Handler for input and btn visibility\r\n    this.setState({\r\n      subTaskToggleVisi: true,\r\n    });\r\n  };\r\n\r\n  subTaskInupChange = (e) => {\r\n    //Handler for input onChange\r\n    this.setState({\r\n      subTaskInputValue: e.target.value,\r\n    });\r\n  };\r\n\r\n  addSubTaskFunc = () => {\r\n    const copyOfListTasks = this.props.listOfAllTasksList;\r\n    const matchedList = copyOfListTasks.filter(\r\n      (ele) =>\r\n        ele.id === this.props.taskId && ele.listName === this.props.listName\r\n    );\r\n\r\n    const subTaskAlreadyExist = matchedList[0].subTasksList.filter(\r\n      (ele) => ele.name === this.state.subTaskInputValue\r\n    );\r\n\r\n    //If subTask already exist or this is blank subTask\r\n    if (\r\n      subTaskAlreadyExist.length !== 0 ||\r\n      this.state.subTaskInputValue === \"\"\r\n    ) {\r\n      const warnningSpan = document.querySelector(\".subTaskWarnSpan\");\r\n      warnningSpan.style.opacity = 1;\r\n      this.setState({\r\n        subTaskInputValue: \"\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    //If subTask is right composed just add it to the list of subtask in this card and correct tasksList\r\n    matchedList[0].subTasksList.push({\r\n      id: `${this.props.taskId}${this.state.subTaskInputValue}`,\r\n      name: this.state.subTaskInputValue,\r\n      active: true,\r\n    });\r\n\r\n    //Updated data about subtask on this card and current tasksList\r\n    matchedList[0].activeSubtasks += 1;\r\n    matchedList[0].totalOfSubTasks += 1;\r\n    //This is for refresh page durring add or checking subTask\r\n    this.props.closeAllListsWindowsFunc();\r\n    this.setState({\r\n      subTaskToggleVisi: false,\r\n      subTaskInputValue: \"\",\r\n    });\r\n  };\r\n\r\n  deleteTasksList = (listName, taskId) => {\r\n    //Find proper tasksList in array of all TasksList\r\n    const copyOfTasksList = this.props.listOfAllTasksList;\r\n    const matchedTasksListIndex = copyOfTasksList.findIndex(\r\n      (ele) => ele.id === taskId && ele.listName === listName\r\n    );\r\n    //Delete it\r\n    this.props.listOfAllTasksList.splice(matchedTasksListIndex, 1);\r\n    //Refresh it\r\n    this.props.closeAllListsWindowsFunc();\r\n  };\r\n\r\n  makeThisTaskDone = (subTaskId, subTaskActive) => {\r\n    //Finding data about current tasksList and proper subTasks\r\n    const copyOfTasksList = this.props.listOfAllTasksList;\r\n    const matchedTasksList = copyOfTasksList.filter(\r\n      (ele) =>\r\n        ele.id === this.props.taskId && ele.listName === this.props.listName\r\n    );\r\n\r\n    const matchedSubTaskList = matchedTasksList[0].subTasksList.filter(\r\n      (ele) => ele.id === subTaskId\r\n    );\r\n\r\n    matchedSubTaskList[0].active = !subTaskActive;\r\n\r\n    //Updated data about active and unactive subtask\r\n    if (subTaskActive) {\r\n      matchedTasksList[0].activeSubtasks -= 1;\r\n      matchedTasksList[0].unActiveSubtasks += 1;\r\n    } else {\r\n      matchedTasksList[0].activeSubtasks += 1;\r\n      matchedTasksList[0].unActiveSubtasks -= 1;\r\n    }\r\n    //This is for refresh page durring add or checking subTask\r\n    this.props.closeAllListsWindowsFunc();\r\n    this.setState({\r\n      subTaskToggleVisi: false,\r\n      subTaskInputValue: \"\",\r\n    });\r\n  };\r\n\r\n  subTaskOptionsVisiToggle = (subTaskName) => {\r\n    this.props.closeAllListsWindowsFunc();\r\n    this.setState({\r\n      subTaskOptionsVisi: !this.state.subTaskOptionsVisi,\r\n      subTaskNameOptionClicked: subTaskName,\r\n    });\r\n  };\r\n\r\n  subTaskOptionsHideFunc = (e) => {\r\n    if (e.target.className.includes(\"detailCoverClose\"))\r\n      this.setState({ subTaskOptionsVisi: false });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      listName,\r\n      taskId,\r\n      subTasksList,\r\n      unActiveSubtasks,\r\n      totalOfSubTasks,\r\n      addNewCard,\r\n      currentListId,\r\n      listOfAllTasksList,\r\n    } = this.props;\r\n\r\n    const {\r\n      subTaskToggleVisi,\r\n      subTaskInputValue,\r\n      subTaskOptionsVisi,\r\n      subTaskNameOptionClicked,\r\n    } = this.state;\r\n    return (\r\n      <TasksListInDetailCoverView\r\n        listName={listName}\r\n        taskId={taskId}\r\n        subTasksList={subTasksList}\r\n        subTaskToggleVisi={subTaskToggleVisi}\r\n        subTaskInputValue={subTaskInputValue}\r\n        subTaskToggle={this.subTaskToggle}\r\n        subTaskInupChange={this.subTaskInupChange}\r\n        addSubTaskFunc={this.addSubTaskFunc}\r\n        makeThisTaskDone={this.makeThisTaskDone}\r\n        unActiveSubtasks={unActiveSubtasks}\r\n        totalOfSubTasks={totalOfSubTasks}\r\n        deleteTasksList={this.deleteTasksList}\r\n        subTaskOptionsVisiToggle={this.subTaskOptionsVisiToggle}\r\n        subTaskOptionsVisi={subTaskOptionsVisi}\r\n        addNewCard={addNewCard}\r\n        currentListId={currentListId}\r\n        listOfAllTasksList={listOfAllTasksList}\r\n        subTaskNameOptionClicked={subTaskNameOptionClicked}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TasksListInDetailCover;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 90%;\r\n  background-color: #eaecf0;\r\n  margin: 0px auto 10px auto;\r\n  padding: 7.5px 5px;\r\n  border-radius: 3px;\r\n  min-height: 75px;\r\n  resize: none;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledCommentOptionWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst StyledComment = styled.h3`\r\n  width: 300px;\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n  margin-right: 10px;\r\n  word-break: break-all;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: ${(props) => (props.greyBgc ? \"#EAECF0\" : \"#5aac44\")};\r\n  border-radius: 4px;\r\n  margin-right: 6px;\r\n  color: ${(props) => (props.marginLeft ? \"#42516e\" : \"#fff\")};\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.hoverBgc ? \"#dadce0 \" : \"#6abc54\")};\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  margin-left: ${(props) => (props.marginLeft ? \"6\" : \"none\")};\r\n  font-size: ${(props) => (props.biggerSize ? \"23px\" : \"17px\")};\r\n  color: #42516e;\r\n  cursor: ${(props) => (props.pointer ? \"pointer\" : \"initial\")};\r\n  vertical-align: middle;\r\n`;\r\n\r\nfunction DetailCommentElemnt({\r\n  listOfAllComments,\r\n  editCommentToCard,\r\n  commentChange,\r\n  addCommentToCard,\r\n  taskId,\r\n  commentValue,\r\n  commentVisi,\r\n  commentVisiToggleFunc,\r\n}) {\r\n  return (\r\n    <>\r\n      {listOfAllComments.length !== 0 ? null : (\r\n        <StyledTextArea\r\n          placeholder=\"Click to add more detailed comment...\"\r\n          className=\"input textArea\"\r\n          onClick={() => commentVisiToggleFunc()}\r\n          onChange={(e) => commentChange(e)}\r\n          onKeyPress={(e) => addCommentToCard(e, taskId, commentValue)}\r\n          value={commentValue}\r\n        />\r\n      )}\r\n      {commentVisi ? (\r\n        <StyledCommentOptionWrap>\r\n          <StyledButton\r\n            className=\"commentBtn\"\r\n            onClick={(e) => addCommentToCard(e, taskId, commentValue)}\r\n          >\r\n            SAVE\r\n          </StyledButton>\r\n          <StyledIcon\r\n            biggerSize\r\n            pointer\r\n            className=\"far fa-times-circle commentClose\"\r\n            onClick={(e) => addCommentToCard(e, taskId, commentValue)}\r\n          />\r\n        </StyledCommentOptionWrap>\r\n      ) : null}\r\n      {listOfAllComments.map((ele) => (\r\n        <StyledComment key={ele.id} onClick={() => editCommentToCard(taskId)}>\r\n          {ele.comment}\r\n        </StyledComment>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DetailCommentElemnt;\r\n","import React from \"react\";\r\nimport TasksListInDetailCover from \"../../../../Containers/TasksList/TasksListInDetailCover/TasksListInDetailCover\";\r\nimport DetailCommentElement from \"../../DetailElements/DetailCommentElement/DetailCommentElemnt\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledDetailMarks = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst StyledDetailDescription = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledTitle = styled.h2`\r\n  width: 100%;\r\n  color: #42516e;\r\n  margin-bottom: 20px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  margin-left: ${(props) => (props.marginLeft ? \"6\" : \"none\")};\r\n  font-size: ${(props) => (props.biggerSize ? \"23px\" : \"17px\")};\r\n  color: #42516e;\r\n  cursor: ${(props) => (props.pointer ? \"pointer\" : \"initial\")};\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst StyledLabelsWrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledPlaceholder = styled.h3`\r\n  text-align: center;\r\n  color: #172b4d;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: ${(props) => (props.greyBgc ? \"#EAECF0\" : \"#5aac44\")};\r\n  border-radius: 4px;\r\n  margin-right: 6px;\r\n  color: ${(props) => (props.marginLeft ? \"#42516e\" : \"#fff\")};\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.hoverBgc ? \"#dadce0 \" : \"#6abc54\")};\r\n  }\r\n`;\r\n\r\nconst StyledTermWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledTerm = styled.h3`\r\n  background-color: #eaecf0;\r\n  border-radius: 4px;\r\n  padding: 7.5px 10px;\r\n  letter-spacing: 1px;\r\n  font-weight: 400;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #dadce0;\r\n  }\r\n`;\r\n\r\nconst StyledStatus = styled.span`\r\n  padding: 2.5px 5px;\r\n  margin: 0 3px;\r\n  border-radius: 3px;\r\n  color: #fff;\r\n`;\r\n\r\nconst StyledCheckedBox = styled.span`\r\n  position: relative;\r\n  width: 17px;\r\n  height: 17px;\r\n  border-radius: 2px;\r\n  margin-right: 7px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  z-index: 0;\r\n`;\r\n\r\nconst StyledCheckIcon = styled.span`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 8px;\r\n`;\r\n\r\nfunction DetailCoverMarks({\r\n  matchedColorsToThisCard,\r\n  commentVisi,\r\n  commentChange,\r\n  commentValue,\r\n  addCommentToCard,\r\n  taskId,\r\n  listOfAllComments,\r\n  editCommentToCard,\r\n  matchedTerms,\r\n  termDoneCheckbox,\r\n  matchedListTasks,\r\n  listOfAllTasksList,\r\n  addNewCard,\r\n  currentListId,\r\n  toggleCurrentListVisiFunc,\r\n  closeAllListsWindowsFunc,\r\n  tasksListVisi,\r\n  commentVisiToggleFunc,\r\n}) {\r\n  return (\r\n    <StyledDetailMarks className=\"detailCoverClose\">\r\n      <div>\r\n        <StyledTitle marginTop className=\"detailCoverClose\">\r\n          <StyledIcon className=\"fas fa-tag detailCoverClose\" />\r\n          Labels\r\n        </StyledTitle>\r\n        {matchedColorsToThisCard.length === 0 ? (\r\n          <StyledPlaceholder className=\"detailCoverClose\">\r\n            This card have no labels yet\r\n          </StyledPlaceholder>\r\n        ) : (\r\n          <StyledLabelsWrap className=\"detailCover_labelsWrap detailCoverClose\">\r\n            {matchedColorsToThisCard.map((ele) => (\r\n              <div\r\n                key={ele.color}\r\n                id={`${ele.labelId}DetailCover`}\r\n                className={`labelElement_DetailCover`}\r\n                style={{\r\n                  backgroundColor: ele.color,\r\n                  margin: \"0px 5px 5px 0px\",\r\n                }}\r\n                onClick={() => toggleCurrentListVisiFunc(\"labelVisi\")}\r\n              >\r\n                {ele.name}\r\n              </div>\r\n            ))}\r\n          </StyledLabelsWrap>\r\n        )}\r\n      </div>\r\n      <StyledTitle marginTop className=\"detailCoverClose\">\r\n        <StyledIcon className=\"far fa-clock detailCoverClose\" />\r\n        Terms\r\n      </StyledTitle>\r\n      {matchedTerms.length === 0 ? (\r\n        <StyledPlaceholder className=\"detailCoverClose\">\r\n          This card has no deadline yet\r\n        </StyledPlaceholder>\r\n      ) : (\r\n        <>\r\n          {matchedTerms.map((ele) => (\r\n            <StyledTermWrap key={ele.term}>\r\n              <StyledCheckedBox\r\n                className=\"detailCoverClose\"\r\n                onClick={() => termDoneCheckbox(taskId)}\r\n                style={{\r\n                  backgroundColor: `${\r\n                    ele.status === \"Done\" ? \"#0079BF\" : \"white\"\r\n                  }`,\r\n                  border: `${\r\n                    ele.status === \"Done\"\r\n                      ? \"2px solid #0079BF\"\r\n                      : \"2px solid #aaa\"\r\n                  }`,\r\n                }}\r\n              >\r\n                <StyledCheckIcon className=\"fas fa-check detailCoverClose\" />\r\n              </StyledCheckedBox>\r\n              <StyledTerm\r\n                onClick={() => toggleCurrentListVisiFunc(\"datePickerVisi\")}\r\n              >\r\n                {`${ele.day} ${ele.monthName} ${ele.year}`} at{\" \"}\r\n                {`${ele.hour}:${ele.minutes}`}\r\n                <StyledStatus\r\n                  style={{\r\n                    backgroundColor: ele.statusColor,\r\n                    opacity: `${ele.statusColor === \"#888\" ? 0 : 1}`,\r\n                  }}\r\n                >{`${ele.status}`}</StyledStatus>\r\n                <StyledIcon\r\n                  className=\"fas fa-chevron-down\"\r\n                  pointer\r\n                  marginLeft\r\n                />\r\n              </StyledTerm>\r\n            </StyledTermWrap>\r\n          ))}\r\n        </>\r\n      )}\r\n      <StyledTitle marginTop className=\"detailCoverClose\">\r\n        <StyledIcon className=\"fas fa-check-double detailCoverClose\" />\r\n        Tasks List\r\n      </StyledTitle>\r\n      {matchedListTasks.length === 0 ? (\r\n        <StyledPlaceholder className=\"detailCoverClose\">\r\n          This card has no tasks list yet\r\n        </StyledPlaceholder>\r\n      ) : (\r\n        matchedListTasks.map((ele) => (\r\n          <TasksListInDetailCover\r\n            key={ele.listName}\r\n            listOfAllTasksList={listOfAllTasksList}\r\n            listName={ele.listName}\r\n            subTasksList={ele.subTasksList}\r\n            taskId={taskId}\r\n            unActiveSubtasks={ele.unActiveSubtasks}\r\n            totalOfSubTasks={ele.totalOfSubTasks}\r\n            closeAllListsWindowsFunc={closeAllListsWindowsFunc}\r\n            tasksListVisi={tasksListVisi}\r\n            addNewCard={addNewCard}\r\n            currentListId={currentListId}\r\n          />\r\n        ))\r\n      )}\r\n      <StyledDetailDescription className=\"detailCoverClose\">\r\n        <StyledTitle className=\"detailCoverClose\">\r\n          <StyledIcon className=\"fas fa-stream\" />\r\n          Description\r\n          <StyledButton\r\n            greyBgc\r\n            marginLeft\r\n            hoverBgc\r\n            style={{\r\n              color: `${\r\n                listOfAllComments.length !== 0 ? \"#42516e\" : \"rgba(0,0,0,0)\"\r\n              }`,\r\n              backgroundColor: `${\r\n                listOfAllComments.length !== 0 ? \"#EAECF0\" : \"rgba(0,0,0,0)\"\r\n              }`,\r\n              cursor: `${\r\n                listOfAllComments.length !== 0 ? \"pointer\" : \"initial\"\r\n              }`,\r\n              marginLeft: `${listOfAllComments.length !== 0 ? \"6px\" : \"50px\"}`,\r\n            }}\r\n            onClick={() => editCommentToCard(taskId)}\r\n          >\r\n            Edit\r\n          </StyledButton>\r\n        </StyledTitle>\r\n        <DetailCommentElement\r\n          listOfAllComments={listOfAllComments}\r\n          toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n          editCommentToCard={editCommentToCard}\r\n          commentChange={commentChange}\r\n          addCommentToCard={addCommentToCard}\r\n          taskId={taskId}\r\n          commentValue={commentValue}\r\n          commentVisi={commentVisi}\r\n          commentVisiToggleFunc={commentVisiToggleFunc}\r\n        />\r\n      </StyledDetailDescription>\r\n    </StyledDetailMarks>\r\n  );\r\n}\r\n\r\nexport default DetailCoverMarks;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../Style/MediaQuery/mq\";\r\nimport DetailCoverNav from \"./DetailCoverNav/DetailCoverNav\";\r\nimport DetailCoverMarks from \"./DetailCoverMarks/DetailCoverMarks\";\r\n\r\nconst StyledDetailToolsWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 600px;\r\n  margin-top: 10px;\r\n  @media ${device.laptop} {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nfunction DetailTools({\r\n  labelVisi,\r\n  deleteCard,\r\n  addNewCard,\r\n  currentListId,\r\n  taskId,\r\n  matchedColorsToThisCard,\r\n  addPriorityForCards,\r\n  commentVisi,\r\n  commentChange,\r\n  commentValue,\r\n  addCommentToCard,\r\n  listOfAllComments,\r\n  editCommentToCard,\r\n  moveToAnotherListVisi,\r\n  taskTitle,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  taskTitleList,\r\n  matchedPriority,\r\n  datePickerVisi,\r\n  toggleLabelColorToCard,\r\n  listOfAllBadges,\r\n  listOfAllTasksId,\r\n  labelColors,\r\n  setLabelColors,\r\n  matchedTerms,\r\n  toggleTermToCard,\r\n  termDoneCheckbox,\r\n  tasksListVisi,\r\n  setListOfTasksList,\r\n  listOfAllTasksList,\r\n  matchedListTasks,\r\n  toggleCurrentListVisiFunc,\r\n  closeAllListsWindowsFunc,\r\n  copyCardVisi,\r\n  setListOfallTerms,\r\n  listOfAllTerms,\r\n  reloadCoverComponentFunc,\r\n  commentVisiToggleFunc,\r\n}) {\r\n  return (\r\n    <StyledDetailToolsWrap>\r\n      <DetailCoverMarks\r\n        matchedColorsToThisCard={matchedColorsToThisCard}\r\n        commentVisi={commentVisi}\r\n        commentChange={commentChange}\r\n        commentValue={commentValue}\r\n        addCommentToCard={addCommentToCard}\r\n        taskId={taskId}\r\n        listOfAllComments={listOfAllComments}\r\n        editCommentToCard={editCommentToCard}\r\n        matchedTerms={matchedTerms}\r\n        termDoneCheckbox={termDoneCheckbox}\r\n        listOfAllTasksList={listOfAllTasksList}\r\n        matchedListTasks={matchedListTasks}\r\n        addNewCard={addNewCard}\r\n        currentListId={currentListId}\r\n        toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n        closeAllListsWindowsFunc={closeAllListsWindowsFunc}\r\n        commentVisiToggleFunc={commentVisiToggleFunc}\r\n      />\r\n      <DetailCoverNav\r\n        labelVisi={labelVisi}\r\n        deleteCard={deleteCard}\r\n        currentListId={currentListId}\r\n        taskId={taskId}\r\n        addPriorityForCards={addPriorityForCards}\r\n        moveToAnotherListVisi={moveToAnotherListVisi}\r\n        taskTitle={taskTitle}\r\n        wholeList={wholeList}\r\n        moveCardToAnotherList={moveCardToAnotherList}\r\n        taskTitleList={taskTitleList}\r\n        matchedPriority={matchedPriority}\r\n        matchedColorsToThisCard={matchedColorsToThisCard}\r\n        datePickerVisi={datePickerVisi}\r\n        toggleLabelColorToCard={toggleLabelColorToCard}\r\n        listOfAllBadges={listOfAllBadges}\r\n        listOfAllTasksId={listOfAllTasksId}\r\n        labelColors={labelColors}\r\n        setLabelColors={setLabelColors}\r\n        toggleTermToCard={toggleTermToCard}\r\n        setListOfTasksList={setListOfTasksList}\r\n        listOfAllTasksList={listOfAllTasksList}\r\n        toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n        copyCardVisi={copyCardVisi}\r\n        setListOfallTerms={setListOfallTerms}\r\n        listOfAllTerms={listOfAllTerms}\r\n        listOfAllComments={listOfAllComments}\r\n        tasksListVisi={tasksListVisi}\r\n        reloadCoverComponentFunc={reloadCoverComponentFunc}\r\n        addNewCard={addNewCard}\r\n      />\r\n    </StyledDetailToolsWrap>\r\n  );\r\n}\r\n\r\nexport default DetailTools;\r\n","import React from \"react\";\r\nimport DetailInputElement from \"../DetailElements/DetailInputElement\";\r\nimport DetailSuggestedElement from \"../DetailElements/DetalSuggestedElement/DetailSuggestedElement\";\r\nimport DetailTools from \"../DetailTools/DetailTools\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledCover = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  overflow-y: scroll;\r\n  background-attachment: fixed;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 5px;\r\n  }\r\n`;\r\n\r\nconst StyledDetail = styled.div`\r\n  position: relative;\r\n  top: 41px;\r\n  left: 50%;\r\n  bottom: 17.5px;\r\n  transform: translate(-50%, 0%);\r\n  width: 100%;\r\n  max-width: 775px;\r\n  min-height: calc(100vh - 40px - 17.5px);\r\n  padding: 15px;\r\n  border-radius: 3px;\r\n  background-color: #f4f5f7;\r\n  margin-bottom: 25px;\r\n  z-index: 2;\r\n`;\r\n\r\nfunction DetailCoverView({\r\n  updateCard,\r\n  deleteCard,\r\n  addNewCard,\r\n  currentListId,\r\n  taskTitle,\r\n  taskTitleFeature,\r\n  taskTitleList,\r\n  moveToInSuggestedVisi,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  labelVisi,\r\n  taskId,\r\n  toggleLabelColorToCard,\r\n  listOfAllBadges,\r\n  matchedColorsToThisCard,\r\n  labelColors,\r\n  setLabelColors,\r\n  listOfAllTasksId,\r\n  addPriorityForCards,\r\n  commentVisi,\r\n  commentChange,\r\n  commentValue,\r\n  addCommentToCard,\r\n  listOfAllComments,\r\n  editCommentToCard,\r\n  moveToAnotherListVisi,\r\n  matchedPriority,\r\n  datePickerVisi,\r\n  matchedTerms,\r\n  toggleTermToCard,\r\n  termDoneCheckbox,\r\n  tasksListVisi,\r\n  setListOfTasksList,\r\n  listOfAllTasksList,\r\n  matchedListTasks,\r\n  toggleCurrentListVisiFunc,\r\n  closeAllListsWindowsFunc,\r\n  copyCardVisi,\r\n  listOfAllTerms,\r\n  setListOfallTerms,\r\n  reloadCoverComponentFunc,\r\n  commentVisiToggleFunc,\r\n}) {\r\n  return (\r\n    <StyledCover\r\n      className=\"cover\"\r\n      onClick={(e) => updateCard(e, taskTitle, currentListId, taskId)}\r\n    >\r\n      <StyledDetail\r\n        className=\"detail\"\r\n        onClick={(e) => updateCard(e, taskTitle, currentListId, taskId)}\r\n      >\r\n        <span className=\"fas fa-credit-card\"></span>\r\n        <DetailInputElement\r\n          taskTitle={taskTitle}\r\n          taskTitleFeature={taskTitleFeature}\r\n          updateCard={updateCard}\r\n          currentListId={currentListId}\r\n          taskId={taskId}\r\n        />\r\n        <DetailSuggestedElement\r\n          taskTitleList={taskTitleList}\r\n          taskTitle={taskTitle}\r\n          moveToInSuggestedVisi={moveToInSuggestedVisi}\r\n          toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          taskId={taskId}\r\n          currentListId={currentListId}\r\n        />\r\n        <DetailTools\r\n          labelVisi={labelVisi}\r\n          deleteCard={deleteCard}\r\n          addNewCard={addNewCard}\r\n          currentListId={currentListId}\r\n          taskId={taskId}\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n          addPriorityForCards={addPriorityForCards}\r\n          commentVisi={commentVisi}\r\n          commentChange={commentChange}\r\n          commentValue={commentValue}\r\n          addCommentToCard={addCommentToCard}\r\n          listOfAllComments={listOfAllComments}\r\n          editCommentToCard={editCommentToCard}\r\n          moveToAnotherListVisi={moveToAnotherListVisi}\r\n          taskTitle={taskTitle}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          taskTitleList={taskTitleList}\r\n          matchedPriority={matchedPriority}\r\n          datePickerVisi={datePickerVisi}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          matchedTerms={matchedTerms}\r\n          toggleTermToCard={toggleTermToCard}\r\n          termDoneCheckbox={termDoneCheckbox}\r\n          tasksListVisi={tasksListVisi}\r\n          setListOfTasksList={setListOfTasksList}\r\n          listOfAllTasksList={listOfAllTasksList}\r\n          matchedListTasks={matchedListTasks}\r\n          toggleCurrentListVisiFunc={toggleCurrentListVisiFunc}\r\n          closeAllListsWindowsFunc={closeAllListsWindowsFunc}\r\n          copyCardVisi={copyCardVisi}\r\n          listOfAllTerms={listOfAllTerms}\r\n          setListOfallTerms={setListOfallTerms}\r\n          reloadCoverComponentFunc={reloadCoverComponentFunc}\r\n          commentVisiToggleFunc={commentVisiToggleFunc}\r\n        />\r\n      </StyledDetail>\r\n    </StyledCover>\r\n  );\r\n}\r\n\r\nexport default DetailCoverView;\r\n","import React from \"react\";\r\nimport DetailCoverView from \"../../components/DetailCover/DetailCoverView/DetailCoverView\";\r\n\r\nclass DetailCover extends React.Component {\r\n  state = {\r\n    taskTitle: \"\",\r\n    commentValue: \"\",\r\n    moveToAnotherListVisi: false,\r\n    copyCardVisi: false,\r\n    labelVisi: false,\r\n    datePickerVisi: false,\r\n    moveToInSuggestedVisi: false,\r\n    tasksListVisi: false,\r\n    reloadDetalCoverCompState: false,\r\n    commentVisi: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      taskTitle: this.props.taskName,\r\n    });\r\n\r\n    document.addEventListener(\r\n      \"click\",\r\n      (e) => this.closeAllListsWindowsByListener(e),\r\n      false\r\n    );\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    document.removeEventListener(\r\n      \"click\",\r\n      (e) => this.closeAllListsWindowsByListener(e),\r\n      false\r\n    );\r\n  };\r\n\r\n  taskTitleFeature = (e) => {\r\n    this.setState({\r\n      taskTitle: e.target.value,\r\n    });\r\n  };\r\n\r\n  commentChange = (e) => {\r\n    this.setState({ commentValue: e.target.value, commentVisi: true }); //Set input comment\r\n  };\r\n\r\n  addCommentToCard = (e, taskId, comment) => {\r\n    //Add comment by click and by Enter button, add comment to commentList and TextArea is disparing, Comment is generate\r\n    // by list of matched comment in DetailCoverMarks Component\r\n    if (comment === \"\") {\r\n      return this.toggleCurrentListVisiFunc(\"commentVisi\");\r\n    }\r\n\r\n    if (e.target.className.includes(\"commentBtn\") || e.which === 13) {\r\n      this.props.setListOfAllComments([\r\n        ...this.props.listOfAllComments,\r\n        {\r\n          id: taskId,\r\n          comment: comment,\r\n        },\r\n      ]);\r\n      this.toggleCurrentListVisiFunc(\"commentVisi\");\r\n    }\r\n\r\n    if (e.target.className.includes(\"commentClose\")) {\r\n      this.setState({\r\n        commentVisi: false,\r\n        commentValue: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  editCommentToCard = (taskId) => {\r\n    //Function that run when we want edit our comment - EditBtn is disapiring, textArea is appearing\r\n    const currentCommentValue = this.props.listOfAllComments.find(\r\n      (ele) => ele.id === taskId\r\n    );\r\n\r\n    this.setState({\r\n      commentVisi: true,\r\n      commentValue: currentCommentValue.comment,\r\n    });\r\n    const commentIndexToDelete = this.props.listOfAllComments.findIndex(\r\n      (ele) => ele.id === taskId\r\n    );\r\n\r\n    this.props.listOfAllComments.splice(commentIndexToDelete, 1);\r\n  };\r\n\r\n  termDoneCheckbox = (taskId) => {\r\n    // CheckBox handler and also other informations about term/date in DetailCoverMarks\r\n    const matchedTerm = this.props.listOfAllTerms.filter(\r\n      (ele) => ele.id === taskId\r\n    );\r\n    const currentCardTerm = document.getElementById(`${taskId}term`)\r\n      .children[0];\r\n\r\n    if (matchedTerm[0].status !== \"Done\") {\r\n      matchedTerm[0].beforeDoneState.beforeStatus = matchedTerm[0].status;\r\n      matchedTerm[0].beforeDoneState.beforeColor = matchedTerm[0].statusColor;\r\n      matchedTerm[0].status = \"Done\";\r\n      matchedTerm[0].statusColor = \"#5AAC44\";\r\n      currentCardTerm.style.backgroundColor = \"#5AAC44\";\r\n    } else {\r\n      matchedTerm[0].status = matchedTerm[0].beforeDoneState.beforeStatus;\r\n      matchedTerm[0].statusColor = matchedTerm[0].beforeDoneState.beforeColor;\r\n      matchedTerm[0].beforeDoneState.beforeStatus = \"\";\r\n      matchedTerm[0].beforeDoneState.beforeColor = \"\";\r\n      currentCardTerm.style.backgroundColor = matchedTerm[0].statusColor;\r\n    }\r\n    this.setState({\r\n      datePickerVisi: false, //Just refresh\r\n    });\r\n  };\r\n\r\n  toggleCurrentListVisiFunc = (nameVisi) => {\r\n    this.setState({ [nameVisi]: !this.state[nameVisi] });\r\n  };\r\n\r\n  closeAllListsWindowsFunc = () => {\r\n    this.setState({\r\n      moveToAnotherListVisi: false,\r\n      copyCardVisi: false,\r\n      labelVisi: false,\r\n      datePickerVisi: false,\r\n      tasksListVisi: false,\r\n      moveToInSuggestedVisi: false,\r\n      commentVisi: false,\r\n      commentValue: \"\",\r\n    });\r\n  };\r\n\r\n  closeAllListsWindowsByListener = (e) => {\r\n    if (e.target.className.includes(\"detailCoverClose\")) {\r\n      this.closeAllListsWindowsFunc();\r\n    }\r\n  };\r\n\r\n  reloadCoverComponentFunc = () => {\r\n    this.setState({\r\n      reloadDetalCoverCompState: !this.state.reloadDetalCoverCompState,\r\n    });\r\n  };\r\n\r\n  commentVisiToggleFunc = () => {\r\n    this.setState({\r\n      commentVisi: true,\r\n    });\r\n  };\r\n\r\n  addPriorityForCards = (e, cardId, byElement) => {\r\n    const { listOfAllPriorityTasks, setListOfPriority } = this.props;\r\n    if (!listOfAllPriorityTasks.includes(cardId)) {\r\n      setListOfPriority([...listOfAllPriorityTasks, cardId]);\r\n      const clickedCardDOM = document.getElementById(cardId);\r\n      clickedCardDOM.style.border = \"1px solid #db4a36\";\r\n      e.target.style.color = \"#db4a36\";\r\n      e.target.children[0].style.color = \"#db4a36\";\r\n    } else if (listOfAllPriorityTasks.includes(cardId)) {\r\n      const indexToDelete = listOfAllPriorityTasks.findIndex(\r\n        (ele) => ele === cardId\r\n      );\r\n      listOfAllPriorityTasks.splice(indexToDelete, 1);\r\n      const clickedCardDOM = document.getElementById(cardId);\r\n      clickedCardDOM.style.border = null;\r\n      if (byElement === \"detailCover\") {\r\n        e.target.style.color = \"#42516e\";\r\n        e.target.children[0].style.color = \"#42516e\";\r\n      } else {\r\n        e.target.style.color = \"#fff\";\r\n        e.target.children[0].style.color = \"#fff\";\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      taskId,\r\n      taskTitleList,\r\n      updateCard,\r\n      deleteCard,\r\n      addNewCard,\r\n      currentListId,\r\n      wholeList,\r\n      moveCardToAnotherList,\r\n      toggleLabelColorToCard,\r\n      listOfAllBadges,\r\n      labelColors,\r\n      setLabelColors,\r\n      listOfAllTasksId,\r\n      listOfAllComments,\r\n      listOfAllPriorityTasks,\r\n      listOfAllTerms,\r\n      setListOfallTerms,\r\n      toggleTermToCard,\r\n      setListOfTasksList,\r\n      listOfAllTasksList,\r\n    } = this.props;\r\n\r\n    const {\r\n      taskTitle,\r\n      commentValue,\r\n      moveToAnotherListVisi,\r\n      copyCardVisi,\r\n      labelVisi,\r\n      moveToInSuggestedVisi,\r\n      datePickerVisi,\r\n      tasksListVisi,\r\n      commentVisi,\r\n    } = this.state;\r\n\r\n    const copyOfallBadges = [...listOfAllBadges];\r\n    const matchedColorsToThisCard = copyOfallBadges.filter(\r\n      (ele) => ele.id === taskId\r\n    );\r\n\r\n    const copyOfAllComment = [...listOfAllComments];\r\n    const matchedComments = copyOfAllComment.filter((ele) => ele.id === taskId);\r\n\r\n    const copyOfAllPriority = [...listOfAllPriorityTasks];\r\n    const matchedPriority = copyOfAllPriority.filter((ele) => ele === taskId);\r\n\r\n    const copyOfAllTerms = [...listOfAllTerms];\r\n    const matchedTerms = copyOfAllTerms.filter((ele) => ele.id === taskId);\r\n\r\n    const copyOfAllListTasks = [...listOfAllTasksList];\r\n    const matchedListTasks = copyOfAllListTasks.filter(\r\n      (ele) => ele.id === taskId\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <DetailCoverView\r\n          updateCard={updateCard}\r\n          addNewCard={addNewCard}\r\n          taskTitle={taskTitle}\r\n          taskTitleFeature={this.taskTitleFeature}\r\n          taskTitleList={taskTitleList}\r\n          moveToInSuggestedVisi={moveToInSuggestedVisi}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          labelVisi={labelVisi}\r\n          deleteCard={deleteCard}\r\n          currentListId={currentListId}\r\n          taskId={taskId}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          addPriorityForCards={this.addPriorityForCards}\r\n          commentVisi={commentVisi}\r\n          commentChange={this.commentChange}\r\n          commentValue={commentValue}\r\n          commentVisiToggleFunc={this.commentVisiToggleFunc}\r\n          addCommentToCard={this.addCommentToCard}\r\n          listOfAllComments={matchedComments}\r\n          editCommentToCard={this.editCommentToCard}\r\n          moveToAnotherListVisi={moveToAnotherListVisi}\r\n          matchedPriority={matchedPriority}\r\n          datePickerVisi={datePickerVisi}\r\n          matchedTerms={matchedTerms}\r\n          toggleTermToCard={toggleTermToCard}\r\n          termDoneCheckbox={this.termDoneCheckbox}\r\n          tasksListVisi={tasksListVisi}\r\n          setListOfTasksList={setListOfTasksList}\r\n          listOfAllTasksList={listOfAllTasksList}\r\n          matchedListTasks={matchedListTasks}\r\n          copyCardVisi={copyCardVisi}\r\n          toggleCurrentListVisiFunc={this.toggleCurrentListVisiFunc}\r\n          closeAllListsWindowsFunc={this.closeAllListsWindowsFunc}\r\n          setListOfallTerms={setListOfallTerms}\r\n          listOfAllTerms={listOfAllTerms}\r\n          reloadCoverComponentFunc={this.reloadCoverComponentFunc}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DetailCover;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Navigations from \"../Naviagtion/Navigations\";\r\nimport MenuBar from \"../MenuSlide/MenuBar\";\r\nimport CoreField from \"../CoreField/CoreField\";\r\nimport ThemeField from \"../ThemeField/ThemeField\";\r\nimport OptionCover from \"../OptionCover/OptionCover\";\r\nimport DetailCover from \"../DetailCover/DetailCover\";\r\n\r\nconst Main = () => {\r\n  const [showThemeOption, showThemeOptionFunction] = useState(false);\r\n  const [whichColor, setWhichColor] = useState([\"#76ce8e\"]);\r\n  const [visibilityOptionsCover, setVisibilityOptionCover] = useState(false);\r\n  const [optionCoverData, setOptionCoverData] = useState(\"\");\r\n  const [visibilityTaskDetails, setVisibilityTaskDetails] = useState(false);\r\n  const [taskTitleList, setTaskTitleList] = useState();\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const [taskId, setTaskId] = useState(\"\");\r\n  const [idUpdatedList, setIdUpdatedList] = useState();\r\n  const [listOfAllTasksId, setListOfAllTasksId] = useState([]);\r\n  const [listOfAllBadges, setListOfAllBadges] = useState([]);\r\n  const [listOfAllPriorityTasks, setListOfPriority] = useState([]);\r\n  const [listOfAllComments, setListOfAllComments] = useState([]);\r\n  const [listOfAllTerms, setListOfallTerms] = useState([]);\r\n  const [listOfAllTasksList, setListOfTasksList] = useState([]);\r\n  const [hideFontSizeLabel, setHideFontSizeLabel] = useState(false);\r\n  const [tasksListVisibility, setTasksListVisibility] = useState(false);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", hideTheme);\r\n  });\r\n\r\n  const [wholeList, setWholeList] = useState([\r\n    {\r\n      id: 0,\r\n      title: \"To Do\",\r\n      tasks: [],\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"In Progress\",\r\n      tasks: [],\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Finished\",\r\n      tasks: [],\r\n    },\r\n  ]);\r\n\r\n  const [labelColors, setLabelColors] = useState([\r\n    { color: \"#61BD4F\", colorName: \"green\", value: \"\", id: 0 },\r\n    { color: \"#F2D600\", colorName: \"yellow\", value: \"\", id: 1 },\r\n    { color: \"#FF9F1A\", colorName: \"orange\", value: \"\", id: 2 },\r\n    { color: \"#EB5A46\", colorName: \"red\", value: \"\", id: 3 },\r\n    { color: \"#C377E0\", colorName: \"purple\", value: \"\", id: 4 },\r\n    { color: \"#0079BF\", colorName: \"blue\", id: 5 },\r\n    { color: \"#00C2E0\", colorName: \"light blue ocean\", value: \"\", id: 6 },\r\n    { color: \"#51E898\", colorName: \"light green\", value: \"\", id: 7 },\r\n    { color: \"#FF78CB\", colorName: \"pink\", value: \"\", id: 8 },\r\n    { color: \"#344563\", colorName: \"dark blue\", value: \"\", id: 9 },\r\n    { color: \"#B3BAC5\", colorName: \"grey\", value: \"\", id: 10 },\r\n  ]);\r\n\r\n  const hideTheme = (e) => {\r\n    const searchingClass = e.target.className;\r\n    if (!searchingClass.includes(\"theme\")) {\r\n      showThemeOptionFunction(false);\r\n    }\r\n    if (\r\n      searchingClass.includes(\"coverOption\") ||\r\n      searchingClass.includes(\"cover_box\")\r\n    ) {\r\n      setVisibilityOptionCover(false);\r\n    }\r\n    if (!searchingClass.includes(\"tasksList\")) {\r\n      setTasksListVisibility(false);\r\n    }\r\n  };\r\n\r\n  const addNewCard = (listId, newTask, taskId) => {\r\n    const correctList = wholeList.filter((list) => list.id === listId);\r\n    if (newTask.length === 0) return;\r\n\r\n    const matchedBadges = listOfAllBadges.filter((ele) => ele.id === taskId);\r\n    const matchedPriority = listOfAllPriorityTasks.filter(\r\n      (ele) => ele === taskId\r\n    );\r\n    const matchedComment = listOfAllComments.filter((ele) => ele.id === taskId);\r\n    const theBiggestId = Math.max(...listOfAllTasksId);\r\n\r\n    const matchedList = wholeList.filter((ele) => ele.id === listId);\r\n    const matchedDate = listOfAllTerms.filter((ele) => ele.id === taskId);\r\n\r\n    //\"Add card\" by move already existing card\r\n    if (taskId) {\r\n      correctList[0].tasks.push({\r\n        id: taskId,\r\n        taskName: newTask,\r\n        currentList: listId,\r\n        currentListName: matchedList[0].title,\r\n        comment: matchedComment,\r\n        badges: matchedBadges,\r\n        priority: `${matchedPriority.length === 0 ? null : \"priority\"}`,\r\n        date: matchedDate,\r\n        cover: \"\",\r\n      });\r\n    } else {\r\n      //Add new card by button 'Add Card'\r\n      correctList[0].tasks.push({\r\n        id: `${listOfAllTasksId.length === 0 ? 0 : theBiggestId + 1}`,\r\n        taskName: newTask,\r\n        currentList: listId,\r\n        currentListName: matchedList[0].title,\r\n        comment: \"\",\r\n        badges: [],\r\n        priority: false,\r\n        date: [],\r\n        cover: \"\",\r\n      });\r\n      if (listOfAllTasksId.length === 0) {\r\n        setListOfAllTasksId([0]);\r\n      } else {\r\n        setListOfAllTasksId([...listOfAllTasksId, theBiggestId + 1]);\r\n      }\r\n    }\r\n    setListOfAllBadges(listOfAllBadges);\r\n  };\r\n\r\n  const deleteCard = (listId, taskId, byButton) => {\r\n    if (byButton === \"byButton\") {\r\n      //Delete Card Badges from array if matched exist also other matched lists\r\n      const matchedBadges = listOfAllBadges.filter((ele) => ele.id === taskId);\r\n      const matchedPriority = listOfAllPriorityTasks.filter(\r\n        (ele) => ele === taskId\r\n      );\r\n      const matchedComment = listOfAllComments.filter(\r\n        (ele) => ele.id === taskId\r\n      );\r\n      const matchedTerms = listOfAllTerms.filter((ele) => ele.id === taskId);\r\n      const matchedTasksList = listOfAllTasksList.filter(\r\n        (ele) => ele.id === taskId\r\n      );\r\n\r\n      if (matchedPriority.length !== 0) {\r\n        matchedPriority.forEach((element) => {\r\n          const indexOfPriorityToDelete = listOfAllPriorityTasks.findIndex(\r\n            (ele) => ele === taskId\r\n          );\r\n          listOfAllPriorityTasks.splice(indexOfPriorityToDelete, 1);\r\n        });\r\n      }\r\n\r\n      if (matchedComment.length !== 0) {\r\n        matchedComment.forEach((element) => {\r\n          const indexOfCommentToDelete = listOfAllComments.findIndex(\r\n            (ele) => ele.id === taskId\r\n          );\r\n          listOfAllComments.splice(indexOfCommentToDelete, 1);\r\n        });\r\n      }\r\n\r\n      if (matchedTerms.length !== 0) {\r\n        matchedTerms.forEach((element) => {\r\n          const indexOfTermToDelete = listOfAllTerms.findIndex(\r\n            (ele) => ele.id === taskId\r\n          );\r\n          listOfAllTerms.splice(indexOfTermToDelete, 1);\r\n        });\r\n      }\r\n\r\n      if (matchedBadges.length !== 0) {\r\n        matchedBadges.forEach((element) => {\r\n          const indexOfBadgedToDelete = listOfAllBadges.findIndex(\r\n            (ele) => ele.id === taskId && ele.color === element.color\r\n          );\r\n          listOfAllBadges.splice(indexOfBadgedToDelete, 1);\r\n        });\r\n      }\r\n\r\n      if (matchedTasksList.length !== 0) {\r\n        matchedTasksList.forEach((element) => {\r\n          const indexOfTaskListToDelete = listOfAllTasksList.findIndex(\r\n            (ele) => ele.id === element.id && ele.listName === element.listName\r\n          );\r\n          listOfAllTasksList.splice(indexOfTaskListToDelete, 1);\r\n        });\r\n      }\r\n\r\n      //Delete Card Id from array\r\n      const matchedIdList = listOfAllTasksId.findIndex(\r\n        (ele) => ele === taskId * 1\r\n      );\r\n      listOfAllTasksId.splice(matchedIdList, 1);\r\n    }\r\n\r\n    //Delete Card from list( by every way )\r\n    const correctList = wholeList.filter((list) => list.id === listId);\r\n    const taskIndex = correctList[0].tasks.findIndex(\r\n      (element) => element.id === taskId\r\n    );\r\n    correctList[0].tasks.splice(taskIndex, 1);\r\n    setVisibilityOptionCover(false);\r\n    setVisibilityTaskDetails(false);\r\n  };\r\n\r\n  const addNewList = (listInputValue) => {\r\n    if (listInputValue === \"\") return;\r\n    if (listInputValue.length < 1) return;\r\n    if (wholeList.length === 10) return;\r\n\r\n    let biggerThanLast = [];\r\n    wholeList.forEach((list) => biggerThanLast.push(list.id));\r\n    const theBiggest = Math.max(...biggerThanLast);\r\n    setWholeList([\r\n      ...wholeList,\r\n      {\r\n        title: listInputValue,\r\n        id: Number(`${wholeList.length === 0 ? 0 : theBiggest + 1}`),\r\n        tasks: [],\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const copyNewList = (tasksToCopy, listNewName) => {\r\n    const tasksToCopyArr = [...tasksToCopy];\r\n    //Copy pure List, without tasks\r\n    let biggerThanLast = [];\r\n    wholeList.forEach((list) => biggerThanLast.push(list.id));\r\n    const theBiggest = Math.max(...biggerThanLast);\r\n    const newId = Number(`${wholeList.length === 0 ? 0 : theBiggest + 1}`);\r\n    wholeList.push({\r\n      title: listNewName,\r\n      id: newId,\r\n      tasks: [],\r\n    });\r\n\r\n    //Find proper list for change tasks id\r\n    const listIndex = wholeList.findIndex((list) => list.id === newId);\r\n    //Add preview tasks to newList (tasks have wrong id now)\r\n    tasksToCopyArr.forEach((ele) => {\r\n      addNewCard(newId, ele.taskName, ele.id);\r\n    });\r\n    //Change tasks id to correct, also other parameters\r\n    const theBiggestId = Math.max(...listOfAllTasksId);\r\n    wholeList[listIndex].tasks.forEach((ele, index) => {\r\n      const newIdForCard = String(theBiggestId + (index + 1)); //Calculate new unique id\r\n      ele.id = newIdForCard;\r\n\r\n      listOfAllTasksId.push(Number(newIdForCard)); // Add id to listOfId\r\n\r\n      if (ele.badges.length !== 0) {\r\n        ele.badges.forEach((badge) => {\r\n          listOfAllBadges.push({\r\n            color: badge.color,\r\n            id: newIdForCard,\r\n            labelId: `${badge.color}${newIdForCard}`,\r\n            name: badge.name,\r\n          }); // Add proper badges to list of Badges, with new uniqe Id\r\n        });\r\n      }\r\n\r\n      if (ele.comment.length !== 0) {\r\n        listOfAllComments.push({\r\n          id: newIdForCard,\r\n          comment: ele.comment[0].comment,\r\n        }); // Add proper comment, with new uniqe Id\r\n      }\r\n\r\n      if (ele.priority === \"priority\")\r\n        listOfAllPriorityTasks.push(String(newIdForCard));\r\n\r\n      if (ele.date.length !== 0) {\r\n        listOfAllTerms.push({\r\n          id: newIdForCard,\r\n          classN: \"termSpan\",\r\n          term: ele.date[0].term,\r\n          day: ele.date[0].day,\r\n          month: ele.date[0].month,\r\n          year: ele.date[0].year,\r\n          monthName: ele.date[0].monthName,\r\n          hour: ele.date[0].hour,\r\n          minutes: ele.date[0].minutes,\r\n          status: ele.date[0].status,\r\n          statusColor: ele.date[0].statusColor,\r\n          fontColor: ele.date[0].fontColor,\r\n          beforeDoneState: ele.date[0].beforeDoneState,\r\n        });\r\n      } // Add proper term, with new uniqe Id\r\n    });\r\n    setRefresh(!refresh);\r\n  };\r\n\r\n  const updateListTitle = (newTitle, listId) => {\r\n    const updatedList = wholeList.filter((list) => list.id === listId);\r\n    updatedList[0].title = newTitle;\r\n  };\r\n\r\n  const visibilityOptionFunction = (\r\n    e,\r\n    toggle,\r\n    taskName,\r\n    listId,\r\n    currentListName,\r\n    cardId\r\n  ) => {\r\n    //Dates sending from Card to OptionFunction Comp (by clicked Edit Icon)\r\n    setVisibilityOptionCover(toggle);\r\n    setIdUpdatedList(listId);\r\n    setTaskName(taskName);\r\n    setOptionCoverData([\r\n      {\r\n        listId: listId,\r\n        currentListName: currentListName,\r\n        top: e.target.parentNode.parentNode.offsetTop,\r\n        left: e.target.parentNode.offsetLeft,\r\n        taskTitle: taskName,\r\n        clickedCard: e.target.parentNode,\r\n        clickedCardWrapLabel: e.target.parentNode.children[0],\r\n        clickedCardId: cardId,\r\n        wholeList: wholeList,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const taskDetailsFunction = (\r\n    //Dates sending from Card to DetailsComponenet (by doubleClick Card)\r\n    nameUpdatedTask,\r\n    nameUpdatedList,\r\n    listId,\r\n    cardId\r\n  ) => {\r\n    setIdUpdatedList(listId);\r\n    setTaskTitleList(nameUpdatedList);\r\n    setTaskName(nameUpdatedTask);\r\n    setTaskId(cardId);\r\n    setVisibilityTaskDetails(true);\r\n  };\r\n\r\n  const updateCard = (e, updatedTitle, listId, taskId) => {\r\n    // For changing taskName by detailCover component and optionCover\r\n    if (\r\n      e.target.className.includes(\"cover\") ||\r\n      e.target.className.includes(\"cover_saveBtn\") ||\r\n      e.which === 13\r\n    ) {\r\n      const correctList = wholeList.filter((list) => list.id === listId);\r\n      if (updatedTitle.length === 0) return setVisibilityTaskDetails(false);\r\n      const index = correctList[0].tasks.findIndex((ele) => ele.id === taskId);\r\n      correctList[0].tasks[index].taskName = updatedTitle;\r\n      setVisibilityTaskDetails(false);\r\n      setVisibilityOptionCover(false);\r\n      return;\r\n    }\r\n\r\n    if (\r\n      // For changing taskName by detailCover component without closing this componentView\r\n      !e.target.className.includes(\"close\") &&\r\n      !e.target.className.includes(\"suggestedListToMove\") &&\r\n      !e.which\r\n    ) {\r\n      const correctList = wholeList.filter((list) => list.id === listId);\r\n      if (updatedTitle.length === 0) return setVisibilityTaskDetails(false);\r\n      if (correctList[0]) {\r\n        const index = correctList[0].tasks.findIndex(\r\n          (ele) => ele.id === taskId\r\n        );\r\n        correctList[0].tasks[index].taskName = updatedTitle;\r\n        setTaskName(updatedTitle);\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (e.target.className.includes(\"close\")) {\r\n      setVisibilityTaskDetails(false);\r\n      setVisibilityOptionCover(false);\r\n    }\r\n  };\r\n\r\n  const moveCardToAnotherList = (\r\n    taskId,\r\n    taskTitle,\r\n    listIdToMove,\r\n    listIdToDelte\r\n  ) => {\r\n    //Add to new list, and delete from preview\r\n    addNewCard(listIdToMove, taskTitle, taskId);\r\n    deleteCard(listIdToDelte, taskId);\r\n  };\r\n\r\n  const moveListToAnotherPlace = (draggedListIndex, addToThisIndex) => {\r\n    const copy = [...wholeList];\r\n    const splicedElement = copy.splice(draggedListIndex, 1);\r\n    copy.splice(addToThisIndex, 0, ...splicedElement);\r\n    setWholeList(copy);\r\n  };\r\n\r\n  const clearAllBlankSpan = (e) => {\r\n    const allBlank = document.querySelectorAll(\".blank\");\r\n\r\n    allBlank.forEach((blank) => {\r\n      blank.style.width = \"0\";\r\n      blank.style.height = \"0\";\r\n      blank.style.backgroundColor = \"transparent\";\r\n      blank.style.borderRadius = \"0\";\r\n    });\r\n  };\r\n\r\n  const toggleTasksListVisibility = (toggle) => {\r\n    setTasksListVisibility(toggle);\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <Navigations\r\n        themeToggle={showThemeOptionFunction}\r\n        themeOption={showThemeOption}\r\n        whichColor={whichColor}\r\n      />\r\n      <ThemeField themeOption={showThemeOption} setWhichColor={setWhichColor} />\r\n      <MenuBar whichColor={whichColor} />\r\n      <CoreField\r\n        wholeList={wholeList}\r\n        setWholeList={setWholeList}\r\n        addNewCard={addNewCard}\r\n        deleteCard={deleteCard}\r\n        addNewList={addNewList}\r\n        visibilityOptionFunction={visibilityOptionFunction}\r\n        taskDetailsFunction={taskDetailsFunction}\r\n        updateListTitle={updateListTitle}\r\n        moveListToAnotherPlace={moveListToAnotherPlace}\r\n        clearAllBlankSpan={clearAllBlankSpan}\r\n        hideFontSizeLabel={hideFontSizeLabel}\r\n        setHideFontSizeLabel={setHideFontSizeLabel}\r\n        listOfAllTasksList={listOfAllTasksList}\r\n        moveCardToAnotherList={moveCardToAnotherList}\r\n        copyNewList={copyNewList}\r\n      />\r\n      {visibilityOptionsCover ? (\r\n        <OptionCover\r\n          optionCoverData={optionCoverData}\r\n          taskName={taskName}\r\n          updateCard={updateCard}\r\n          deleteCard={deleteCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          setListOfPriority={setListOfPriority}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          listOfAllPriorityTasks={listOfAllPriorityTasks}\r\n          listOfAllTerms={listOfAllTerms}\r\n          listOfAllTasksList={listOfAllTasksList}\r\n          listOfAllComments={listOfAllComments}\r\n          setListOfallTerms={setListOfallTerms}\r\n          addNewCard={addNewCard}\r\n        />\r\n      ) : null}\r\n      {visibilityTaskDetails ? (\r\n        <DetailCover\r\n          taskName={taskName}\r\n          taskId={taskId}\r\n          taskTitleList={taskTitleList}\r\n          updateCard={updateCard}\r\n          addNewCard={addNewCard}\r\n          deleteCard={deleteCard}\r\n          currentListId={idUpdatedList}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          listOfAllBadges={listOfAllBadges}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          listOfAllComments={listOfAllComments}\r\n          setListOfAllComments={setListOfAllComments}\r\n          listOfAllPriorityTasks={listOfAllPriorityTasks}\r\n          listOfAllTerms={listOfAllTerms}\r\n          setListOfPriority={setListOfPriority}\r\n          setTasksListVisibility={toggleTasksListVisibility}\r\n          tasksListVisibility={tasksListVisibility}\r\n          setListOfTasksList={setListOfTasksList}\r\n          listOfAllTasksList={listOfAllTasksList}\r\n          setListOfallTerms={setListOfallTerms}\r\n        />\r\n      ) : null}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { device } from \"../MediaQuery/mq\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin:0;\r\n    padding:0;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    box-sizing:border-box;\r\n    border:none;\r\n    outline:none;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n\r\n  html{\r\n    font-size:10px;\r\n  }\r\n\r\n  body{\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n  }\r\n\r\n  .card{\r\n  top:0;\r\n  left:0;\r\n  display:flex;\r\n  justify-content:space-between;\r\n  flex-wrap:wrap;\r\n  width: 100%;\r\n  max-width:260px;\r\n  word-break: break-all;\r\n  margin: 10px 0px;\r\n  padding: 9px 7.5px;\r\n  font-size: 1.4rem;\r\n  box-shadow: 0px 0.5px 0px 0.5px #aaa;\r\n  background-color: #fff;\r\n  border-radius:3px;\r\n  cursor: pointer;\r\n  color:black;\r\n\r\n  &:hover {\r\n    background-color: #F4F5F7;\r\n  }\r\n\r\n      &:hover .fa-highlighter {\r\n     color:#777; \r\n    }\r\n  }\r\n\r\n  .card_cardWrapContent{\r\n    display:flex;\r\n    justify-content:space-around\r\n  }\r\n\r\n  .card_wrapLabel{\r\n    display:flex;\r\n    flex-wrap:wrap;\r\n    width:100%;\r\n    transition:0.1s linear;\r\n\r\n    &:hover{\r\n      opacity:0.6;\r\n    }\r\n  }\r\n\r\n  .labelElement{\r\n    align-self:center;\r\n    min-width: 15%;\r\n    min-height:8px;\r\n    border-radius:5px;\r\n    margin-bottom:4px;\r\n    margin-right:4px;\r\n    padding: 3px;\r\n    color:white;\r\n    transition: 0.1s linear;\r\n  }\r\n\r\n  .labelElement_DetailCover{\r\n    min-width:40px;\r\n    width:auto;\r\n    height:32px;\r\n    border-radius:3px;\r\n    margin: 3px 3px 3px 0px;\r\n    cursor:pointer;\r\n    transition: 0.1s linear;\r\n    padding: 8px 5px;\r\n    color:white;\r\n    font-size:14px;\r\n    font-weight:600;\r\n\r\n    &:hover{\r\n      opacity: 0.85;\r\n    }\r\n  }\r\n\r\n  .lists{\r\n  top:0;\r\n  left:0;\r\n  width: 275px;\r\n  max-height: 80vh;\r\n  margin-right: 10px;\r\n  align-self: flex-start;\r\n  background-color: #ebecf0;\r\n  border-radius: 4px;\r\n  padding: 10px 7.5px;\r\n  margin-bottom: 15px;\r\n  cursor: pointer;\r\n  overflow-y:scroll;\r\n\r\n  &::-webkit-scrollbar{\r\n    width:1px;\r\n}\r\n\r\n&::-webkit-scrollbar-track{\r\n    background:rgba(0,0,0,0);\r\n}\r\n\r\n&::-webkit-scrollbar-thumb{\r\n  background:rgba(0,0,0,0);\r\n  border-radius: 10px;\r\n  height:10px;\r\n}\r\n&::-webkit-scrollbar-thumb:hover{\r\n  background:rgba(0,0,0,0);\r\n}\r\n  }\r\n  \r\n  .singleListWrap{\r\n     position:relative;\r\n     width: 285px;\r\n     display:flex;\r\n     flex-direction:column;\r\n   }\r\n\r\n  .fa-highlighter{\r\n    color:#777;\r\n    align-self:center;\r\n    margin:2px;\r\n    margin-bottom:0px;\r\n    color:#000;\r\n    @media ${device.laptop} {\r\n      color:#fff;\r\n\r\n      &:hover{\r\n        color:#000;\r\n      }\r\n  }\r\n  }\r\n  \r\n  .fa-ellipsis-h{\r\n   padding: 9px ;\r\n   margin-left:2px;\r\n   font-size: 13px;\r\n   color: #777;\r\n   cursor: pointer;\r\n\r\n   &:hover{\r\n    background-color: #dddfe5;\r\n   }\r\n  }\r\n\r\n  .fa-credit-card{\r\n    margin-right: 7.5px;\r\n     color:#42526E;\r\n     font-size: 19px;\r\n     \r\n   }\r\n\r\n   .detail > .fa-times{\r\n     position: absolute;\r\n     top:15px;\r\n     right:15px;\r\n     font-size: 20px;\r\n     color:#42526E;\r\n     cursor: pointer;\r\n   }\r\n\r\n   .termSpan{\r\n    color: #888;\r\n    font-size: 12.5px;\r\n    letter-spacing: 0.5px;\r\n    margin-left:3px;\r\n    padding: 2.5px 5px;\r\n    border-radius:3px;\r\n   }\r\n\r\n::-webkit-scrollbar{\r\n    height:17.5px;\r\n}::-webkit-scrollbar-track{\r\n    background:rgba(0,0,0,0.5);\r\n}\r\n::-webkit-scrollbar-thumb{\r\n  background:rgba(0,0,0,0.3);\r\n  border-radius: 10px;\r\n  height:10px;\r\n}\r\n::-webkit-scrollbar-thumb:hover{\r\n  background:rgba(0,0,0,0.5);\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\nimport Main from \"../Containers/Main/main\";\nimport GlobalStyle from \"../Style/GlobalStyle/globalStyle\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}