{"version":3,"sources":["components/Navigation/NavListView/NavListView.js","components/Navigation/NavigationView.js","Containers/Naviagtion/Navigations.js","components/Card/Card.js","components/List/ListButtons/ListButtons.js","components/List/ListInput/ListInput.js","components/List/ListView.js","Containers/List/List.js","components/CoreField/CoreFieldView.js","Containers/CoreField/CoreField.js","Style/MediaQuery/mq.js","components/ThemeField/ThemeFieldView.js","Containers/ThemeField/ThemeField.js","components/OptionCover/OptionCoverListView/OptionCoverListView.js","components/Labels/LabelView/LabelsNameColors.js","components/Labels/LabelView/LabelsChooseColors.js","components/Labels/LabelsView.js","Containers/Labels/Labels.js","components/OptionCover/OptionCoverView.js","Containers/OptionCover/OptionCover.js","components/DetailCover/DetailElements/DetailInputElement.js","components/DetailCover/DetailElements/DetailSuggestedElement.js","components/DetailCover/DetailTools/DetailCoverNav/DetailCoverNav.js","components/DetailCover/DetailTools/DetailCoverMarks/DetailCoverMarks.js","components/DetailCover/DetailTools/DetailTools.js","components/DetailCover/DetailCoverView/DetailCoverView.js","Containers/DetailCover/DetailCover.js","Containers/Main/main.js","Style/GlobalStyle/globalStyle.js","components/App.js","serviceWorker.js","index.js"],"names":["StyledList","styled","li","props","lastEle","Link","a","NavListView","elementHoverEnter","elementHoverLeave","themeFunction","linkTitle","className","onMouseEnter","e","onMouseLeave","onClick","StyledNav","nav","StyledUl","ul","StyledInput","input","navigationElements","Navigation","map","element","key","placeholder","Navigations","themeToggle","themeOption","this","NavigationView","Component","Card","state","selected","scrollHeight","taskk","mouseDownFeature","target","classList","setState","style","zIndex","mouseUpFeature","cursor","position","transform","scrollPosition","wholeList","addNewCardFeature","deleteCardFeatureByMove","listId","scrollHeighFromMain","Math","floor","taskId","getAttribute","draggedCard","document","getElementById","draggedCardChildren","children","draggenCardLabelsChildren","length","width","fontSize","pageX","id","mouseLeaveFeature","forEach","ele","textContent","i","isDragAndDropTrue","clearAllBlankSpan","mouseMoveFeature","left","clientX","top","clientY","allBlankSpan","querySelectorAll","all","height","backgroundColor","borderRadius","labelFontSizeToggle","hideFontSizeLabel","setHideFontSizeLabel","task","taskName","inputTitle","taskDetailsFunction","visibilityOptionFunction","onDoubleClick","onMouseDown","onMouseUp","onMouseMove","badges","color","labelId","name","StyledAddButton","button","StyledSpanX","span","ListButtons","showAddField","textAreaValue","swapAddFieldFeature","StyledInputCover","div","ListInput","selectedList","listOption","setListTitle","onChange","value","StyledTextArea","textarea","showStyle","ListView","tasks","setTextAreaValue","List","hideAll","searchingClass","includes","showListHandle","setListInput","updateListTitle","buttonId","addNewCard","addNewCardFeatureByKey","which","preventDefault","deleteCard","boxShadow","display","marginRight","draggedListIndex","findIndex","list","moveListToAnotherPlace","addEventListener","main","querySelector","mainWidth","offsetWidth","scroll","behavior","title","removeEventListener","StyledMain","StyledListInput","StyledWrapList","StyledButton","StyledWrapAddListBtn","bgc","CoreFieldView","mousePositionX","showList","showAddListHandle","listInputHandle","listInputValue","addNewList","addNewListByKey","onScroll","onKeyPress","MainField","useState","updatedScrollPosition","isDragDropTrue","isDragDropTrueFeature","scrollLeft","isTrue","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","StyledColorDiv","StyledThemeDivTitle","h3","StyledThemeDiv","showTheme","ThemeFieldView","changeColor","blockOfColors","block","mainColor","navColor","listColor","inputColor","ThemeField","setWhichColor","StyledListBlock","StyledIcon","OptionCoverListView","handleLabelsVisibility","addPriorityForCards","optionCoverData","clickedCard","clickedCardId","StyledBack","StyledNameLabels","detailCover","StyledLabelTitle","h2","StyledLabelInput","marginTop","StyledName","StyledWrapColors","StyledColorSquar","StyledX","LabelsNameColors","nameLabelVisibility","filteredColors","nameLabelInput","nameLabelInputValue","choosedSquar","saveNameLabel","currentSquarEdit","border","StyledLabels","StyledLabelWrapEle","StyledLabelElement","StyledBtn","StyledIconCheck","StyledNameSox","LabelsChooseColors","toggleLabelColorToCard","generateCheckIcon","searchLabelColor","searchInputLabel","useEffect","LabelsView","labelVisibility","Labels","currentMatchedColors","toggle","colorId","from","isAnyTextAlready","parentNode","matchedBadges","listOfAllBadges","filter","currentCheckIcon","substr","listOfAllTasksId","labelColors","setLabelColors","matchedLabelInCard","index","copyOfLabelColor","splice","colorName","addLabelColor","toUpperCase","StyledCover","StyledOptionBox","StyledSaveButton","StyledWrapLabels","StyledWrapTextAndLabels","OptionCover","taskTitleFeature","taskTitle","updateCard","labelsVisibility","matchedColorsToThisCard","setOptionCoverPostion","taskData","mainOffsetTop","offsetTop","coverBox","coverBoxHeight","offsetHeight","listIndex","positionY","positionX","OptionCoverView","StyledTaskName","Detail_Input","idUpdatedList","StyledLightText","StyledStrongText","strong","StyledChangeListDetails","StyledReplaceTitle","alignCenter","biggerMargin","StyledSuggestList","DetailSuggestedElement","changeListInDetails","taskTitleList","visibilityChangeListInDetails","moveCardToAnotherList","StyledDetailNav","StyledDetailUl","StyledDetailList","first","DetailCoverNav","StyledDetailMarks","StyledDetailDescription","StyledTitle","StyledLabelsWrap","DetailCoverMarks","margin","StyledDetailToolsWrap","DetailTools","StyledDetail","DetailCoverView","DetailInputElement","DetailCover","React","Main","showThemeOption","showThemeOptionFunction","numberOfTask","numberOfTaskFunction","whichColor","visibilityOptionsCover","setVisibilityOptionCover","setOptionCoverData","visibilityTaskDetails","setVisibilityTaskDetails","setTaskTitleList","setTaskName","setTaskId","setIdUpdatedList","setChangeListInDetails","setLabelsVisibility","labelsVisibilityDetailsComp","setLabelsVisibilityDetailsComp","setToggle","setListOfAllTasksId","hideTheme","activeList","setWholeList","newTask","correctList","theBiggestId","max","push","currentList","comment","priority","date","cover","byButton","taskIndex","indexOfBadgedToDelete","matchedIdList","arrayClassList","item","currentLiColor","Color","lighten","nameUpdatedTask","nameUpdatedList","cardId","updatedTitle","alreadyExistedBadges","matchedBages","nameBadge","createLabelsElement","indexToDelete","remove","nameLabel","currentTask","newLabel","createElement","add","setAttribute","appendChild","CoreField","filterWholeList","biggerThanLast","theBiggest","activeInput","offsetLeft","clickedCardWrapLabel","newTitle","addToThisIndex","copy","splicedElement","blank","clickedListId","deleteFromList","addToList","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4ea70616.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledList = styled.li`\r\n  width: ${(props) => (props.lastEle ? \"auto\" : \"75px\")};\r\n  height: 100%;\r\n  text-align: center;\r\n  background-color: #76ce8e;\r\n  border-radius: 4px;\r\n  transition: 0.1s linear;\r\n  margin-right: 4px;\r\n  margin-left: ${(props) => (props.lastEle ? \"auto\" : \"initial\")};\r\n  padding: ${(props) => (props.lastEle ? \"initial\" : \"8px 0px\")};\r\n`;\r\n\r\nconst Link = styled.a`\r\n  text-decoration: none;\r\n  font-size: 1.5rem;\r\n  color: #fff;\r\n`;\r\n\r\nfunction NavListView({\r\n  elementHoverEnter,\r\n  elementHoverLeave,\r\n  themeFunction,\r\n  linkTitle,\r\n}) {\r\n  return (\r\n    <StyledList\r\n      className=\"list\"\r\n      onMouseEnter={(e) => elementHoverEnter(e)}\r\n      onMouseLeave={(e) => elementHoverLeave(e)}\r\n      onClick={themeFunction}\r\n    >\r\n      <Link>{linkTitle}</Link>\r\n    </StyledList>\r\n  );\r\n}\r\n\r\nexport default NavListView;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NavListView from \"./NavListView/NavListView\";\r\n\r\nconst StyledNav = styled.nav`\r\n  width: 100vw;\r\n  height: 40px;\r\n  background-color: #40a35b;\r\n  padding: 0px 4px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledUl = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  flex-shrink: 1;\r\n  width: 100%;\r\n  height: 40px;\r\n  list-style: none;\r\n  cursor: pointer;\r\n  padding: 4px 0px;\r\n`;\r\n\r\nconst StyledList = styled.li`\r\n  width: ${(props) => (props.lastEle ? \"auto\" : \"75px\")};\r\n  height: 100%;\r\n  text-align: center;\r\n  background-color: #76ce8e;\r\n  border-radius: 4px;\r\n  transition: 0.1s linear;\r\n  margin-right: 4px;\r\n  margin-left: ${(props) => (props.lastEle ? \"auto\" : \"initial\")};\r\n  padding: ${(props) => (props.lastEle ? \"initial\" : \"8px 0px\")};\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 120px;\r\n  height: 100%;\r\n  border-radius: 4px;\r\n  padding: 7.5px;\r\n  background-color: #79be8c;\r\n  font-size: 1.6rem;\r\n  color: #fff;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    background-color: #64b37a;\r\n  }\r\n\r\n  &::placeholder {\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst navigationElements = [\"Your list\", \"Theme\", \"Help\"];\r\n\r\nconst Navigation = ({\r\n  elementHoverEnter,\r\n  elementHoverLeave,\r\n  themeFunction,\r\n}) => {\r\n  return (\r\n    <StyledNav className=\"nav\">\r\n      <StyledUl>\r\n        {navigationElements.map((element) => (\r\n          <NavListView\r\n            themeFunction={element === \"Theme\" ? themeFunction : null}\r\n            elementHoverEnter={(e) => elementHoverEnter(e)}\r\n            elementHoverLeave={(e) => elementHoverLeave(e)}\r\n            linkTitle={element}\r\n            key={element}\r\n          />\r\n        ))}\r\n        <StyledList lastEle>\r\n          <StyledInput className=\"item\" placeholder=\"Search...\" />\r\n        </StyledList>\r\n      </StyledUl>\r\n    </StyledNav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport NavigationView from \"../../components/Navigation/NavigationView\";\r\n\r\nclass Navigations extends Component {\r\n  themeFunction = () => {\r\n    this.props.themeToggle(!this.props.themeOption);\r\n  };\r\n\r\n  render() {\r\n    const { elementHoverEnter, elementHoverLeave } = this.props;\r\n    return (\r\n      <>\r\n        <NavigationView\r\n          elementHoverEnter={elementHoverEnter}\r\n          elementHoverLeave={elementHoverLeave}\r\n          themeFunction={this.themeFunction}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigations;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Card extends Component {\r\n  state = {\r\n    selected: false,\r\n    scrollHeight: 0,\r\n    taskk: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      taskk: this.props.task.taskName,\r\n    });\r\n  }\r\n\r\n  mouseDownFeature = (e) => {\r\n    if (e.target.classList[0] !== \"card\") return;\r\n    this.setState({\r\n      selected: true,\r\n    });\r\n    e.target.style.zIndex = 999;\r\n  };\r\n\r\n  mouseUpFeature = (e) => {\r\n    if (e.target.classList[0] !== \"card\") return;\r\n\r\n    e.target.style.cursor = \"pointer\";\r\n    e.target.style.position = \"static\";\r\n    e.target.style.transform = \"rotate(0deg)\";\r\n    e.target.style.zIndex = 0;\r\n\r\n    const {\r\n      scrollPosition,\r\n      wholeList,\r\n      addNewCardFeature,\r\n      deleteCardFeatureByMove,\r\n      listId,\r\n    } = this.props;\r\n\r\n    const scrollHeighFromMain = Math.floor(scrollPosition);\r\n    const taskId = e.target.getAttribute(\"id\");\r\n    const draggedCard = document.getElementById(taskId);\r\n\r\n    const draggedCardChildren = draggedCard.children;\r\n    const draggenCardLabelsChildren = [...draggedCardChildren[0].children];\r\n\r\n    if (draggedCard.children[0].children.length !== 0) {\r\n      draggedCard.children[0].style.width = \"100%\";\r\n      draggedCard.children[0].style.fontSize = \"12px\";\r\n    }\r\n\r\n    if (e.pageX < 285 - scrollHeighFromMain) {\r\n      if (wholeList[0].id === listId) return this.mouseLeaveFeature(e); //When put card in this same place\r\n      draggenCardLabelsChildren.forEach((ele) => {\r\n        ele.textContent = \"\";\r\n      });\r\n      deleteCardFeatureByMove(listId, taskId);\r\n      addNewCardFeature(wholeList[0].id, e.target.textContent, taskId);\r\n    }\r\n\r\n    for (let i = 1; i <= 10; i++) {\r\n      if (\r\n        e.pageX > 285 * i - scrollHeighFromMain &&\r\n        e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n        wholeList.length >= i + 1\r\n      ) {\r\n        if (wholeList[i].id === listId) return this.mouseLeaveFeature(e); //When put card in this same place\r\n        draggenCardLabelsChildren.forEach((ele) => {\r\n          ele.textContent = \"\";\r\n        });\r\n        deleteCardFeatureByMove(listId, taskId);\r\n        addNewCardFeature(wholeList[i].id, e.target.textContent, taskId);\r\n      }\r\n    }\r\n\r\n    this.props.isDragAndDropTrue(false);\r\n    this.props.clearAllBlankSpan();\r\n\r\n    this.setState({\r\n      selected: false,\r\n    });\r\n  };\r\n\r\n  mouseMoveFeature = (e) => {\r\n    const scrollHeighFromMain = Math.floor(this.props.scrollPosition);\r\n    if (this.state.selected && e.target.classList[0] === \"card\") {\r\n      e.target.style.left = `${e.clientX - 130}px`;\r\n      e.target.style.top = `${e.clientY - 27.5}px`;\r\n      e.target.style.position = \"fixed\";\r\n      e.target.style.cursor = \"grabbing\";\r\n      e.target.style.transform = \"rotate(5deg)\";\r\n      e.target.style.zIndex = 999;\r\n\r\n      const taskId = e.target.getAttribute(\"id\");\r\n      const draggedCard = document.getElementById(taskId);\r\n\r\n      if (draggedCard.children[0].children.length !== 0) {\r\n        draggedCard.children[0].style.width = \"25%\";\r\n        draggedCard.children[0].style.fontSize = \"0px\";\r\n      }\r\n\r\n      const allBlankSpan = document.querySelectorAll(\".blank\");\r\n      allBlankSpan.forEach((all) => {\r\n        all.style.width = \"0\";\r\n        all.style.height = \"0\";\r\n        all.style.backgroundColor = \"transparent\";\r\n      });\r\n\r\n      for (let i = 1; i < 10; i++) {\r\n        if (e.pageX < 285 - scrollHeighFromMain) {\r\n          allBlankSpan[0].style.width = \"100%\";\r\n          allBlankSpan[0].style.height = \"35px\";\r\n          allBlankSpan[0].style.backgroundColor = \"#dddfe5\";\r\n          allBlankSpan[0].style.borderRadius = \"5px\";\r\n        } else if (\r\n          e.pageX > 285 * i - scrollHeighFromMain &&\r\n          e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n          this.props.wholeList.length >= i + 1\r\n        ) {\r\n          allBlankSpan[i].style.width = \"100%\";\r\n          allBlankSpan[i].style.height = \"35px\";\r\n          allBlankSpan[i].style.backgroundColor = \"#dddfe5\";\r\n          allBlankSpan[i].style.borderRadius = \"5px\";\r\n        }\r\n      }\r\n    }\r\n\r\n    this.props.isDragAndDropTrue(true);\r\n  };\r\n\r\n  mouseLeaveFeature = (e) => {\r\n    const cardWrapLabel = document.querySelectorAll(\".card_wrapLabel\");\r\n    cardWrapLabel.forEach((ele) => {\r\n      ele.style.width = \"100%\";\r\n    });\r\n\r\n    e.target.style.cursor = \"pointer\";\r\n    e.target.style.position = \"static\";\r\n    e.target.style.transform = \"rotate(0deg)\";\r\n    e.target.style.zIndex = 0;\r\n    this.props.clearAllBlankSpan();\r\n    this.props.isDragAndDropTrue(false);\r\n    this.setState({\r\n      selected: false,\r\n    });\r\n  };\r\n\r\n  labelFontSizeToggle = (hideFontSizeLabel) => {\r\n    this.props.setHideFontSizeLabel(!hideFontSizeLabel);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      task,\r\n      inputTitle,\r\n      listId,\r\n      taskDetailsFunction,\r\n      visibilityOptionFunction,\r\n      hideFontSizeLabel,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div\r\n        id={task.id}\r\n        className=\"card\"\r\n        onDoubleClick={(e) =>\r\n          taskDetailsFunction(task.taskName, inputTitle, listId, task.id)\r\n        }\r\n        onMouseDown={(e) => this.mouseDownFeature(e)}\r\n        onMouseUp={(e) => this.mouseUpFeature(e)}\r\n        onMouseMove={(e) => this.mouseMoveFeature(e)}\r\n        onMouseLeave={(e) => this.mouseLeaveFeature(e)}\r\n      >\r\n        <div\r\n          className=\"card_wrapLabel\"\r\n          onClick={() => this.labelFontSizeToggle(hideFontSizeLabel)}\r\n          style={{ fontSize: hideFontSizeLabel ? 0 : \"12px\" }}\r\n        >\r\n          {task.badges.map((ele) => (\r\n            <div\r\n              key={ele.color}\r\n              id={ele.labelId}\r\n              className=\"labelElement\"\r\n              style={{ backgroundColor: ele.color }}\r\n            >\r\n              {ele.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {task.taskName}\r\n        <span\r\n          className=\"fas fa-highlighter\"\r\n          onClick={(e) =>\r\n            visibilityOptionFunction(e, true, task, listId, task.id)\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledAddButton = styled.button`\r\n  background-color: #5aac44;\r\n  border-radius: 5px;\r\n  color: white;\r\n  padding: 8px 20px;\r\n  margin: 5px 0px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #67ba50;\r\n  }\r\n`;\r\n\r\nconst StyledSpanX = styled.span`\r\n  font-size: 2.3rem;\r\n  vertical-align: middle;\r\n  color: #666;\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction ListButtons({\r\n  showAddField,\r\n  id,\r\n  textAreaValue,\r\n  addNewCardFeature,\r\n  swapAddFieldFeature,\r\n}) {\r\n  return (\r\n    <>\r\n      {showAddField ? (\r\n        <>\r\n          <StyledAddButton onClick={() => addNewCardFeature(id, textAreaValue)}>\r\n            Add Card\r\n          </StyledAddButton>\r\n          <StyledSpanX\r\n            className=\"fas fa-times\"\r\n            onClick={() => swapAddFieldFeature(\"SpanX\")}\r\n          />\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListButtons;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledInput = styled.input`\r\n  width: 220px;\r\n  background-color: #ebecf0;\r\n  border-radius: 1px;\r\n  padding: 5px 4px;\r\n  font-size: 1.4rem;\r\n  font-weight: 600;\r\n  color: #172b4d;\r\n\r\n  &:focus {\r\n    background-color: white;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledInputCover = styled.div`\r\n  display: inline-block;\r\n  width: 220px;\r\n  background-color: #ebecf0;\r\n  border-radius: 1px;\r\n  padding: 5px 4px;\r\n  font-size: 1.4rem;\r\n  font-weight: 600;\r\n  color: #172b4d;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nfunction ListInput({ selectedList, id, inputTitle, listOption, setListTitle }) {\r\n  return (\r\n    <>\r\n      {selectedList ? (\r\n        <StyledInputCover\r\n          onChange={(e) => setListTitle(e, id)}\r\n          className=\"input\"\r\n        >\r\n          {inputTitle}\r\n        </StyledInputCover>\r\n      ) : (\r\n        <StyledInput\r\n          value={inputTitle}\r\n          onChange={(e) => setListTitle(e, id)}\r\n          className=\"input\"\r\n        />\r\n      )}\r\n      <span className=\"fas fa-ellipsis-h\" onClick={() => listOption(id)} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListInput;\r\n","import React from \"react\";\r\nimport Card from \"../../components/Card/Card\";\r\nimport ListButtons from \"./ListButtons/ListButtons\";\r\nimport ListInput from \"./ListInput/ListInput\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 100%;\r\n  height: ${(props) => (props.showStyle ? \"60px\" : \"31px\")};\r\n  background-color: ${(props) => (props.showStyle ? \"#fff\" : \"#ebecf0\")};\r\n  border-radius: 5px;\r\n  padding: 7.5px;\r\n  color: #779;\r\n  resize: none;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  box-shadow: ${(props) =>\r\n    props.showStyle ? \"0px 0.5px 0px 0.5px #aaa\" : \"none\"};\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.showStyle ? null : \"#dddfe5\")};\r\n  }\r\n`;\r\n\r\nfunction ListView({\r\n  mouseDownFeature,\r\n  mouseMoveFeature,\r\n  mouseUpFeature,\r\n  mouseLeaveFeature,\r\n  selectedList,\r\n  listOption,\r\n  wholeList,\r\n  id,\r\n  tasks,\r\n  scrollPosition,\r\n  isDragAndDropTrue,\r\n  visibilityOptionFunction,\r\n  taskDetailsFunction,\r\n  inputTitle,\r\n  clearAllBlankSpan,\r\n  showAddField,\r\n  textAreaValue,\r\n  setTextAreaValue,\r\n  swapAddFieldFeature,\r\n  setListTitle,\r\n  addNewCardFeature,\r\n  deleteCardFeatureByMove,\r\n  hideFontSizeLabel,\r\n  setHideFontSizeLabel,\r\n}) {\r\n  return (\r\n    <div\r\n      className=\"lists\"\r\n      onMouseDown={(e) => mouseDownFeature(e)}\r\n      onMouseMove={(e) => mouseMoveFeature(e)}\r\n      onMouseUp={(e) => mouseUpFeature(e)}\r\n      onMouseLeave={(e) => mouseLeaveFeature(e)}\r\n    >\r\n      <ListInput\r\n        selectedList={selectedList}\r\n        id={id}\r\n        inputTitle={inputTitle}\r\n        listOption={listOption}\r\n        setListTitle={setListTitle}\r\n      />\r\n\r\n      {tasks.map((task) => (\r\n        <Card\r\n          wholeList={wholeList}\r\n          key={task.id}\r\n          task={task}\r\n          listId={id}\r\n          addNewCardFeature={addNewCardFeature}\r\n          deleteCardFeatureByMove={deleteCardFeatureByMove}\r\n          scrollPosition={scrollPosition}\r\n          isDragAndDropTrue={isDragAndDropTrue}\r\n          visibilityOptionFunction={visibilityOptionFunction}\r\n          taskDetailsFunction={taskDetailsFunction}\r\n          inputTitle={inputTitle}\r\n          clearAllBlankSpan={clearAllBlankSpan}\r\n          hideFontSizeLabel={hideFontSizeLabel}\r\n          setHideFontSizeLabel={setHideFontSizeLabel}\r\n        />\r\n      ))}\r\n      <div className=\"blank\" />\r\n      <StyledTextArea\r\n        value={showAddField ? textAreaValue : \"Add Another Card\"}\r\n        onChange={(e) => setTextAreaValue(e)}\r\n        onClick={() => swapAddFieldFeature(\"textArea\")}\r\n        showStyle={showAddField}\r\n      />\r\n      <ListButtons\r\n        showAddField={showAddField}\r\n        id={id}\r\n        textAreaValue={textAreaValue}\r\n        addNewCardFeature={addNewCardFeature}\r\n        swapAddFieldFeature={swapAddFieldFeature}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default ListView;\r\n","import React, { Component } from \"react\";\r\nimport ListView from \"../../components/List/ListView\";\r\n\r\nclass List extends Component {\r\n  state = {\r\n    inputTitle: \"\",\r\n    showAddField: false,\r\n    textAreaValue: \"\",\r\n    selectedList: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"click\", this.hideAll);\r\n    document.addEventListener(\"keypress\", (e) =>\r\n      this.addNewCardFeatureByKey(e, this.props.id, this.state.textAreaValue)\r\n    );\r\n    const main = document.querySelector(\".main\");\r\n    const mainWidth = main.offsetWidth;\r\n    main.scroll({\r\n      left: mainWidth + 285 * (this.props.wholeList.length + 1),\r\n      behavior: \"smooth\",\r\n    });\r\n\r\n    this.setState({\r\n      inputTitle: this.props.title,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"click\", this.hideAll);\r\n    document.removeEventListener(\"keypress\", (e) =>\r\n      this.addNewCardFeatureByKey(e, this.props.id, this.state.textAreaValue)\r\n    );\r\n  }\r\n\r\n  hideAll = (e) => {\r\n    const searchingClass = e.target.className;\r\n    if (\r\n      searchingClass.includes(\"main\") ||\r\n      searchingClass.includes(\"input\") ||\r\n      searchingClass.includes(\"nav\") ||\r\n      searchingClass.includes(\"wrapList\") ||\r\n      searchingClass.includes(\"singleListWrap\")\r\n    ) {\r\n      this.setState({\r\n        showAddField: false,\r\n      });\r\n      this.props.showListHandle(false);\r\n      this.props.setListInput(\"\");\r\n    }\r\n  };\r\n\r\n  setListTitle = (e, listId) => {\r\n    this.setState({\r\n      inputTitle: e.target.value,\r\n    });\r\n    this.props.updateListTitle(e.target.value, listId);\r\n  };\r\n\r\n  swapAddFieldFeature = (buttonId) => {\r\n    if (buttonId === \"textArea\") {\r\n      this.setState({\r\n        showAddField: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showAddField: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  setTextAreaValue = (e) => {\r\n    this.setState({\r\n      textAreaValue: e.target.value,\r\n    });\r\n  };\r\n\r\n  addNewCardFeature = (listId, textAreaValue, taskId) => {\r\n    this.props.addNewCard(listId, textAreaValue, taskId);\r\n    this.setState({\r\n      showAddField: false,\r\n      textAreaValue: \"\",\r\n    });\r\n  };\r\n\r\n  addNewCardFeatureByKey = (e, listId, textAreaValue, taskId) => {\r\n    if (e.which === 13 && this.state.showAddField) {\r\n      e.preventDefault();\r\n      this.props.addNewCard(listId, textAreaValue, taskId);\r\n      this.setState({\r\n        textAreaValue: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteCardFeatureByMove = (listId, taskId) => {\r\n    this.props.deleteCard(listId, taskId);\r\n    this.setState({\r\n      textAreaValue: \"\",\r\n    });\r\n  };\r\n\r\n  mouseDownFeature = (e) => {\r\n    if (e.target.classList[0] !== \"lists\") return;\r\n    this.setState({\r\n      selectedList: true,\r\n    });\r\n    e.target.style.zIndex = 999;\r\n    e.target.style.cursor = \"grabbing\";\r\n    e.target.style.boxShadow = \"0px 0px 20px 0.5px rgba(0,0,0,0.1\";\r\n  };\r\n\r\n  mouseMoveFeature = (e) => {\r\n    const scrollHeighFromMain = Math.floor(this.props.scrollPosition);\r\n    if (this.state.selectedList && e.target.classList[0] === \"lists\") {\r\n      e.target.style.left = `${e.clientX - 135}px`;\r\n      e.target.style.top = `${e.clientY - 45}px`;\r\n      e.target.style.position = \"fixed\";\r\n      e.target.style.transform = \"rotate(5deg)\";\r\n\r\n      const allBlankSpan = document.querySelectorAll(\".frontBlankList\");\r\n      allBlankSpan.forEach((all) => {\r\n        all.style.display = \"none\";\r\n      });\r\n\r\n      for (let i = 1; i < 10; i++) {\r\n        if (e.pageX < 285 - scrollHeighFromMain) {\r\n          allBlankSpan[0].style.width = \"275px\";\r\n          allBlankSpan[0].style.height = \"10px\";\r\n          allBlankSpan[0].style.backgroundColor = \"rgba(0,0,0,0.15)\";\r\n          allBlankSpan[0].style.marginRight = \"10px\";\r\n          allBlankSpan[0].style.borderRadius = \"4px\";\r\n          allBlankSpan[0].style.display = \"initial\";\r\n          allBlankSpan[0].style.position = \"absolute\";\r\n          allBlankSpan[0].style.top = \"-17.5px\";\r\n        } else if (\r\n          e.pageX > 285 * i - scrollHeighFromMain &&\r\n          e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n          this.props.wholeList.length >= i + 1\r\n        ) {\r\n          allBlankSpan[i].style.width = \"275px\";\r\n          allBlankSpan[i].style.height = \"10px\";\r\n          allBlankSpan[i].style.backgroundColor = \"rgba(0,0,0,0.15)\";\r\n          allBlankSpan[i].style.marginRight = \"10px\";\r\n          allBlankSpan[i].style.borderRadius = \"4px\";\r\n          allBlankSpan[i].style.display = \"initial\";\r\n          allBlankSpan[i].style.position = \"absolute\";\r\n          allBlankSpan[i].style.top = \"-17.5px\";\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  mouseUpFeature = (e) => {\r\n    if (e.target.classList[0] !== \"lists\") return;\r\n    e.target.style.position = \"static\";\r\n    e.target.style.cursor = \"pointer\";\r\n    e.target.style.zIndex = null;\r\n    e.target.style.boxShadow = null;\r\n    e.target.style.transform = null;\r\n\r\n    const { scrollPosition, wholeList } = this.props;\r\n    const scrollHeighFromMain = Math.floor(scrollPosition);\r\n\r\n    const allBlankSpan = document.querySelectorAll(\".frontBlankList\");\r\n    allBlankSpan.forEach((all) => {\r\n      all.style.display = \"none\";\r\n    });\r\n\r\n    const draggedListIndex = this.props.wholeList.findIndex(\r\n      (list) => list.id === this.props.id\r\n    );\r\n\r\n    if (e.pageX < 285 - scrollHeighFromMain) {\r\n      this.props.moveListToAnotherPlace(draggedListIndex, 0);\r\n    }\r\n\r\n    for (let i = 1; i < 10; i++) {\r\n      if (\r\n        e.pageX > 285 * i - scrollHeighFromMain &&\r\n        e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n        wholeList.length >= i + 1\r\n      ) {\r\n        this.props.moveListToAnotherPlace(draggedListIndex, i);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      selectedList: false,\r\n    });\r\n  };\r\n\r\n  mouseLeaveFeature = () => {\r\n    const list = document.querySelectorAll(\".lists\");\r\n    list.forEach((all) => {\r\n      all.style.position = \"static\";\r\n      all.style.cursor = \"pointer\";\r\n      all.style.boxShadow = null;\r\n      all.style.transform = null;\r\n      all.style.zIndex = null;\r\n    });\r\n\r\n    const allBlankSpan = document.querySelectorAll(\".frontBlankList\");\r\n    allBlankSpan.forEach((all) => {\r\n      all.style.display = \"none\";\r\n    });\r\n\r\n    this.setState({\r\n      selectedList: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      listOption,\r\n      id,\r\n      tasks,\r\n      wholeList,\r\n      scrollPosition,\r\n      isDragAndDropTrue,\r\n      visibilityOptionFunction,\r\n      taskDetailsFunction,\r\n      clearAllBlankSpan,\r\n      hideFontSizeLabel,\r\n      setHideFontSizeLabel,\r\n    } = this.props;\r\n    const {\r\n      showAddField,\r\n      textAreaValue,\r\n      inputTitle,\r\n      selectedList,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"singleListWrap\">\r\n        <div className=\"frontBlankList\"></div>\r\n        <ListView\r\n          selectedList={selectedList}\r\n          listOption={listOption}\r\n          wholeList={wholeList}\r\n          id={id}\r\n          tasks={tasks}\r\n          scrollPosition={scrollPosition}\r\n          isDragAndDropTrue={isDragAndDropTrue}\r\n          visibilityOptionFunction={visibilityOptionFunction}\r\n          taskDetailsFunction={taskDetailsFunction}\r\n          inputTitle={inputTitle}\r\n          clearAllBlankSpan={clearAllBlankSpan}\r\n          showAddField={showAddField}\r\n          textAreaValue={textAreaValue}\r\n          mouseDownFeature={this.mouseDownFeature}\r\n          mouseMoveFeature={this.mouseMoveFeature}\r\n          mouseUpFeature={this.mouseUpFeature}\r\n          mouseLeaveFeature={this.mouseLeaveFeature}\r\n          setTextAreaValue={this.setTextAreaValue}\r\n          swapAddFieldFeature={this.swapAddFieldFeature}\r\n          setListTitle={this.setListTitle}\r\n          addNewCardFeature={this.addNewCardFeature}\r\n          deleteCardFeatureByMove={this.deleteCardFeatureByMove}\r\n          hideFontSizeLabel={hideFontSizeLabel}\r\n          setHideFontSizeLabel={setHideFontSizeLabel}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport List from \"../../Containers/List/List\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMain = styled.main`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  width: auto;\r\n  min-height: calc(100vh - 40px);\r\n  background-color: #4bbf6b;\r\n  padding: 40px 6px 0px 6px;\r\n  overflow-x: scroll;\r\n`;\r\n\r\nconst StyledListInput = styled.input`\r\n  width: 265px;\r\n  background-color: #76ce8e;\r\n  border-radius: 4px;\r\n  padding: 12px 7.5px;\r\n  text-align: left;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  box-shadow: 0px 0px 1px 0px #888;\r\n  font-size: 15px;\r\n\r\n  &::placeholder {\r\n    color: white;\r\n  }\r\n\r\n  &:focus {\r\n    background-color: #fff !important;\r\n    ::placeholder {\r\n      color: black;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledWrapList = styled.div`\r\n  display: flex;\r\n  width: auto;\r\n  flex-direction: row;\r\n  height: auto;\r\n  background-color: transparent;\r\n  margin-bottom: 10px;\r\n  padding: 3px 5px;\r\n  border-radius: 5px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  align-self: flex-start;\r\n  width: 50%;\r\n  background-color: #5aac44;\r\n  border-radius: 5px;\r\n  color: white;\r\n  padding: 8px 20px;\r\n  margin-top: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #67ba50;\r\n  }\r\n`;\r\n\r\nconst StyledWrapAddListBtn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  align-self: flex-start;\r\n  width: 275px;\r\n  border-radius: 4px;\r\n  padding: 0px 5px 5px 5px;\r\n  padding-top: ${(props) => (props.bgc ? \"5px\" : \"0px\")};\r\n  background-color: ${(props) => (props.bgc ? \"#ebecf0\" : \"transparent\")};\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nfunction CoreFieldView({\r\n  scroll,\r\n  mousePositionX,\r\n  wholeList,\r\n  listOption,\r\n  addNewCard,\r\n  deleteCard,\r\n  showListHandle,\r\n  setListInput,\r\n  scrollPosition,\r\n  isDragAndDropTrue,\r\n  visibilityOptionFunction,\r\n  taskDetailsFunction,\r\n  updateListTitle,\r\n  moveListToAnotherPlace,\r\n  clearAllBlankSpan,\r\n  showList,\r\n  showAddListHandle,\r\n  listInputHandle,\r\n  listInputValue,\r\n  addNewList,\r\n  addNewListByKey,\r\n  elementHoverEnter,\r\n  elementHoverLeave,\r\n  hideFontSizeLabel,\r\n  setHideFontSizeLabel,\r\n}) {\r\n  return (\r\n    <StyledMain\r\n      className=\"main\"\r\n      onScroll={(e) => scroll(e)}\r\n      onMouseMove={(e) => mousePositionX(e)}\r\n    >\r\n      <StyledWrapList className=\"wrapList\">\r\n        {wholeList.map((list) => (\r\n          <List\r\n            wholeList={wholeList}\r\n            key={list.id}\r\n            id={list.id}\r\n            title={list.title}\r\n            tasks={list.tasks}\r\n            listOption={listOption}\r\n            addNewCard={addNewCard}\r\n            deleteCard={deleteCard}\r\n            showListHandle={showListHandle}\r\n            setListInput={setListInput}\r\n            scrollPosition={scrollPosition}\r\n            isDragAndDropTrue={isDragAndDropTrue}\r\n            visibilityOptionFunction={visibilityOptionFunction}\r\n            taskDetailsFunction={taskDetailsFunction}\r\n            updateListTitle={updateListTitle}\r\n            moveListToAnotherPlace={moveListToAnotherPlace}\r\n            clearAllBlankSpan={clearAllBlankSpan}\r\n            hideFontSizeLabel={hideFontSizeLabel}\r\n            setHideFontSizeLabel={setHideFontSizeLabel}\r\n          />\r\n        ))}\r\n        <StyledWrapAddListBtn bgc={showList ? true : false}>\r\n          <StyledListInput\r\n            bgc={showList ? true : false}\r\n            placeholder=\"Add another list\"\r\n            onClick={showAddListHandle}\r\n            onChange={(e) => listInputHandle(e)}\r\n            className=\"list\"\r\n            value={listInputValue}\r\n            onKeyPress={(e) => addNewListByKey(e)}\r\n            onMouseEnter={(e) => elementHoverEnter(e)}\r\n            onMouseLeave={(e) => elementHoverLeave(e)}\r\n          />\r\n          {showList ? (\r\n            <StyledButton\r\n              onClick={() =>\r\n                addNewList(listInputValue, showListHandle, setListInput)\r\n              }\r\n            >\r\n              Add List\r\n            </StyledButton>\r\n          ) : null}\r\n        </StyledWrapAddListBtn>\r\n      </StyledWrapList>\r\n    </StyledMain>\r\n  );\r\n}\r\n\r\nexport default CoreFieldView;\r\n","import React, { useState } from \"react\";\r\nimport CoreFieldView from \"../../components/CoreField/CoreFieldView\";\r\n\r\nconst MainField = ({\r\n  wholeList,\r\n  listOption,\r\n  addNewCard,\r\n  deleteCard,\r\n  addNewList,\r\n  updateListTitle,\r\n  elementHoverEnter,\r\n  elementHoverLeave,\r\n  visibilityOptionFunction,\r\n  taskDetailsFunction,\r\n  moveListToAnotherPlace,\r\n  clearAllBlankSpan,\r\n  hideFontSizeLabel,\r\n  setHideFontSizeLabel,\r\n}) => {\r\n  const [showList, showListHandle] = useState(false);\r\n  const [scrollPosition, updatedScrollPosition] = useState(0);\r\n  const [isDragDropTrue, isDragDropTrueFeature] = useState(\"\");\r\n\r\n  const showAddListHandle = () => {\r\n    showListHandle(true);\r\n  };\r\n\r\n  const [listInputValue, setListInput] = useState(\"\");\r\n\r\n  const listInputHandle = (e) => {\r\n    setListInput(e.target.value);\r\n  };\r\n\r\n  const addNewListByKey = (e) => {\r\n    if (e.which === 13 && showList) {\r\n      addNewList(listInputValue, showListHandle, setListInput);\r\n      showListHandle(true);\r\n    }\r\n  };\r\n\r\n  const scroll = (e) => {\r\n    const scrollPosition = e.target.scrollLeft;\r\n    updatedScrollPosition(scrollPosition);\r\n  };\r\n\r\n  const mousePositionX = (e) => {\r\n    const main = document.querySelector(\".main\");\r\n    const mainWidth = main.offsetWidth;\r\n    const mousePositionX = e.clientX;\r\n    if (mousePositionX <= 75 && isDragDropTrue) {\r\n      main.scroll({\r\n        left: 0,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n\r\n    if (mousePositionX >= mainWidth - 75 && isDragDropTrue) {\r\n      main.scroll({\r\n        left: mainWidth + 285 * (wholeList.length + 1),\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const isDragAndDropTrue = (isTrue) => {\r\n    isDragDropTrueFeature(isTrue);\r\n  };\r\n\r\n  return (\r\n    <CoreFieldView\r\n      scroll={scroll}\r\n      mousePositionX={mousePositionX}\r\n      wholeList={wholeList}\r\n      listOption={listOption}\r\n      addNewCard={addNewCard}\r\n      deleteCard={deleteCard}\r\n      showListHandle={showListHandle}\r\n      setListInput={setListInput}\r\n      scrollPosition={scrollPosition}\r\n      isDragAndDropTrue={isDragAndDropTrue}\r\n      visibilityOptionFunction={visibilityOptionFunction}\r\n      taskDetailsFunction={taskDetailsFunction}\r\n      updateListTitle={updateListTitle}\r\n      moveListToAnotherPlace={moveListToAnotherPlace}\r\n      clearAllBlankSpan={clearAllBlankSpan}\r\n      showList={showList}\r\n      showAddListHandle={showAddListHandle}\r\n      listInputHandle={listInputHandle}\r\n      listInputValue={listInputValue}\r\n      addNewList={addNewList}\r\n      addNewListByKey={addNewListByKey}\r\n      elementHoverEnter={elementHoverEnter}\r\n      elementHoverLeave={elementHoverLeave}\r\n      hideFontSizeLabel={hideFontSizeLabel}\r\n      setHideFontSizeLabel={setHideFontSizeLabel}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MainField;\r\n","const size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n  desktop: \"2560px\",\r\n};\r\n\r\nexport const device = {\r\n  mobileS: `(min-width: ${size.mobileS})`,\r\n  mobileM: `(min-width: ${size.mobileM})`,\r\n  mobileL: `(min-width: ${size.mobileL})`,\r\n  tablet: `(min-width: ${size.tablet})`,\r\n  laptop: `(min-width: ${size.laptop})`,\r\n  laptopL: `(min-width: ${size.laptopL})`,\r\n  desktop: `(min-width: ${size.desktop})`,\r\n  desktopL: `(min-width: ${size.desktop})`,\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../Style/MediaQuery/mq\";\r\n\r\nconst StyledColorDiv = styled.div`\r\n  width: 75px;\r\n  height: 75px;\r\n  border-radius: 5px;\r\n  margin-right: 5px;\r\n  margin-left: 5px;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    opacity: 0.75;\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    width: 45%;\r\n    height: 85px;\r\n  }\r\n`;\r\n\r\nconst StyledThemeDivTitle = styled.h3`\r\n  width: 100%;\r\n  padding: 10px 0px;\r\n  text-align: center;\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst StyledThemeDiv = styled.div`\r\n  position: fixed;\r\n  bottom: 17.5px;\r\n  right: 0;\r\n  width: 100%;\r\n  transform: ${(props) =>\r\n    props.showTheme ? \"translateX(0px)\" : \"translateX(100vw)\"};\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  background-color: #f4f5f7;\r\n  padding: 10px;\r\n  transition: 0.3s linear;\r\n  z-index: 999;\r\n\r\n  @media ${device.laptop} {\r\n    top: calc(0% + 40px);\r\n    right: 0;\r\n    width: 375px;\r\n    align-content: flex-start;\r\n  }\r\n`;\r\n\r\nfunction ThemeFieldView({ themeOption, changeColor, blockOfColors }) {\r\n  return (\r\n    <StyledThemeDiv showTheme={themeOption}>\r\n      <StyledThemeDivTitle>Colors</StyledThemeDivTitle>\r\n      {blockOfColors.map((block) => (\r\n        <StyledColorDiv\r\n          onClick={() =>\r\n            changeColor(\r\n              block.mainColor,\r\n              block.navColor,\r\n              block.listColor,\r\n              block.inputColor\r\n            )\r\n          }\r\n          style={{ backgroundColor: block.mainColor }}\r\n          key={block.mainColor}\r\n        />\r\n      ))}\r\n    </StyledThemeDiv>\r\n  );\r\n}\r\n\r\nexport default ThemeFieldView;\r\n","import React from \"react\";\r\nimport ThemeFieldView from \"../../components/ThemeField/ThemeFieldView\";\r\n\r\nfunction ThemeField({ themeOption, setWhichColor }) {\r\n  const changeColor = (mainColor, navColor, listColor, inputColor) => {\r\n    const main = document.querySelector(\".main\");\r\n    main.style.backgroundColor = mainColor;\r\n\r\n    const nav = document.querySelector(\".nav\");\r\n    nav.style.backgroundColor = navColor;\r\n\r\n    const lists = document.querySelectorAll(\".list\");\r\n    lists.forEach((list) => {\r\n      list.style.backgroundColor = listColor;\r\n    });\r\n\r\n    const inputs = document.querySelectorAll(\".item\");\r\n    inputs.forEach((input) => {\r\n      input.style.backgroundColor = inputColor;\r\n    });\r\n\r\n    setWhichColor([listColor]);\r\n  };\r\n\r\n  const blockOfColors = [\r\n    {\r\n      mainColor: \"#0079BF\",\r\n      navColor: \"#0067A3\",\r\n      listColor: \"#3D99CE\",\r\n      inputColor: \"#4D95BE\",\r\n    },\r\n    {\r\n      mainColor: \"#D29034\",\r\n      navColor: \"#B37B2C\",\r\n      listColor: \"#DDAB65\",\r\n      inputColor: \"#C9A26C\",\r\n    },\r\n    {\r\n      mainColor: \"#519839\",\r\n      navColor: \"#458131\",\r\n      listColor: \"#7BB168\",\r\n      inputColor: \"#7DA76F\",\r\n    },\r\n    {\r\n      mainColor: \"#B04632\",\r\n      navColor: \"#963C2B\",\r\n      listColor: \"#C37263\",\r\n      inputColor: \"#B5766B\",\r\n    },\r\n    {\r\n      mainColor: \"#89609E\",\r\n      navColor: \"#755286\",\r\n      listColor: \"#A586B5\",\r\n      inputColor: \"#9E86AB\",\r\n    },\r\n    {\r\n      mainColor: \"#CD5A91\",\r\n      navColor: \"#AE4D7B\",\r\n      listColor: \"#D981AB\",\r\n      inputColor: \"#C682A3\",\r\n    },\r\n    {\r\n      mainColor: \"#4BBF6B\",\r\n      navColor: \"#40A35B\",\r\n      listColor: \"#76CE8E\",\r\n      inputColor: \"#79BE8C\",\r\n    },\r\n    {\r\n      mainColor: \"#00AECC\",\r\n      navColor: \"#0094AE\",\r\n      listColor: \"#3DC1D8\",\r\n      inputColor: \"#4DB4C6\",\r\n    },\r\n    {\r\n      mainColor: \"#838C91\",\r\n      navColor: \"#6F777B\",\r\n      listColor: \"#A1A8AB\",\r\n      inputColor: \"#9BA0A3\",\r\n    },\r\n  ];\r\n  return (\r\n    <ThemeFieldView\r\n      changeColor={changeColor}\r\n      themeOption={themeOption}\r\n      blockOfColors={blockOfColors}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ThemeField;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledListBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 150px;\r\n  height: 250px;\r\n`;\r\n\r\nconst StyledList = styled.li`\r\n  list-style: none;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  border-radius: 3px;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 5px;\r\n  padding: 7px 10px;\r\n  font-size: 14px;\r\n  color: white;\r\n  transition: 0.1s linear;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.75);\r\n    transform: translateX(7.5px);\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: 13px;\r\n`;\r\n\r\nfunction OptionCoverListView({\r\n  deleteCard,\r\n  listId,\r\n  handleLabelsVisibility,\r\n  addPriorityForCards,\r\n  optionCoverData,\r\n}) {\r\n  return (\r\n    <StyledListBlock className=\"cover_listBlock\">\r\n      <ul>\r\n        <StyledList onClick={() => handleLabelsVisibility(true)}>\r\n          <StyledIcon className=\"fas fa-tag\" />\r\n          Edit labels\r\n        </StyledList>\r\n        <StyledList>\r\n          <StyledIcon className=\"fas fa-long-arrow-alt-right\" />\r\n          Move\r\n        </StyledList>\r\n        <StyledList>\r\n          <StyledIcon className=\"far fa-clipboard\" />\r\n          Copy\r\n        </StyledList>\r\n        <StyledList>\r\n          <StyledIcon className=\"far fa-clock\" />\r\n          Date Change\r\n        </StyledList>\r\n        <StyledList\r\n          onClick={() =>\r\n            addPriorityForCards(\r\n              optionCoverData[0].clickedCard,\r\n              optionCoverData[0].clickedCardId\r\n            )\r\n          }\r\n        >\r\n          <StyledIcon className=\"fas fa-exclamation-circle\" />\r\n          Priority\r\n        </StyledList>\r\n        <StyledList\r\n          onClick={(e) =>\r\n            deleteCard(listId, optionCoverData[0].clickedCardId, \"byButton\")\r\n          }\r\n        >\r\n          <StyledIcon className=\"fas fa-archive\" />\r\n          Archive\r\n        </StyledList>\r\n      </ul>\r\n    </StyledListBlock>\r\n  );\r\n}\r\n\r\nexport default OptionCoverListView;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledBack = styled.span`\r\n  position: fixed;\r\n  left: 10px;\r\n  top: 16px;\r\n  margin-left: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledNameLabels = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: column;\r\n  top: ${(props) => (props.detailCover ? \"96px\" : \"0\")};\r\n  left: ${(props) => (props.detailCover ? \"390px\" : \"0\")};\r\n  width: 310px;\r\n  height: 350px;\r\n  transform: translate(270px);\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst StyledLabelTitle = styled.h2`\r\n  border-bottom: 1px solid #42516e;\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n  margin: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledLabelInput = styled.input`\r\n  width: 95%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 7.5px 5px;\r\n  margin: 15px auto;\r\n  margin-top: ${(props) => (props.marginTop ? \"5px\" : \"15px\")};\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledName = styled.h3`\r\n  margin-left: 7px;\r\n  margin-top: 7px;\r\n`;\r\n\r\nconst StyledWrapColors = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  margin-top: 7px;\r\n`;\r\n\r\nconst StyledColorSquar = styled.div`\r\n  width: 18%;\r\n  height: 40px;\r\n  border-radius: 4px;\r\n  margin-right: 2.5px;\r\n  margin-left: 2.5px;\r\n  margin-bottom: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.85;\r\n  }\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  position: fixed;\r\n  right: 16px;\r\n  top: 16px;\r\n  margin-left: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: #5aac44;\r\n  border-radius: 4px;\r\n  margin: 0 auto;\r\n  margin-top: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: #6abc54;\r\n  }\r\n`;\r\n\r\nfunction LabelsNameColors({\r\n  nameLabelVisibility,\r\n  filteredColors,\r\n  detailCover,\r\n  nameLabelInput,\r\n  nameLabelInputValue,\r\n  choosedSquar,\r\n  saveNameLabel,\r\n  currentSquarEdit,\r\n}) {\r\n  return (\r\n    <StyledNameLabels className=\"label\" detailCover={detailCover}>\r\n      <StyledLabelTitle className=\"label\">\r\n        Change Label{\" \"}\r\n        <StyledX\r\n          className=\"fas fa-times\"\r\n          onClick={(e) => nameLabelVisibility(e, false, null)}\r\n        />\r\n        <StyledBack\r\n          className=\"fas fa-angle-left label\"\r\n          onClick={(e) => nameLabelVisibility(e, false, null, \"back\")}\r\n        />\r\n      </StyledLabelTitle>\r\n      <StyledName>Name</StyledName>\r\n      <StyledLabelInput\r\n        className=\"label\"\r\n        marginTop\r\n        onChange={(e) => nameLabelInput(e)}\r\n        value={nameLabelInputValue}\r\n      />\r\n      <StyledName>Colors</StyledName>\r\n      <StyledWrapColors>\r\n        {filteredColors.map((color) => (\r\n          <StyledColorSquar\r\n            style={{\r\n              backgroundColor: `${color.color}`,\r\n              border:\r\n                currentSquarEdit === color.color ? \"1.5px solid black\" : null,\r\n            }}\r\n            className=\"label_colorSquar\"\r\n            key={color.color}\r\n            id={color.color}\r\n            onClick={(e) => choosedSquar(e, color.color)}\r\n          />\r\n        ))}\r\n      </StyledWrapColors>\r\n      <StyledButton onClick={() => saveNameLabel()}>SAVE</StyledButton>\r\n    </StyledNameLabels>\r\n  );\r\n}\r\n\r\nexport default LabelsNameColors;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLabels = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: column;\r\n  top: ${(props) => (props.detailCover ? \"96px\" : \"0\")};\r\n  left: ${(props) => (props.detailCover ? \"390px\" : \"0\")};\r\n  width: 310px;\r\n  height: 605px;\r\n  transform: translate(270px);\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst StyledLabelWrapEle = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledLabelElement = styled.div`\r\n  position: relative;\r\n  width: 80%;\r\n  height: 35px;\r\n  border-radius: 5px;\r\n  margin: 0 10px;\r\n  margin-bottom: 4px;\r\n  list-style: none;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    border-left: 10px solid rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  align-self: center;\r\n  border-radius: 3px;\r\n  margin: 0 auto;\r\n  margin-bottom: 4px;\r\n  padding: 10.5px;\r\n  font-size: 15px;\r\n  color: #aaa;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #eee;\r\n  }\r\n`;\r\n\r\nconst StyledLabelTitle = styled.h2`\r\n  border-bottom: 1px solid #42516e;\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n  margin: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledLabelInput = styled.input`\r\n  width: 95%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 7.5px 5px;\r\n  margin: 15px auto;\r\n  margin-top: ${(props) => (props.marginTop ? \"5px\" : \"15px\")};\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledBtn = styled.div`\r\n  width: 95%;\r\n  background-color: #f5f6f8;\r\n  text-align: center;\r\n  padding: 8px 5px;\r\n  margin: 0 auto;\r\n  margin-top: 15px;\r\n  font-size: 13px;\r\n  color: #42516e;\r\n  box-shadow: 0px 0px 1px 1.5px #ebecef;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #e5e6e8;\r\n  }\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  position: fixed;\r\n  right: 16px;\r\n  top: 16px;\r\n  margin-left: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledIconCheck = styled.div`\r\n  display: none;\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 17.5px;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 10px;\r\n  color: #fff;\r\n`;\r\n\r\nconst StyledNameSox = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  color: white;\r\n  font-weight: 600;\r\n  font-size: 13px;\r\n`;\r\nfunction LabelsChooseColors({\r\n  detailCover,\r\n  handleLabelsVisibility,\r\n  filteredColors,\r\n  nameLabelVisibility,\r\n  toggleLabelColorToCard,\r\n  taskId,\r\n  generateCheckIcon,\r\n  searchLabelColor,\r\n  searchInputLabel,\r\n}) {\r\n  useEffect(() => {\r\n    generateCheckIcon();\r\n  });\r\n\r\n  return (\r\n    <StyledLabels className=\"label\" detailCover={detailCover}>\r\n      <StyledLabelTitle className=\"label\">\r\n        Labels{\" \"}\r\n        <StyledX\r\n          className=\"fas fa-times\"\r\n          onClick={() => handleLabelsVisibility(false)}\r\n        />\r\n      </StyledLabelTitle>\r\n      <StyledLabelInput\r\n        placeholder=\"Search Labels...\"\r\n        className=\"label\"\r\n        onChange={(e) => searchLabelColor(e)}\r\n        value={searchInputLabel}\r\n      />\r\n      {filteredColors.map((color) => (\r\n        <StyledLabelWrapEle key={color.color} className=\"label\">\r\n          <StyledLabelElement\r\n            onClick={() => toggleLabelColorToCard(color.color, taskId)}\r\n            style={{ backgroundColor: `${color.color}` }}\r\n            className=\"label\"\r\n            id={color.color}\r\n          >\r\n            <StyledNameSox>{color.value}</StyledNameSox>\r\n            <StyledIconCheck\r\n              className=\"fas fa-check\"\r\n              id={`${color.color}Check`}\r\n            />\r\n          </StyledLabelElement>{\" \"}\r\n          <StyledIcon\r\n            className=\"fas fa-pen label\"\r\n            onClick={(e) => nameLabelVisibility(e, true, color.color, \"edit\")}\r\n          />\r\n        </StyledLabelWrapEle>\r\n      ))}\r\n      <StyledBtn className=\"label\">Create Label</StyledBtn>\r\n    </StyledLabels>\r\n  );\r\n}\r\n\r\nexport default LabelsChooseColors;\r\n","import React from \"react\";\r\nimport LabelsNameColors from \"./LabelView/LabelsNameColors\";\r\nimport LabelsChooseColors from \"./LabelView/LabelsChooseColors\";\r\n\r\nfunction LabelsView({\r\n  handleLabelsVisibility,\r\n  detailCover,\r\n  nameLabelVisibility,\r\n  labelVisibility,\r\n  toggleLabelColorToCard,\r\n  taskId,\r\n  generateCheckIcon,\r\n  searchLabelColor,\r\n  searchInputLabel,\r\n  filteredColors,\r\n  nameLabelInput,\r\n  nameLabelInputValue,\r\n  choosedSquar,\r\n  saveNameLabel,\r\n  currentSquarEdit,\r\n}) {\r\n  return (\r\n    <>\r\n      {labelVisibility ? (\r\n        <LabelsNameColors\r\n          nameLabelVisibility={nameLabelVisibility}\r\n          filteredColors={filteredColors}\r\n          detailCover={detailCover}\r\n          nameLabelInput={nameLabelInput}\r\n          nameLabelInputValue={nameLabelInputValue}\r\n          choosedSquar={choosedSquar}\r\n          saveNameLabel={saveNameLabel}\r\n          currentSquarEdit={currentSquarEdit}\r\n        />\r\n      ) : (\r\n        <LabelsChooseColors\r\n          detailCover={detailCover}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          filteredColors={filteredColors}\r\n          nameLabelVisibility={nameLabelVisibility}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          taskId={taskId}\r\n          generateCheckIcon={generateCheckIcon}\r\n          searchLabelColor={searchLabelColor}\r\n          searchInputLabel={searchInputLabel}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LabelsView;\r\n","import React, { Component } from \"react\";\r\nimport LabelsView from \"../../components/Labels/LabelsView\";\r\n\r\nclass Labels extends Component {\r\n  state = {\r\n    labelVisibility: false,\r\n    searchInputLabel: \"\",\r\n    nameLabelInputValue: \"\",\r\n    currentMatchedColors: \"\",\r\n    currentSquarEdit: \"\",\r\n  };\r\n\r\n  nameLabelVisibility = (e, toggle, colorId, from) => {\r\n    if (from === \"back\") {\r\n      this.setState({\r\n        labelVisibility: toggle,\r\n      });\r\n      return;\r\n    }\r\n    if (colorId === null) {\r\n      this.setState({\r\n        labelVisibility: toggle,\r\n      });\r\n      this.props.handleLabelsVisibility(false);\r\n      return;\r\n    }\r\n    if (from === \"edit\") {\r\n      const isAnyTextAlready = e.target.parentNode.textContent;\r\n      this.setState({\r\n        labelVisibility: toggle,\r\n        currentSquarEdit: colorId,\r\n        currentMatchedColors: colorId,\r\n        nameLabelInputValue: isAnyTextAlready,\r\n      });\r\n    }\r\n  };\r\n\r\n  generateCheckIcon = () => {\r\n    const matchedBadges = this.props.listOfAllBadges.filter(\r\n      (ele) => ele.id === this.props.taskId\r\n    );\r\n    if (matchedBadges.length !== 0) {\r\n      matchedBadges.forEach((element) => {\r\n        const currentCheckIcon = document.getElementById(\r\n          `${element.color}Check`\r\n        );\r\n        if (currentCheckIcon) {\r\n          currentCheckIcon.style.display = \"block\";\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  searchLabelColor = (e) => {\r\n    this.setState({\r\n      searchInputLabel: e.target.value.substr(0, 17),\r\n    });\r\n  };\r\n\r\n  nameLabelInput = (e) => {\r\n    this.setState({\r\n      nameLabelInputValue: e.target.value.substr(0, 17),\r\n    });\r\n  };\r\n\r\n  choosedSquar = (e, colorId) => {\r\n    const allSquars = document.querySelectorAll(\".label_colorSquar\");\r\n    allSquars.forEach((ele) => {\r\n      ele.style.border = \"none\";\r\n    });\r\n    e.target.style.border = \"1.5px solid black\";\r\n\r\n    this.setState({\r\n      currentMatchedColors: colorId,\r\n    });\r\n  };\r\n\r\n  saveNameLabel = () => {\r\n    //Zmieniamy wartość name w badges ( renderuje sie nazwa w optionCover i detailCover lables)\r\n    const {\r\n      listOfAllBadges,\r\n      listOfAllTasksId,\r\n      labelColors,\r\n      setLabelColors,\r\n      handleLabelsVisibility,\r\n    } = this.props;\r\n\r\n    const { currentMatchedColors, nameLabelInputValue } = this.state;\r\n\r\n    if (currentMatchedColors.length === 0) return; // Return If color isn't choosed\r\n    const matchedBadges = listOfAllBadges.filter(\r\n      (ele) => ele.color === currentMatchedColors\r\n    );\r\n\r\n    matchedBadges.forEach((ele) => {\r\n      ele.name = nameLabelInputValue;\r\n    });\r\n\r\n    //Od razu pojawia się nazwa labeli w srodku labeli w CARD\r\n    listOfAllTasksId.forEach((ele) => {\r\n      const matchedLabelInCard = document.getElementById(\r\n        `${currentMatchedColors}${ele}`\r\n      );\r\n\r\n      if (matchedLabelInCard) {\r\n        matchedLabelInCard.textContent = nameLabelInputValue;\r\n      }\r\n    });\r\n\r\n    // zmieniamy odgórne labelColors by wszedzie wyswietlalo sie od razu i tak samo przy tworzeniu nowych\r\n    const index = labelColors.findIndex(\r\n      (ele) => ele.color === currentMatchedColors\r\n    );\r\n\r\n    const copyOfLabelColor = [...labelColors];\r\n    copyOfLabelColor.splice(index, 1, {\r\n      color: labelColors[index].color,\r\n      colorName: labelColors[index].colorName,\r\n      value: nameLabelInputValue,\r\n    });\r\n\r\n    //Update\r\n    setLabelColors(copyOfLabelColor);\r\n    this.nameLabelVisibility(false);\r\n    handleLabelsVisibility(false);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      handleLabelsVisibility,\r\n      detailCover,\r\n      addLabelColor,\r\n      optionCoverData,\r\n      toggleLabelColorToCard,\r\n      taskId,\r\n      labelColors,\r\n    } = this.props;\r\n\r\n    const {\r\n      searchInputLabel,\r\n      labelVisibility,\r\n      nameLabelInputValue,\r\n      currentSquarEdit,\r\n    } = this.state;\r\n\r\n    const copyOfColorsArray = [...labelColors];\r\n    const filteredColors = copyOfColorsArray.filter((ele) =>\r\n      ele.colorName.toUpperCase().includes(searchInputLabel.toUpperCase())\r\n    );\r\n    return (\r\n      <LabelsView\r\n        handleLabelsVisibility={handleLabelsVisibility}\r\n        detailCover={detailCover}\r\n        nameLabelVisibility={this.nameLabelVisibility}\r\n        labelVisibility={labelVisibility}\r\n        addLabelColor={addLabelColor}\r\n        optionCoverData={optionCoverData}\r\n        toggleLabelColorToCard={toggleLabelColorToCard}\r\n        taskId={taskId}\r\n        generateCheckIcon={this.generateCheckIcon}\r\n        searchLabelColor={this.searchLabelColor}\r\n        searchInputLabel={searchInputLabel}\r\n        filteredColors={filteredColors}\r\n        nameLabelInput={this.nameLabelInput}\r\n        nameLabelInputValue={nameLabelInputValue}\r\n        choosedSquar={this.choosedSquar}\r\n        saveNameLabel={this.saveNameLabel}\r\n        currentSquarEdit={currentSquarEdit}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Labels;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport OptionCoverListView from \"./OptionCoverListView/OptionCoverListView\";\r\nimport Labels from \"../../Containers/Labels/Labels\";\r\n\r\nconst StyledCover = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.65);\r\n  z-index: 0;\r\n`;\r\n\r\nconst StyledOptionBox = styled.div`\r\n  position: fixed;\r\n  transform: translate(0, -50%);\r\n  height: 400px;\r\n  width: 450px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  border-radius: 5px;\r\n  z-index: 999;\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  height: 100px;\r\n  width: 260px;\r\n  padding: 7.5px;\r\n  padding-top: 0px;\r\n  border-radius: 5px;\r\n  resize: none;\r\n`;\r\n\r\nconst StyledSaveButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: #5aac44;\r\n  border-radius: 4px;\r\n  margin-top: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: #6abc54;\r\n  }\r\n`;\r\n\r\nconst StyledWrapLabels = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 260px;\r\n  min-height: 10px;\r\n  padding: 5px 5px 0px 5px;\r\n  border-radius: 5px;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst StyledWrapTextAndLabels = styled.div`\r\n  width: 260px;\r\n  height: 110px;\r\n  align-self: flex-start;\r\n  border-radius: 5px;\r\n  margin-right: 10px;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst OptionCover = ({\r\n  optionCoverData,\r\n  taskTitleFeature,\r\n  taskTitle,\r\n  updateCard,\r\n  deleteCard,\r\n  handleLabelsVisibility,\r\n  labelsVisibility,\r\n  toggleLabelColorToCard,\r\n  listOfAllBadges,\r\n  matchedColorsToThisCard,\r\n  listOfAllTasksId,\r\n  labelColors,\r\n  setLabelColors,\r\n}) => {\r\n  return (\r\n    <StyledCover className=\"coverOption\">\r\n      <StyledOptionBox className=\"cover_box\">\r\n        <StyledWrapTextAndLabels>\r\n          <StyledWrapLabels className=\"coverOption_wrapLabel\">\r\n            {matchedColorsToThisCard.map((ele) => (\r\n              <div\r\n                key={ele.color}\r\n                id={`${ele.labelId}OptionCover`}\r\n                className={`labelElement`}\r\n                style={{ backgroundColor: ele.color }}\r\n              >\r\n                {ele.name}\r\n              </div>\r\n            ))}\r\n          </StyledWrapLabels>\r\n          <StyledTextArea\r\n            className=\"cover_textArea\"\r\n            onChange={(e) => taskTitleFeature(e)}\r\n            value={taskTitle}\r\n          />\r\n          <StyledSaveButton\r\n            className=\"cover_saveBtn\"\r\n            onClick={(e) =>\r\n              updateCard(\r\n                e,\r\n                taskTitle,\r\n                optionCoverData[0].listId,\r\n                optionCoverData[0].clickedCardId\r\n              )\r\n            }\r\n          >\r\n            Save\r\n          </StyledSaveButton>\r\n        </StyledWrapTextAndLabels>\r\n        <OptionCoverListView\r\n          deleteCard={deleteCard}\r\n          taskTitle={taskTitle}\r\n          listId={optionCoverData[0].listId}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          optionCoverData={optionCoverData}\r\n        />\r\n\r\n        {labelsVisibility ? (\r\n          <Labels\r\n            handleLabelsVisibility={handleLabelsVisibility}\r\n            optionCoverData={optionCoverData}\r\n            toggleLabelColorToCard={toggleLabelColorToCard}\r\n            taskId={optionCoverData[0].clickedCardId}\r\n            listOfAllBadges={listOfAllBadges}\r\n            listOfAllTasksId={listOfAllTasksId}\r\n            labelColors={labelColors}\r\n            setLabelColors={setLabelColors}\r\n          />\r\n        ) : null}\r\n      </StyledOptionBox>\r\n    </StyledCover>\r\n  );\r\n};\r\n\r\nexport default OptionCover;\r\n","import React, { Component } from \"react\";\r\nimport OptionCoverView from \"../../components/OptionCover/OptionCoverView\";\r\n\r\nclass OptionCover extends Component {\r\n  state = {\r\n    taskTitle: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setOptionCoverPostion(this.props.optionCoverData);\r\n    this.setState({\r\n      taskTitle: this.props.optionCoverData[0].taskTitle.taskName,\r\n    });\r\n  }\r\n\r\n  setOptionCoverPostion = (taskData) => {\r\n    const mainOffsetTop = document.querySelector(\".main\").offsetTop;\r\n    const coverBox = document.querySelector(\".cover_box\");\r\n    const coverBoxHeight = coverBox.offsetHeight;\r\n    const scrollPosition = Math.floor(\r\n      document.querySelector(\".main\").scrollLeft\r\n    );\r\n\r\n    //ListIndex, when list is moving to another place\r\n    const listIndex = taskData[0].wholeList.findIndex(\r\n      (element) => element.id === taskData[0].listId\r\n    );\r\n\r\n    const positionY =\r\n      mainOffsetTop + taskData[0].top - 8 + coverBoxHeight / 1.6;\r\n    const positionX = 285 * listIndex + 18.5 - scrollPosition;\r\n\r\n    //Top and Left BOX Position Calculate\r\n    coverBox.style.top = `${positionY}px`;\r\n    coverBox.style.left = `${positionX}px`;\r\n  };\r\n\r\n  taskTitleFeature = (e) => {\r\n    this.setState({ taskTitle: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      optionCoverData,\r\n      updateCard,\r\n      deleteCard,\r\n      handleLabelsVisibility,\r\n      labelsVisibility,\r\n      toggleLabelColorToCard,\r\n      listOfAllBadges,\r\n      listOfAllTasksId,\r\n      labelColors,\r\n      setLabelColors,\r\n    } = this.props;\r\n\r\n    const { taskTitle } = this.state;\r\n\r\n    const copyOfallBadges = [...listOfAllBadges];\r\n\r\n    const matchedColorsToThisCard = copyOfallBadges.filter(\r\n      (ele) => ele.id === optionCoverData[0].clickedCardId\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <OptionCoverView\r\n          optionCoverData={optionCoverData}\r\n          taskTitleFeature={this.taskTitleFeature}\r\n          taskTitle={taskTitle}\r\n          updateCard={updateCard}\r\n          deleteCard={deleteCard}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          labelsVisibility={labelsVisibility}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OptionCover;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTaskName = styled.input`\r\n  width: calc(100% - 50px);\r\n  background-color: #f4f5f7;\r\n  border-radius: 1px;\r\n  padding: 5px 4px;\r\n  font-size: 1.8rem;\r\n  font-weight: 600;\r\n  color: #172b4d;\r\n\r\n  &:focus {\r\n    background-color: white;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nfunction Detail_Input({\r\n  taskTitle,\r\n  taskTitleFeature,\r\n  updateCard,\r\n  idUpdatedList,\r\n  taskId,\r\n}) {\r\n  return (\r\n    <>\r\n      <StyledTaskName\r\n        className=\"input\"\r\n        value={taskTitle}\r\n        onChange={(e) => taskTitleFeature(e)}\r\n      />\r\n      <span\r\n        className=\"fas fa-times close\"\r\n        onClick={(e) => updateCard(e, taskTitle, idUpdatedList, taskId)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Detail_Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLightText = styled.h3`\r\n  margin-top: 7.5px;\r\n  font-weight: 400;\r\n  font-size: 1.4rem;\r\n  color: #172b4d;\r\n`;\r\n\r\nconst StyledStrongText = styled.strong`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledChangeListDetails = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-wrap: wrap;\r\n  position: fixed;\r\n  width: 300px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  box-shadow: 0px 0px 4px 0.5px #ccc;\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst StyledReplaceTitle = styled.h3`\r\n  width: 100%;\r\n  position: relative;\r\n  flex-grow: 1;\r\n  text-align: ${(props) => (props.alignCenter ? \"center\" : \"left\")};\r\n  font-size: 1.5rem;\r\n  border-bottom: ${(props) => (props.border ? \"1px solid #aaa\" : \"null\")};\r\n  padding-bottom: 6px;\r\n  color: #555;\r\n  font-weight: 400;\r\n  margin-bottom: ${(props) => (props.biggerMargin ? \"27.5px\" : \"5px\")};\r\n\r\n  & > .fa-times {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledSuggestList = styled.div`\r\n  width: 100%;\r\n  max-width: 275px;\r\n  word-break: break-all;\r\n  margin: 0 auto;\r\n  margin-bottom: 7px;\r\n  padding: 9px 7.5px;\r\n  font-size: 1.4rem;\r\n  background-color: #f5f6f8;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  color: black;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    background-color: #e6e8ed;\r\n  }\r\n`;\r\n\r\nfunction DetailSuggestedElement({\r\n  changeListInDetails,\r\n  taskTitleList,\r\n  taskTitle,\r\n  visibilityChangeListInDetails,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  taskId,\r\n}) {\r\n  return (\r\n    <StyledLightText className=\"suggested\">\r\n      On the list{\" \"}\r\n      <StyledStrongText\r\n        onClick={() => changeListInDetails()}\r\n        className=\"suggested\"\r\n      >\r\n        {taskTitleList}\r\n      </StyledStrongText>\r\n      {visibilityChangeListInDetails ? (\r\n        <StyledChangeListDetails className=\"replaceCard suggested\">\r\n          <StyledReplaceTitle\r\n            border\r\n            alignCenter\r\n            biggerMargin\r\n            className=\"suggested\"\r\n          >\r\n            Replace Card\r\n            <span\r\n              className=\"fas fa-times\"\r\n              onClick={() => changeListInDetails()}\r\n            ></span>\r\n          </StyledReplaceTitle>\r\n          <StyledReplaceTitle className=\"suggested\">\r\n            Suggested\r\n          </StyledReplaceTitle>\r\n          {wholeList.map((list) => (\r\n            <StyledSuggestList\r\n              className=\"suggested\"\r\n              onClick={(e) =>\r\n                moveCardToAnotherList(taskTitle, taskTitleList, taskId, list.id)\r\n              }\r\n              key={list.id}\r\n            >\r\n              {list.title}\r\n            </StyledSuggestList>\r\n          ))}\r\n        </StyledChangeListDetails>\r\n      ) : null}\r\n    </StyledLightText>\r\n  );\r\n}\r\n\r\nexport default DetailSuggestedElement;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../../Style/MediaQuery/mq\";\r\n\r\nconst StyledDetailNav = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 300px;\r\n  @media ${device.laptop} {\r\n    width: 200px;\r\n  }\r\n`;\r\n\r\nconst StyledDetailUl = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  @media ${device.laptop} {\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: 13px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledDetailList = styled.li`\r\n  width: ${(props) => (props.first ? \"100%\" : \"45%\")};\r\n  background-color: ${(props) => (props.first ? \"transparent\" : \"#eaecf0\")};\r\n  border-radius: ${(props) => (props.first ? \"null\" : \"3px\")};\r\n  padding: 7.5px;\r\n  margin-right: ${(props) => (props.first ? \"0px\" : \"10px\")};\r\n  margin-bottom: ${(props) => (props.first ? \"5px\" : \"10px\")};\r\n  list-style: none;\r\n  font-size: 14px;\r\n  color: #42516e;\r\n  cursor: ${(props) => (props.first ? \"initial\" : \"pointer\")};\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.first ? \"transparent\" : \"#dadce0\")};\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nfunction DetailCoverNav({\r\n  handleLabelsVisibility,\r\n  labelsVisibility,\r\n  deleteCard,\r\n  idUpdatedList,\r\n  taskId,\r\n}) {\r\n  return (\r\n    <StyledDetailNav>\r\n      <StyledDetailUl>\r\n        <StyledDetailList first> ADD TO CARD</StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={() => handleLabelsVisibility(!labelsVisibility)}\r\n          className=\"label\"\r\n        >\r\n          <StyledIcon className=\"fas fa-tag label\" />\r\n          Edit lables\r\n        </StyledDetailList>\r\n        <StyledDetailList>\r\n          <StyledIcon className=\"fas fa-list-alt\" />\r\n          Tasks list\r\n        </StyledDetailList>\r\n        <StyledDetailList>\r\n          <StyledIcon className=\"far fa-clock\" />\r\n          Term\r\n        </StyledDetailList>\r\n        <StyledDetailList>\r\n          <StyledIcon className=\"far fa-image\" />\r\n          Cover\r\n        </StyledDetailList>\r\n      </StyledDetailUl>\r\n      <StyledDetailUl>\r\n        <StyledDetailList first> ACTIONS</StyledDetailList>\r\n        <StyledDetailList>\r\n          <StyledIcon className=\"fas fa-long-arrow-alt-right\" />\r\n          Move\r\n        </StyledDetailList>\r\n        <StyledDetailList>\r\n          <StyledIcon className=\"far fa-clipboard\" />\r\n          Copy\r\n        </StyledDetailList>\r\n        <StyledDetailList>\r\n          <StyledIcon className=\"fas fa-exclamation-circle\" />\r\n          Priority\r\n        </StyledDetailList>\r\n        <StyledDetailList\r\n          className=\"delete\"\r\n          onClick={(e) => deleteCard(idUpdatedList, taskId, \"byButton\")}\r\n        >\r\n          <StyledIcon className=\"fas fa-archive\" />\r\n          Archive\r\n        </StyledDetailList>\r\n      </StyledDetailUl>\r\n    </StyledDetailNav>\r\n  );\r\n}\r\n\r\nexport default DetailCoverNav;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledDetailMarks = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst StyledDetailDescription = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  margin-top: 25px;\r\n`;\r\n\r\nconst StyledTitle = styled.h2`\r\n  width: 100%;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 90%;\r\n  background-color: #eaecf0;\r\n  margin: 10px auto;\r\n  padding: 7.5px 5px;\r\n  border-radius: 3px;\r\n  min-height: 50px;\r\n  resize: none;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n\r\n  &:focus {\r\n    min-height: 125px;\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: 17px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledLabelsWrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nfunction DetailCoverMarks({ matchedColorsToThisCard }) {\r\n  return (\r\n    <StyledDetailMarks>\r\n      <div>\r\n        <h2>Lables</h2>\r\n        <StyledLabelsWrap className=\"detailCover_labelsWrap\">\r\n          {matchedColorsToThisCard.map((ele) => (\r\n            <div\r\n              key={ele.color}\r\n              id={`${ele.labelId}DetailCover`}\r\n              className={`labelElement_DetailCover`}\r\n              style={{ backgroundColor: ele.color, margin: \"0px 5px 5px 0px\" }}\r\n            >\r\n              {ele.name}\r\n            </div>\r\n          ))}\r\n        </StyledLabelsWrap>\r\n      </div>\r\n      <StyledDetailDescription>\r\n        <StyledTitle>\r\n          <StyledIcon className=\"fas fa-stream\" />\r\n          Description\r\n        </StyledTitle>\r\n        <StyledTextArea\r\n          placeholder=\"Add more detail comment...\"\r\n          className=\"input\"\r\n        ></StyledTextArea>\r\n      </StyledDetailDescription>\r\n    </StyledDetailMarks>\r\n  );\r\n}\r\n\r\nexport default DetailCoverMarks;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../Style/MediaQuery/mq\";\r\nimport DetailCoverNav from \"./DetailCoverNav/DetailCoverNav\";\r\nimport DetailCoverMarks from \"./DetailCoverMarks/DetailCoverMarks\";\r\n\r\nconst StyledDetailToolsWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 600px;\r\n  margin-top: 10px;\r\n  @media ${device.laptop} {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nfunction DetailTools({\r\n  labelsVisibility,\r\n  handleLabelsVisibility,\r\n  deleteCard,\r\n  idUpdatedList,\r\n  taskId,\r\n  matchedColorsToThisCard,\r\n}) {\r\n  return (\r\n    <StyledDetailToolsWrap>\r\n      <DetailCoverMarks matchedColorsToThisCard={matchedColorsToThisCard} />\r\n      <DetailCoverNav\r\n        handleLabelsVisibility={handleLabelsVisibility}\r\n        labelsVisibility={labelsVisibility}\r\n        deleteCard={deleteCard}\r\n        idUpdatedList={idUpdatedList}\r\n        taskId={taskId}\r\n      />\r\n    </StyledDetailToolsWrap>\r\n  );\r\n}\r\n\r\nexport default DetailTools;\r\n","import React from \"react\";\r\nimport DetailInputElement from \"../DetailElements/DetailInputElement\";\r\nimport DetailSuggestedElement from \"../DetailElements/DetailSuggestedElement\";\r\nimport DetailTools from \"../DetailTools/DetailTools\";\r\nimport Labels from \"../../../Containers/Labels/Labels\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledCover = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nconst StyledDetail = styled.div`\r\n  position: fixed;\r\n  top: 41px;\r\n  left: 50%;\r\n  bottom: 17.5px;\r\n  transform: translate(-50%, 0%);\r\n  width: 100%;\r\n  max-width: 775px;\r\n  padding: 15px;\r\n  border-radius: 3px;\r\n  background-color: #f4f5f7;\r\n`;\r\n\r\nfunction DetailCoverView({\r\n  updateCard,\r\n  deleteCard,\r\n  idUpdatedList,\r\n  taskTitle,\r\n  taskTitleFeature,\r\n  changeListInDetails,\r\n  taskTitleList,\r\n  visibilityChangeListInDetails,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  labelsVisibility,\r\n  handleLabelsVisibility,\r\n  taskId,\r\n  toggleLabelColorToCard,\r\n  listOfAllBadges,\r\n  matchedColorsToThisCard,\r\n  labelColors,\r\n  setLabelColors,\r\n  listOfAllTasksId,\r\n}) {\r\n  return (\r\n    <StyledCover\r\n      className=\"cover\"\r\n      onClick={(e) => updateCard(e, taskTitle, idUpdatedList, taskId)}\r\n    >\r\n      <StyledDetail\r\n        className=\"detail\"\r\n        onClick={(e) => updateCard(e, taskTitle, idUpdatedList, taskId)}\r\n      >\r\n        <span className=\"fas fa-credit-card\"></span>\r\n        <DetailInputElement\r\n          taskTitle={taskTitle}\r\n          taskTitleFeature={taskTitleFeature}\r\n          updateCard={updateCard}\r\n          idUpdatedList={idUpdatedList}\r\n          taskId={taskId}\r\n        />\r\n        <DetailSuggestedElement\r\n          changeListInDetails={changeListInDetails}\r\n          taskTitleList={taskTitleList}\r\n          taskTitle={taskTitle}\r\n          visibilityChangeListInDetails={visibilityChangeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          taskId={taskId}\r\n        />\r\n        <DetailTools\r\n          labelsVisibility={labelsVisibility}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          deleteCard={deleteCard}\r\n          idUpdatedList={idUpdatedList}\r\n          taskId={taskId}\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n        />\r\n        {labelsVisibility ? (\r\n          <Labels\r\n            detailCover={true}\r\n            handleLabelsVisibility={handleLabelsVisibility}\r\n            toggleLabelColorToCard={toggleLabelColorToCard}\r\n            listOfAllBadges={listOfAllBadges}\r\n            taskId={taskId}\r\n            listOfAllTasksId={listOfAllTasksId}\r\n            labelColors={labelColors}\r\n            setLabelColors={setLabelColors}\r\n          />\r\n        ) : null}\r\n      </StyledDetail>\r\n    </StyledCover>\r\n  );\r\n}\r\n\r\nexport default DetailCoverView;\r\n","import React from \"react\";\r\nimport DetailCoverView from \"../../components/DetailCover/DetailCoverView/DetailCoverView\";\r\n\r\nclass DetailCover extends React.Component {\r\n  state = {\r\n    taskTitle: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      taskTitle: this.props.taskName,\r\n    });\r\n  }\r\n\r\n  taskTitleFeature = (e) => {\r\n    this.setState({\r\n      taskTitle: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      taskId,\r\n      taskTitleList,\r\n      updateCard,\r\n      deleteCard,\r\n      idUpdatedList,\r\n      changeListInDetails,\r\n      visibilityChangeListInDetails,\r\n      wholeList,\r\n      moveCardToAnotherList,\r\n      labelsVisibility,\r\n      handleLabelsVisibility,\r\n      toggleLabelColorToCard,\r\n      listOfAllBadges,\r\n      labelColors,\r\n      setLabelColors,\r\n      listOfAllTasksId,\r\n    } = this.props;\r\n\r\n    const copyOfallBadges = [...listOfAllBadges];\r\n    const matchedColorsToThisCard = copyOfallBadges.filter(\r\n      (ele) => ele.id === taskId\r\n    );\r\n\r\n    const { taskTitle } = this.state;\r\n    return (\r\n      <>\r\n        <DetailCoverView\r\n          updateCard={updateCard}\r\n          taskTitle={taskTitle}\r\n          taskTitleFeature={this.taskTitleFeature}\r\n          changeListInDetails={changeListInDetails}\r\n          taskTitleList={taskTitleList}\r\n          visibilityChangeListInDetails={visibilityChangeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          labelsVisibility={labelsVisibility}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          deleteCard={deleteCard}\r\n          idUpdatedList={idUpdatedList}\r\n          taskId={taskId}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DetailCover;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Navigations from \"../Naviagtion/Navigations\";\r\nimport CoreField from \"../CoreField/CoreField\";\r\nimport ThemeField from \"../ThemeField/ThemeField\";\r\nimport OptionCover from \"../OptionCover/OptionCover\";\r\nimport DetailCover from \"../DetailCover/DetailCover\";\r\nimport Color from \"color\";\r\n\r\nconst Main = () => {\r\n  const [showThemeOption, showThemeOptionFunction] = useState(false);\r\n  const [numberOfTask, numberOfTaskFunction] = useState(0);\r\n  const [whichColor, setWhichColor] = useState([\"#76ce8e\"]);\r\n  const [visibilityOptionsCover, setVisibilityOptionCover] = useState(false);\r\n  const [optionCoverData, setOptionCoverData] = useState(\"\");\r\n  const [visibilityTaskDetails, setVisibilityTaskDetails] = useState(false);\r\n  const [taskTitleList, setTaskTitleList] = useState();\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const [taskId, setTaskId] = useState(\"\");\r\n  const [idUpdatedList, setIdUpdatedList] = useState();\r\n  const [visibilityChangeListInDetails, setChangeListInDetails] = useState(\r\n    false\r\n  );\r\n  const [labelsVisibility, setLabelsVisibility] = useState(false);\r\n  const [\r\n    labelsVisibilityDetailsComp,\r\n    setLabelsVisibilityDetailsComp,\r\n  ] = useState(false);\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const [listOfAllTasksId, setListOfAllTasksId] = useState([]);\r\n  const [listOfAllBadges, setListOfAllBadges] = useState([]);\r\n  const [hideFontSizeLabel, setHideFontSizeLabel] = useState(false);\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", hideTheme);\r\n  });\r\n\r\n  const [wholeList, setWholeList] = useState([\r\n    {\r\n      id: 0,\r\n      title: \"To Do\",\r\n      tasks: [],\r\n      activeList: false,\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"In Progress\",\r\n      tasks: [],\r\n      activeList: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Finished\",\r\n      tasks: [],\r\n      activeList: false,\r\n    },\r\n  ]);\r\n\r\n  const [labelColors, setLabelColors] = useState([\r\n    { color: \"#61BD4F\", colorName: \"green\", value: \"\", id: 0 },\r\n    { color: \"#F2D600\", colorName: \"yellow\", value: \"\", id: 1 },\r\n    { color: \"#FF9F1A\", colorName: \"orange\", value: \"\", id: 2 },\r\n    { color: \"#EB5A46\", colorName: \"red\", value: \"\", id: 3 },\r\n    { color: \"#C377E0\", colorName: \"purple\", value: \"\", id: 4 },\r\n    { color: \"#0079BF\", colorName: \"blue\", id: 5 },\r\n    { color: \"#00C2E0\", colorName: \"light blue ocean\", value: \"\", id: 6 },\r\n    { color: \"#51E898\", colorName: \"light green\", value: \"\", id: 7 },\r\n    { color: \"#FF78CB\", colorName: \"pink\", value: \"\", id: 8 },\r\n    { color: \"#344563\", colorName: \"dark blue\", value: \"\", id: 9 },\r\n    { color: \"#B3BAC5\", colorName: \"grey\", value: \"\", id: 10 },\r\n  ]);\r\n\r\n  const hideTheme = (e) => {\r\n    const searchingClass = e.target.className;\r\n    if (\r\n      searchingClass.includes(\"main\") ||\r\n      searchingClass.includes(\"input\") ||\r\n      searchingClass.includes(\"item\")\r\n    ) {\r\n      showThemeOptionFunction(false);\r\n    }\r\n\r\n    if (!searchingClass.includes(\"suggested\")) {\r\n      setChangeListInDetails(false);\r\n    }\r\n\r\n    if (\r\n      searchingClass.includes(\"coverOption\") ||\r\n      searchingClass.includes(\"cover_box\")\r\n    ) {\r\n      setVisibilityOptionCover(false);\r\n      setLabelsVisibility(false);\r\n    }\r\n\r\n    if (searchingClass.includes(\"cover_textArea\")) {\r\n      setLabelsVisibility(false);\r\n    }\r\n\r\n    if (!searchingClass.includes(\"label\")) {\r\n      setLabelsVisibilityDetailsComp(false);\r\n    }\r\n  };\r\n\r\n  const listOption = (listId) => {\r\n    const copyWholeList = [...wholeList];\r\n    const filterWholeList = copyWholeList.filter((list) => list.id !== listId);\r\n\r\n    setWholeList(filterWholeList);\r\n  };\r\n\r\n  const addNewCard = (listId, newTask, taskId) => {\r\n    const correctList = wholeList.filter((list) => list.id === listId);\r\n    if (newTask.length === 0) return;\r\n\r\n    const matchedBadges = listOfAllBadges.filter((ele) => ele.id === taskId);\r\n    const theBiggestId = Math.max(...listOfAllTasksId);\r\n\r\n    //\"Add card\" by move already existing card\r\n    if (taskId) {\r\n      correctList[0].tasks.push({\r\n        id: taskId,\r\n        taskName: newTask,\r\n        currentList: listId,\r\n        comment: \"\",\r\n        badges: matchedBadges,\r\n        priority: false,\r\n        date: \"\",\r\n        cover: \"\",\r\n      });\r\n    } else {\r\n      //Add new card by button 'Add Card'\r\n      correctList[0].tasks.push({\r\n        id: `${listOfAllTasksId.length === 0 ? 0 : theBiggestId + 1}`,\r\n        taskName: newTask,\r\n        currentList: listId,\r\n        comment: \"\",\r\n        badges: [],\r\n        priority: false,\r\n        date: \"\",\r\n        cover: \"\",\r\n      });\r\n      if (listOfAllTasksId.length === 0) {\r\n        setListOfAllTasksId([0]);\r\n      } else {\r\n        setListOfAllTasksId([...listOfAllTasksId, theBiggestId + 1]);\r\n      }\r\n    }\r\n    numberOfTaskFunction(numberOfTask + 1);\r\n  };\r\n\r\n  const deleteCard = (listId, taskId, byButton) => {\r\n    //Delete Card from list( by every way )\r\n    const correctList = wholeList.filter((list) => list.id === listId);\r\n\r\n    const taskIndex = correctList[0].tasks.findIndex(\r\n      (element) => element.id === taskId\r\n    );\r\n\r\n    if (byButton === \"byButton\") {\r\n      //Delete Card Badges from array if matched exist\r\n      const matchedBadges = listOfAllBadges.filter((ele) => ele.id === taskId);\r\n      if (matchedBadges.length !== 0) {\r\n        matchedBadges.forEach((element) => {\r\n          const indexOfBadgedToDelete = listOfAllBadges.findIndex(\r\n            (ele) => ele.id === taskId && ele.color === element.color\r\n          );\r\n          listOfAllBadges.splice(indexOfBadgedToDelete, 1);\r\n        });\r\n      }\r\n\r\n      //Delete Card Id from array\r\n      const matchedIdList = listOfAllTasksId.findIndex((ele) => ele == taskId);\r\n      listOfAllTasksId.splice(matchedIdList, 1);\r\n    }\r\n\r\n    correctList[0].tasks.splice(taskIndex, 1);\r\n    numberOfTaskFunction(numberOfTask - 1);\r\n    setVisibilityOptionCover(false);\r\n    setVisibilityTaskDetails(false);\r\n  };\r\n\r\n  const addNewList = (listInputValue, showListHandle, setListInput) => {\r\n    showListHandle(false);\r\n    setListInput(\"\");\r\n    if (listInputValue === \"\") return;\r\n    if (listInputValue.length < 2) return;\r\n\r\n    let biggerThanLast = [];\r\n    wholeList.forEach((list) => biggerThanLast.push(list.id));\r\n    const theBiggest = Math.max(...biggerThanLast);\r\n    setWholeList([\r\n      ...wholeList,\r\n      {\r\n        title: listInputValue,\r\n        id: `${wholeList.length === 0 ? 0 : theBiggest + 1}`,\r\n        tasks: [],\r\n        activeInput: false,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const updateListTitle = (newTitle, listId) => {\r\n    const updatedList = wholeList.filter((list) => list.id === listId);\r\n    updatedList[0].title = newTitle;\r\n  };\r\n\r\n  const elementHoverEnter = (e) => {\r\n    const arrayClassList = [];\r\n    e.target.classList.forEach((item) => {\r\n      arrayClassList.push(item);\r\n    });\r\n\r\n    if (arrayClassList.includes(\"list\")) {\r\n      const currentLiColor = Color(\r\n        `${\r\n          e.target.style.backgroundColor\r\n            ? e.target.style.backgroundColor\r\n            : \"#76ce8e\"\r\n        }`\r\n      );\r\n      return (e.target.style.backgroundColor = currentLiColor.lighten(0.1));\r\n    }\r\n  };\r\n\r\n  const elementHoverLeave = (e) => {\r\n    const arrayClassList = [];\r\n    e.target.classList.forEach((item) => {\r\n      arrayClassList.push(item);\r\n    });\r\n\r\n    if (arrayClassList.includes(\"list\")) {\r\n      return (e.target.style.backgroundColor = whichColor);\r\n    }\r\n  };\r\n\r\n  const visibilityOptionFunction = (e, toggle, taskName, listId, cardId) => {\r\n    //Dates sending from Card to OptionFunction Comp (by clicked Edit Icon)\r\n    setVisibilityOptionCover(toggle);\r\n    setIdUpdatedList(listId);\r\n    setTaskName(taskName);\r\n    setOptionCoverData([\r\n      {\r\n        listId: listId,\r\n        top: e.target.parentNode.offsetTop,\r\n        left: e.target.parentNode.offsetLeft,\r\n        taskTitle: taskName,\r\n        clickedCard: e.target.parentNode,\r\n        clickedCardWrapLabel: e.target.parentNode.children[0],\r\n        clickedCardId: cardId,\r\n        wholeList: wholeList,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const taskDetailsFunction = (\r\n    //Dates sending from Card to DetailsComponenet (by doubleClick Card)\r\n    nameUpdatedTask,\r\n    nameUpdatedList,\r\n    listId,\r\n    cardId\r\n  ) => {\r\n    setIdUpdatedList(listId);\r\n    setTaskTitleList(nameUpdatedList);\r\n    setTaskName(nameUpdatedTask);\r\n    setTaskId(cardId);\r\n    setVisibilityTaskDetails(true);\r\n  };\r\n\r\n  const updateCard = (e, updatedTitle, listId, taskId) => {\r\n    // For changing taskName by detailCover component\r\n    if (\r\n      e.target.className.includes(\"cover\") ||\r\n      e.target.className.includes(\"cover_saveBtn\")\r\n    ) {\r\n      const correctList = wholeList.filter((list) => list.id === listId);\r\n      if (updatedTitle.length === 0) return setVisibilityTaskDetails(false);\r\n      const index = correctList[0].tasks.findIndex((ele) => ele.id === taskId);\r\n      correctList[0].tasks[index].taskName = updatedTitle;\r\n      setVisibilityTaskDetails(false);\r\n      setVisibilityOptionCover(false);\r\n      setLabelsVisibility(false);\r\n    }\r\n\r\n    // For changing taskName by detailCover component without closing this componentView\r\n    if (\r\n      !e.target.className.includes(\"input\") &&\r\n      !e.target.className.includes(\"suggested\") &&\r\n      !e.target.className.includes(\"close\") &&\r\n      !e.target.className.includes(\"delete\")\r\n    ) {\r\n      const correctList = wholeList.filter((list) => list.id === listId);\r\n      if (updatedTitle.length === 0) return setVisibilityTaskDetails(false);\r\n      if (correctList[0]) {\r\n        const index = correctList[0].tasks.findIndex(\r\n          (ele) => ele.id === taskId\r\n        );\r\n        correctList[0].tasks[index].taskName = updatedTitle;\r\n        setTaskName(updatedTitle);\r\n      }\r\n    }\r\n\r\n    if (e.target.className.includes(\"close\")) {\r\n      setVisibilityTaskDetails(false);\r\n      setVisibilityOptionCover(false);\r\n      setLabelsVisibility(false);\r\n    }\r\n  };\r\n\r\n  const changeListInDetails = () => {\r\n    setChangeListInDetails(!visibilityChangeListInDetails);\r\n  };\r\n\r\n  const moveCardToAnotherList = (\r\n    taskTitle,\r\n    currentList,\r\n    taskId,\r\n    clickedListId\r\n  ) => {\r\n    //FindListWhereDelete\r\n    const deleteFromList = wholeList.filter(\r\n      (list) => list.title === currentList\r\n    );\r\n\r\n    //AddToAnotherList\r\n    const addToList = wholeList.filter((list) => list.id === clickedListId);\r\n    deleteCard(deleteFromList[0].id, taskId);\r\n    addNewCard(addToList[0].id, taskTitle, taskId);\r\n\r\n    setVisibilityTaskDetails(false);\r\n    setChangeListInDetails(false);\r\n\r\n    taskDetailsFunction(taskTitle, addToList[0].title, addToList[0].id, taskId);\r\n  };\r\n\r\n  const moveListToAnotherPlace = (draggedListIndex, addToThisIndex) => {\r\n    const copy = [...wholeList];\r\n    const splicedElement = copy.splice(draggedListIndex, 1);\r\n    copy.splice(addToThisIndex, 0, ...splicedElement);\r\n    setWholeList(copy);\r\n  };\r\n\r\n  const clearAllBlankSpan = (e) => {\r\n    const allBlank = document.querySelectorAll(\".blank\");\r\n\r\n    allBlank.forEach((blank) => {\r\n      blank.style.width = \"0\";\r\n      blank.style.height = \"0\";\r\n      blank.style.backgroundColor = \"transparent\";\r\n      blank.style.borderRadius = \"0\";\r\n    });\r\n  };\r\n\r\n  //LABLES FEATURES\r\n  const handleLabelsVisibility = (toggle) => {\r\n    setLabelsVisibility(toggle);\r\n  };\r\n\r\n  const handleLabelsVisibilityDetailsComp = (toggle) => {\r\n    setLabelsVisibilityDetailsComp(toggle);\r\n  };\r\n\r\n  const toggleLabelColorToCard = (color, taskId) => {\r\n    const alreadyExistedBadges = listOfAllBadges.filter(\r\n      (ele) => ele.id === taskId\r\n    );\r\n\r\n    const matchedBages = [];\r\n    alreadyExistedBadges.forEach((ele) => {\r\n      if (ele.color === color) {\r\n        matchedBages.push(color);\r\n      }\r\n    });\r\n\r\n    if (matchedBages.length === 0) {\r\n      //Add only if this color and Id don't exist already\r\n      const nameBadge = labelColors.filter((ele) => ele.color === color);\r\n      // const dataForClasses = color.slice(1, -1);\r\n\r\n      listOfAllBadges.push({\r\n        id: taskId,\r\n        color: color,\r\n        name: nameBadge[0].value,\r\n        labelId: `${color}${taskId}`,\r\n        // dataClass: dataForClasses,\r\n      });\r\n\r\n      createLabelsElement(color, taskId, nameBadge[0].value);\r\n\r\n      //CheckIcon Visible\r\n      const checkIcon = document.getElementById(`${color}Check`);\r\n      checkIcon.style.display = \"block\";\r\n      setToggle(!toggle);\r\n    } else {\r\n      const indexToDelete = listOfAllBadges.findIndex(\r\n        (ele) => ele.id === taskId && ele.color === color\r\n      );\r\n\r\n      //Delete from list of badges when exist and from DOM\r\n      listOfAllBadges.splice(indexToDelete, 1);\r\n      const matchedColor = document.getElementById(`${color}${taskId}`);\r\n      matchedColor.remove();\r\n\r\n      //CheckIcon Visible\r\n      const checkIcon = document.getElementById(`${color}Check`);\r\n      checkIcon.style.display = \"none\";\r\n      setToggle(!toggle);\r\n    }\r\n  };\r\n\r\n  const createLabelsElement = (color, taskId, nameLabel) => {\r\n    const currentTask = document.getElementById(taskId);\r\n\r\n    const newLabel = document.createElement(\"div\");\r\n    newLabel.classList.add(`labelElement`);\r\n    newLabel.setAttribute(\"id\", `${color}${taskId}`);\r\n    newLabel.style.backgroundColor = `${color}`;\r\n    newLabel.textContent = nameLabel;\r\n    currentTask.children[0].appendChild(newLabel);\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <Navigations\r\n        themeToggle={showThemeOptionFunction}\r\n        themeOption={showThemeOption}\r\n        elementHoverEnter={elementHoverEnter}\r\n        elementHoverLeave={elementHoverLeave}\r\n      />\r\n      <ThemeField themeOption={showThemeOption} setWhichColor={setWhichColor} />\r\n      <CoreField\r\n        wholeList={wholeList}\r\n        setWholeList={setWholeList}\r\n        listOption={listOption}\r\n        addNewCard={addNewCard}\r\n        deleteCard={deleteCard}\r\n        addNewList={addNewList}\r\n        elementHoverEnter={elementHoverEnter}\r\n        elementHoverLeave={elementHoverLeave}\r\n        visibilityOptionFunction={visibilityOptionFunction}\r\n        taskDetailsFunction={taskDetailsFunction}\r\n        updateListTitle={updateListTitle}\r\n        moveListToAnotherPlace={moveListToAnotherPlace}\r\n        clearAllBlankSpan={clearAllBlankSpan}\r\n        hideFontSizeLabel={hideFontSizeLabel}\r\n        setHideFontSizeLabel={setHideFontSizeLabel}\r\n      />\r\n      {visibilityOptionsCover ? (\r\n        <OptionCover\r\n          optionCoverData={optionCoverData}\r\n          taskName={taskName}\r\n          updateCard={updateCard}\r\n          deleteCard={deleteCard}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          labelsVisibility={labelsVisibility}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n        />\r\n      ) : null}\r\n      {visibilityTaskDetails ? (\r\n        <DetailCover\r\n          taskName={taskName}\r\n          taskId={taskId}\r\n          taskTitleList={taskTitleList}\r\n          updateCard={updateCard}\r\n          deleteCard={deleteCard}\r\n          idUpdatedList={idUpdatedList}\r\n          changeListInDetails={changeListInDetails}\r\n          visibilityChangeListInDetails={visibilityChangeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          handleLabelsVisibility={handleLabelsVisibilityDetailsComp}\r\n          labelsVisibility={labelsVisibilityDetailsComp}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n        />\r\n      ) : null}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { device } from \"../MediaQuery/mq\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin:0;\r\n    padding:0;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    box-sizing:border-box;\r\n    border:none;\r\n    outline:none;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n\r\n  html{\r\n    font-size:10px;\r\n  }\r\n\r\n  body{\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n  }\r\n\r\n  .card{\r\n  top:0;\r\n  left:0;\r\n  display:flex;\r\n  justify-content:space-between;\r\n  flex-wrap:wrap;\r\n  width: 100%;\r\n  max-width:260px;\r\n  word-break: break-all;\r\n  margin: 10px 0px;\r\n  padding: 9px 7.5px;\r\n  font-size: 1.4rem;\r\n  box-shadow: 0px 0.5px 0px 0.5px #aaa;\r\n  background-color: #fff;\r\n  border-radius:3px;\r\n  cursor: pointer;\r\n  color:black;\r\n\r\n  &:hover {\r\n    background-color: #F4F5F7;\r\n  }\r\n\r\n  &:hover > *{\r\n  color:#777;\r\n  }\r\n  }\r\n\r\n  .card_cardWrapContent{\r\n    display:flex;\r\n    justify-content:space-around\r\n  }\r\n\r\n  .card_wrapLabel{\r\n    display:flex;\r\n    flex-wrap:wrap;\r\n    width:100%;\r\n    transition:0.1s linear;\r\n\r\n    &:hover{\r\n      opacity:0.6;\r\n    }\r\n  }\r\n\r\n  .labelElement{\r\n    min-width: 15%;\r\n    min-height:8px;\r\n    border-radius:5px;\r\n    margin-bottom:4px;\r\n    margin-right:4px;\r\n    padding: 3px;\r\n    color:white;\r\n  }\r\n\r\n  .labelElement_DetailCover{\r\n    min-width:40px;\r\n    width:auto;\r\n    height:32px;\r\n    border-radius:3px;\r\n    margin: 3px 3px 3px 0px;\r\n    cursor:pointer;\r\n    transition: 0.1s linear;\r\n    padding: 8px 5px;\r\n    color:white;\r\n    font-size:14px;\r\n    font-weight:600;\r\n\r\n    &:hover{\r\n      opacity: 0.85;\r\n    }\r\n  }\r\n\r\n  .lists{\r\n  top:0;\r\n  left:0;\r\n  width: 275px;\r\n  margin-right: 10px;\r\n  align-self: flex-start;\r\n  background-color: #ebecf0;\r\n  border-radius: 4px;\r\n  padding: 10px 7.5px;\r\n  margin-bottom: 15px;\r\n  cursor: pointer;\r\n  }\r\n  \r\n  .singleListWrap{\r\n     position:relative;\r\n     width: 285px;\r\n     display:flex;\r\n     flex-direction:column;\r\n   }\r\n\r\n  .fa-highlighter{\r\n    color:#777;\r\n    align-self:center;\r\n    margin-left:2px;\r\n    @media ${device.laptop} {\r\n      color:#fff;\r\n\r\n      &:hover{\r\n        color:#000;\r\n      }\r\n  }\r\n  }\r\n  \r\n  .fa-ellipsis-h{\r\n   padding: 9px ;\r\n   margin-left:2px;\r\n   margin-bottom: 5px;\r\n   font-size: 13px;\r\n   color: #777;\r\n   cursor: pointer;\r\n\r\n   &:hover{\r\n    background-color: #dddfe5;\r\n   }\r\n  }\r\n\r\n  .fa-credit-card{\r\n    margin-right: 7.5px;\r\n     color:#42526E;\r\n     font-size: 19px;\r\n     \r\n   }\r\n\r\n   .detail > .fa-times{\r\n     position: absolute;\r\n     top:15px;\r\n     right:15px;\r\n     font-size: 20px;\r\n     color:#42526E;\r\n     cursor: pointer;\r\n   }\r\n\r\n::-webkit-scrollbar{\r\n    height:17.5px;\r\n}::-webkit-scrollbar-track{\r\n    background:rgba(0,0,0,0.5);\r\n}\r\n::-webkit-scrollbar-thumb{\r\n  background:rgba(0,0,0,0.3);\r\n  border-radius: 10px;\r\n  height:10px;\r\n}\r\n::-webkit-scrollbar-thumb:hover{\r\n  background:rgba(0,0,0,0.5);\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\nimport Main from \"../Containers/Main/main\";\nimport GlobalStyle from \"../Style/GlobalStyle/globalStyle\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}