{"version":3,"sources":["components/Navigation/NavListView/NavListView.js","components/Navigation/NavigationView.js","Containers/Naviagtion/Navigations.js","components/Card/Card.js","components/List/ListButtons/ListButtons.js","components/List/ListInput/ListInput.js","components/List/ListView.js","Containers/List/List.js","components/CoreField/CoreFieldView.js","Containers/CoreField/CoreField.js","Style/MediaQuery/mq.js","components/ThemeField/ThemeFieldView.js","Containers/ThemeField/ThemeField.js","components/OptionCover/OptionCoverListView/OptionCoverListView.js","components/MoveToAnotherList/MoveToAnotherListBox.js","components/Labels/LabelView/LabelsNameColors.js","components/Labels/LabelView/LabelsChooseColors.js","components/Labels/LabelsView.js","Containers/Labels/Labels.js","components/OptionCover/OptionCoverView.js","Containers/OptionCover/OptionCover.js","components/DetailCover/DetailElements/DetailInputElement.js","components/DetailCover/DetailElements/DetalSuggestedElement/DetailSuggestedElement.js","components/DetailCover/DetailTools/DetailCoverNav/DetailCoverNav.js","components/DetailCover/DetailTools/DetailCoverMarks/DetailCoverMarks.js","components/DetailCover/DetailTools/DetailTools.js","components/DetailCover/DetailCoverView/DetailCoverView.js","Containers/DetailCover/DetailCover.js","Containers/Main/main.js","Style/GlobalStyle/globalStyle.js","components/App.js","serviceWorker.js","index.js"],"names":["StyledList","styled","li","props","lastEle","Link","a","NavListView","elementHoverEnter","elementHoverLeave","themeFunction","linkTitle","className","onMouseEnter","e","onMouseLeave","onClick","StyledNav","nav","StyledUl","ul","StyledInput","input","navigationElements","Navigation","map","element","key","placeholder","Navigations","themeToggle","themeOption","this","NavigationView","Component","Card","state","selected","scrollHeight","taskk","mouseDownFeature","target","classList","setState","style","zIndex","mouseUpFeature","cursor","position","transform","scrollPosition","wholeList","addNewCardFeature","deleteCardFeatureByMove","listId","scrollHeighFromMain","Math","floor","taskId","getAttribute","draggedCard","document","getElementById","draggedCardChildren","children","draggenCardLabelsChildren","length","width","fontSize","pageX","id","mouseLeaveFeature","forEach","ele","textContent","i","isDragAndDropTrue","clearAllBlankSpan","mouseMoveFeature","left","clientX","top","clientY","allBlankSpan","querySelectorAll","all","height","backgroundColor","borderRadius","labelFontSizeToggle","hideFontSizeLabel","setHideFontSizeLabel","task","taskName","inputTitle","taskDetailsFunction","visibilityOptionFunction","onDoubleClick","onMouseDown","onMouseUp","onMouseMove","border","priority","badges","color","labelId","name","currentListName","StyledAddButton","button","StyledSpanX","span","ListButtons","showAddField","textAreaValue","swapAddFieldFeature","StyledInputCover","div","ListInput","selectedList","listOption","setListTitle","onChange","value","StyledTextArea","textarea","showStyle","ListView","tasks","setTextAreaValue","List","hideAll","searchingClass","includes","showListHandle","setListInput","updateListTitle","buttonId","addNewCard","addNewCardFeatureByKey","which","preventDefault","deleteCard","boxShadow","display","marginRight","draggedListIndex","findIndex","list","moveListToAnotherPlace","addEventListener","main","querySelector","mainWidth","offsetWidth","scroll","behavior","title","removeEventListener","StyledMain","StyledListInput","StyledWrapList","StyledButton","StyledWrapAddListBtn","bgc","CoreFieldView","mousePositionX","showList","showAddListHandle","listInputHandle","listInputValue","addNewList","addNewListByKey","onScroll","onKeyPress","MainField","useState","updatedScrollPosition","isDragDropTrue","isDragDropTrueFeature","scrollLeft","isTrue","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","StyledColorDiv","StyledThemeDivTitle","h3","StyledThemeDiv","showTheme","ThemeFieldView","changeColor","blockOfColors","block","mainColor","navColor","listColor","inputColor","ThemeField","setWhichColor","StyledListBlock","StyledIcon","OptionCoverListView","handleLabelsVisibility","addPriorityForCards","optionCoverData","changeListInDetails","clickedCardId","StyledChangeListDetails","rightPosition","topPosition","StyledReplaceTitle","alignCenter","biggerMargin","StyledSuggestList","MoveToAnotherListBox","taskTitle","moveCardToAnotherList","taskTitleList","byElement","optionCover","StyledBack","StyledNameLabels","detailCover","StyledLabelTitle","h2","StyledLabelInput","marginTop","StyledName","StyledWrapColors","StyledColorSquar","StyledX","LabelsNameColors","nameLabelVisibility","filteredColors","nameLabelInput","nameLabelInputValue","choosedSquar","saveNameLabel","currentSquarEdit","StyledLabels","StyledLabelWrapEle","StyledLabelElement","StyledIconCheck","StyledNameSox","LabelsChooseColors","toggleLabelColorToCard","generateCheckIcon","searchLabelColor","searchInputLabel","useEffect","LabelsView","labelVisibility","Labels","currentMatchedColors","toggle","colorId","from","isAnyTextAlready","parentNode","matchedBadges","listOfAllBadges","filter","currentCheckIcon","substr","listOfAllTasksId","labelColors","setLabelColors","matchedLabelInCard","index","copyOfLabelColor","splice","colorName","addLabelColor","toUpperCase","StyledCover","StyledOptionBox","StyledSaveButton","StyledWrapLabels","StyledWrapTextAndLabels","OptionCover","taskTitleFeature","updateCard","labelsVisibility","matchedColorsToThisCard","toggleDetailMove","setOptionCoverPostion","taskData","mainOffsetTop","offsetTop","coverBox","coverBoxHeight","offsetHeight","listIndex","positionY","positionX","OptionCoverView","StyledTaskName","Detail_Input","idUpdatedList","StyledLightText","StyledStrongText","strong","DetailSuggestedElement","visibilityChangeListInDetails","StyledDetailNav","StyledDetailUl","StyledDetailList","first","DetailCoverNav","StyledDetailMarks","StyledDetailDescription","StyledTitle","biggerSize","pointer","StyledLabelsWrap","StyledPlaceholder","greyBgc","marginLeft","hoverBgc","StyledCommentOptionWrap","StyledComment","DetailCoverMarks","toggleCommentFeature","toggleCommentVisibility","commentChange","commentValue","addCommentToCard","listOfAllComments","editCommentToCard","margin","comment","StyledDetailToolsWrap","DetailTools","StyledDetail","DetailCoverView","DetailInputElement","DetailCover","setListOfAllComments","commentIndexToDelete","matchedComments","React","Main","showThemeOption","showThemeOptionFunction","numberOfTask","numberOfTaskFunction","whichColor","visibilityOptionsCover","setVisibilityOptionCover","setOptionCoverData","visibilityTaskDetails","setVisibilityTaskDetails","setTaskTitleList","setTaskName","setTaskId","setIdUpdatedList","setChangeListInDetails","setToggleDetailMove","setLabelsVisibility","labelsVisibilityDetailsComp","setLabelsVisibilityDetailsComp","setToggle","setListOfAllTasksId","listOfAllPriorityTasks","setListOfPriority","setToggleCommentVisibility","hideTheme","activeList","setWholeList","newTask","correctList","matchedPriority","matchedComment","theBiggestId","max","matchedList","push","currentList","date","cover","byButton","taskIndex","matchedPriorityIndex","matchedCommentIndex","indexOfBadgedToDelete","matchedIdList","arrayClassList","item","currentLiColor","Color","lighten","nameUpdatedTask","nameUpdatedList","cardId","updatedTitle","clickedListId","byOptionCover","deleteFromList","addToList","alreadyExistedBadges","matchedBages","nameBadge","createLabelsElement","indexToDelete","remove","nameLabel","currentTask","newLabel","createElement","add","setAttribute","appendChild","CoreField","copyWholeList","filterWholeList","biggerThanLast","theBiggest","activeInput","offsetLeft","clickedCard","clickedCardWrapLabel","newTitle","addToThisIndex","copy","splicedElement","blank","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.24768ce2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledList = styled.li`\r\n  width: ${(props) => (props.lastEle ? \"auto\" : \"75px\")};\r\n  height: 100%;\r\n  text-align: center;\r\n  background-color: #76ce8e;\r\n  border-radius: 4px;\r\n  transition: 0.1s linear;\r\n  margin-right: 4px;\r\n  margin-left: ${(props) => (props.lastEle ? \"auto\" : \"initial\")};\r\n  padding: ${(props) => (props.lastEle ? \"initial\" : \"8px 0px\")};\r\n`;\r\n\r\nconst Link = styled.a`\r\n  text-decoration: none;\r\n  font-size: 1.5rem;\r\n  color: #fff;\r\n`;\r\n\r\nfunction NavListView({\r\n  elementHoverEnter,\r\n  elementHoverLeave,\r\n  themeFunction,\r\n  linkTitle,\r\n}) {\r\n  return (\r\n    <StyledList\r\n      className=\"list\"\r\n      onMouseEnter={(e) => elementHoverEnter(e)}\r\n      onMouseLeave={(e) => elementHoverLeave(e)}\r\n      onClick={themeFunction}\r\n    >\r\n      <Link>{linkTitle}</Link>\r\n    </StyledList>\r\n  );\r\n}\r\n\r\nexport default NavListView;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NavListView from \"./NavListView/NavListView\";\r\n\r\nconst StyledNav = styled.nav`\r\n  width: 100vw;\r\n  height: 40px;\r\n  background-color: #40a35b;\r\n  padding: 0px 4px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledUl = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  flex-shrink: 1;\r\n  width: 100%;\r\n  height: 40px;\r\n  list-style: none;\r\n  cursor: pointer;\r\n  padding: 4px 0px;\r\n`;\r\n\r\nconst StyledList = styled.li`\r\n  width: ${(props) => (props.lastEle ? \"auto\" : \"75px\")};\r\n  height: 100%;\r\n  text-align: center;\r\n  background-color: #76ce8e;\r\n  border-radius: 4px;\r\n  transition: 0.1s linear;\r\n  margin-right: 4px;\r\n  margin-left: ${(props) => (props.lastEle ? \"auto\" : \"initial\")};\r\n  padding: ${(props) => (props.lastEle ? \"initial\" : \"8px 0px\")};\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 120px;\r\n  height: 100%;\r\n  border-radius: 4px;\r\n  padding: 7.5px;\r\n  background-color: #79be8c;\r\n  font-size: 1.6rem;\r\n  color: #fff;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    background-color: #64b37a;\r\n  }\r\n\r\n  &::placeholder {\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst navigationElements = [\"Your list\", \"Theme\", \"Help\"];\r\n\r\nconst Navigation = ({\r\n  elementHoverEnter,\r\n  elementHoverLeave,\r\n  themeFunction,\r\n}) => {\r\n  return (\r\n    <StyledNav className=\"nav\">\r\n      <StyledUl>\r\n        {navigationElements.map((element) => (\r\n          <NavListView\r\n            themeFunction={element === \"Theme\" ? themeFunction : null}\r\n            elementHoverEnter={(e) => elementHoverEnter(e)}\r\n            elementHoverLeave={(e) => elementHoverLeave(e)}\r\n            linkTitle={element}\r\n            key={element}\r\n          />\r\n        ))}\r\n        <StyledList lastEle>\r\n          <StyledInput className=\"item\" placeholder=\"Search...\" />\r\n        </StyledList>\r\n      </StyledUl>\r\n    </StyledNav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport NavigationView from \"../../components/Navigation/NavigationView\";\r\n\r\nclass Navigations extends Component {\r\n  themeFunction = () => {\r\n    this.props.themeToggle(!this.props.themeOption);\r\n  };\r\n\r\n  render() {\r\n    const { elementHoverEnter, elementHoverLeave } = this.props;\r\n    return (\r\n      <>\r\n        <NavigationView\r\n          elementHoverEnter={elementHoverEnter}\r\n          elementHoverLeave={elementHoverLeave}\r\n          themeFunction={this.themeFunction}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigations;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Card extends Component {\r\n  state = {\r\n    selected: false,\r\n    scrollHeight: 0,\r\n    taskk: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      taskk: this.props.task.taskName,\r\n    });\r\n  }\r\n\r\n  mouseDownFeature = (e) => {\r\n    if (e.target.classList[0] !== \"card\") return;\r\n    this.setState({\r\n      selected: true,\r\n    });\r\n    e.target.style.zIndex = 999;\r\n  };\r\n\r\n  mouseUpFeature = (e) => {\r\n    if (e.target.classList[0] !== \"card\") return;\r\n\r\n    e.target.style.cursor = \"pointer\";\r\n    e.target.style.position = \"static\";\r\n    e.target.style.transform = \"rotate(0deg)\";\r\n    e.target.style.zIndex = 0;\r\n\r\n    const {\r\n      scrollPosition,\r\n      wholeList,\r\n      addNewCardFeature,\r\n      deleteCardFeatureByMove,\r\n      listId,\r\n    } = this.props;\r\n\r\n    const scrollHeighFromMain = Math.floor(scrollPosition);\r\n    const taskId = e.target.getAttribute(\"id\");\r\n    const draggedCard = document.getElementById(taskId);\r\n\r\n    const draggedCardChildren = draggedCard.children;\r\n    const draggenCardLabelsChildren = [...draggedCardChildren[0].children];\r\n\r\n    if (draggedCard.children[0].children.length !== 0) {\r\n      draggedCard.children[0].style.width = \"100%\";\r\n      draggedCard.children[0].style.fontSize = \"12px\";\r\n    }\r\n\r\n    if (e.pageX < 285 - scrollHeighFromMain) {\r\n      if (wholeList[0].id === listId) return this.mouseLeaveFeature(e); //When put card in this same place\r\n      draggenCardLabelsChildren.forEach((ele) => {\r\n        ele.textContent = \"\";\r\n      });\r\n      deleteCardFeatureByMove(listId, taskId);\r\n      addNewCardFeature(wholeList[0].id, e.target.textContent, taskId);\r\n    }\r\n\r\n    for (let i = 1; i <= 10; i++) {\r\n      if (\r\n        e.pageX > 285 * i - scrollHeighFromMain &&\r\n        e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n        wholeList.length >= i + 1\r\n      ) {\r\n        if (wholeList[i].id === listId) return this.mouseLeaveFeature(e); //When put card in this same place\r\n        draggenCardLabelsChildren.forEach((ele) => {\r\n          ele.textContent = \"\";\r\n        });\r\n        deleteCardFeatureByMove(listId, taskId);\r\n        addNewCardFeature(wholeList[i].id, e.target.textContent, taskId);\r\n      }\r\n    }\r\n\r\n    this.props.isDragAndDropTrue(false);\r\n    this.props.clearAllBlankSpan();\r\n\r\n    this.setState({\r\n      selected: false,\r\n    });\r\n  };\r\n\r\n  mouseMoveFeature = (e) => {\r\n    const scrollHeighFromMain = Math.floor(this.props.scrollPosition);\r\n    if (this.state.selected && e.target.classList[0] === \"card\") {\r\n      e.target.style.left = `${e.clientX - 130}px`;\r\n      e.target.style.top = `${e.clientY - 27.5}px`;\r\n      e.target.style.position = \"fixed\";\r\n      e.target.style.cursor = \"grabbing\";\r\n      e.target.style.transform = \"rotate(5deg)\";\r\n      e.target.style.zIndex = 999;\r\n\r\n      const taskId = e.target.getAttribute(\"id\");\r\n      const draggedCard = document.getElementById(taskId);\r\n\r\n      if (draggedCard.children[0].children.length !== 0) {\r\n        draggedCard.children[0].style.width = \"25%\";\r\n        draggedCard.children[0].style.fontSize = \"0px\";\r\n      }\r\n\r\n      const allBlankSpan = document.querySelectorAll(\".blank\");\r\n      allBlankSpan.forEach((all) => {\r\n        all.style.width = \"0\";\r\n        all.style.height = \"0\";\r\n        all.style.backgroundColor = \"transparent\";\r\n      });\r\n\r\n      for (let i = 1; i < 10; i++) {\r\n        if (e.pageX < 285 - scrollHeighFromMain) {\r\n          allBlankSpan[0].style.width = \"100%\";\r\n          allBlankSpan[0].style.height = \"35px\";\r\n          allBlankSpan[0].style.backgroundColor = \"#dddfe5\";\r\n          allBlankSpan[0].style.borderRadius = \"5px\";\r\n        } else if (\r\n          e.pageX > 285 * i - scrollHeighFromMain &&\r\n          e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n          this.props.wholeList.length >= i + 1\r\n        ) {\r\n          allBlankSpan[i].style.width = \"100%\";\r\n          allBlankSpan[i].style.height = \"35px\";\r\n          allBlankSpan[i].style.backgroundColor = \"#dddfe5\";\r\n          allBlankSpan[i].style.borderRadius = \"5px\";\r\n        }\r\n      }\r\n    }\r\n\r\n    this.props.isDragAndDropTrue(true);\r\n  };\r\n\r\n  mouseLeaveFeature = (e) => {\r\n    const cardWrapLabel = document.querySelectorAll(\".card_wrapLabel\");\r\n    cardWrapLabel.forEach((ele) => {\r\n      ele.style.width = \"100%\";\r\n    });\r\n\r\n    e.target.style.cursor = \"pointer\";\r\n    e.target.style.position = \"static\";\r\n    e.target.style.transform = \"rotate(0deg)\";\r\n    e.target.style.zIndex = 0;\r\n    this.props.clearAllBlankSpan();\r\n    this.props.isDragAndDropTrue(false);\r\n    this.setState({\r\n      selected: false,\r\n    });\r\n  };\r\n\r\n  labelFontSizeToggle = (hideFontSizeLabel) => {\r\n    this.props.setHideFontSizeLabel(!hideFontSizeLabel);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      task,\r\n      inputTitle,\r\n      listId,\r\n      taskDetailsFunction,\r\n      visibilityOptionFunction,\r\n      hideFontSizeLabel,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div\r\n        id={task.id}\r\n        className=\"card\"\r\n        onDoubleClick={(e) =>\r\n          taskDetailsFunction(task.taskName, inputTitle, listId, task.id)\r\n        }\r\n        onMouseDown={(e) => this.mouseDownFeature(e)}\r\n        onMouseUp={(e) => this.mouseUpFeature(e)}\r\n        onMouseMove={(e) => this.mouseMoveFeature(e)}\r\n        onMouseLeave={(e) => this.mouseLeaveFeature(e)}\r\n        style={{\r\n          border: task.priority === \"priority\" ? \"1px solid red\" : null,\r\n        }}\r\n      >\r\n        <div\r\n          className=\"card_wrapLabel\"\r\n          onClick={() => this.labelFontSizeToggle(hideFontSizeLabel)}\r\n          style={{ fontSize: hideFontSizeLabel ? 0 : \"12px\" }}\r\n        >\r\n          {task.badges.map((ele) => (\r\n            <div\r\n              key={ele.color}\r\n              id={ele.labelId}\r\n              className=\"labelElement\"\r\n              style={{ backgroundColor: ele.color }}\r\n            >\r\n              {ele.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {task.taskName}\r\n        <span\r\n          className=\"fas fa-highlighter\"\r\n          onClick={(e) =>\r\n            visibilityOptionFunction(\r\n              e,\r\n              true,\r\n              task,\r\n              listId,\r\n              task.currentListName,\r\n              task.id\r\n            )\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledAddButton = styled.button`\r\n  background-color: #5aac44;\r\n  border-radius: 5px;\r\n  color: white;\r\n  padding: 8px 20px;\r\n  margin: 5px 0px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #67ba50;\r\n  }\r\n`;\r\n\r\nconst StyledSpanX = styled.span`\r\n  font-size: 2.3rem;\r\n  vertical-align: middle;\r\n  color: #666;\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction ListButtons({\r\n  showAddField,\r\n  id,\r\n  textAreaValue,\r\n  addNewCardFeature,\r\n  swapAddFieldFeature,\r\n}) {\r\n  return (\r\n    <>\r\n      {showAddField ? (\r\n        <>\r\n          <StyledAddButton onClick={() => addNewCardFeature(id, textAreaValue)}>\r\n            Add Card\r\n          </StyledAddButton>\r\n          <StyledSpanX\r\n            className=\"fas fa-times\"\r\n            onClick={() => swapAddFieldFeature(\"SpanX\")}\r\n          />\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListButtons;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledInput = styled.input`\r\n  width: 220px;\r\n  background-color: #ebecf0;\r\n  border-radius: 1px;\r\n  padding: 5px 4px;\r\n  font-size: 1.4rem;\r\n  font-weight: 600;\r\n  color: #172b4d;\r\n\r\n  &:focus {\r\n    background-color: white;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledInputCover = styled.div`\r\n  display: inline-block;\r\n  width: 220px;\r\n  background-color: #ebecf0;\r\n  border-radius: 1px;\r\n  padding: 5px 4px;\r\n  font-size: 1.4rem;\r\n  font-weight: 600;\r\n  color: #172b4d;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nfunction ListInput({ selectedList, id, inputTitle, listOption, setListTitle }) {\r\n  return (\r\n    <>\r\n      {selectedList ? (\r\n        <StyledInputCover\r\n          onChange={(e) => setListTitle(e, id)}\r\n          className=\"input\"\r\n        >\r\n          {inputTitle}\r\n        </StyledInputCover>\r\n      ) : (\r\n        <StyledInput\r\n          value={inputTitle}\r\n          onChange={(e) => setListTitle(e, id)}\r\n          className=\"input\"\r\n        />\r\n      )}\r\n      <span className=\"fas fa-ellipsis-h\" onClick={() => listOption(id)} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListInput;\r\n","import React from \"react\";\r\nimport Card from \"../../components/Card/Card\";\r\nimport ListButtons from \"./ListButtons/ListButtons\";\r\nimport ListInput from \"./ListInput/ListInput\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 100%;\r\n  height: ${(props) => (props.showStyle ? \"60px\" : \"31px\")};\r\n  background-color: ${(props) => (props.showStyle ? \"#fff\" : \"#ebecf0\")};\r\n  border-radius: 5px;\r\n  padding: 7.5px;\r\n  color: #779;\r\n  resize: none;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  box-shadow: ${(props) =>\r\n    props.showStyle ? \"0px 0.5px 0px 0.5px #aaa\" : \"none\"};\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.showStyle ? null : \"#dddfe5\")};\r\n  }\r\n`;\r\n\r\nfunction ListView({\r\n  mouseDownFeature,\r\n  mouseMoveFeature,\r\n  mouseUpFeature,\r\n  mouseLeaveFeature,\r\n  selectedList,\r\n  listOption,\r\n  wholeList,\r\n  id,\r\n  tasks,\r\n  scrollPosition,\r\n  isDragAndDropTrue,\r\n  visibilityOptionFunction,\r\n  taskDetailsFunction,\r\n  inputTitle,\r\n  clearAllBlankSpan,\r\n  showAddField,\r\n  textAreaValue,\r\n  setTextAreaValue,\r\n  swapAddFieldFeature,\r\n  setListTitle,\r\n  addNewCardFeature,\r\n  deleteCardFeatureByMove,\r\n  hideFontSizeLabel,\r\n  setHideFontSizeLabel,\r\n}) {\r\n  return (\r\n    <div\r\n      className=\"lists\"\r\n      onMouseDown={(e) => mouseDownFeature(e)}\r\n      onMouseMove={(e) => mouseMoveFeature(e)}\r\n      onMouseUp={(e) => mouseUpFeature(e)}\r\n      onMouseLeave={(e) => mouseLeaveFeature(e)}\r\n    >\r\n      <ListInput\r\n        selectedList={selectedList}\r\n        id={id}\r\n        inputTitle={inputTitle}\r\n        listOption={listOption}\r\n        setListTitle={setListTitle}\r\n      />\r\n\r\n      {tasks.map((task) => (\r\n        <Card\r\n          wholeList={wholeList}\r\n          key={task.id}\r\n          task={task}\r\n          listId={id}\r\n          addNewCardFeature={addNewCardFeature}\r\n          deleteCardFeatureByMove={deleteCardFeatureByMove}\r\n          scrollPosition={scrollPosition}\r\n          isDragAndDropTrue={isDragAndDropTrue}\r\n          visibilityOptionFunction={visibilityOptionFunction}\r\n          taskDetailsFunction={taskDetailsFunction}\r\n          inputTitle={inputTitle}\r\n          clearAllBlankSpan={clearAllBlankSpan}\r\n          hideFontSizeLabel={hideFontSizeLabel}\r\n          setHideFontSizeLabel={setHideFontSizeLabel}\r\n        />\r\n      ))}\r\n      <div className=\"blank\" />\r\n      <StyledTextArea\r\n        value={showAddField ? textAreaValue : \"Add Another Card\"}\r\n        onChange={(e) => setTextAreaValue(e)}\r\n        onClick={() => swapAddFieldFeature(\"textArea\")}\r\n        showStyle={showAddField}\r\n        placeholder=\"Add title for this card...\"\r\n      />\r\n      <ListButtons\r\n        showAddField={showAddField}\r\n        id={id}\r\n        textAreaValue={textAreaValue}\r\n        addNewCardFeature={addNewCardFeature}\r\n        swapAddFieldFeature={swapAddFieldFeature}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default ListView;\r\n","import React, { Component } from \"react\";\r\nimport ListView from \"../../components/List/ListView\";\r\n\r\nclass List extends Component {\r\n  state = {\r\n    inputTitle: \"\",\r\n    showAddField: false,\r\n    textAreaValue: \"\",\r\n    selectedList: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"click\", this.hideAll);\r\n    document.addEventListener(\"keypress\", (e) =>\r\n      this.addNewCardFeatureByKey(e, this.props.id, this.state.textAreaValue)\r\n    );\r\n    const main = document.querySelector(\".main\");\r\n    const mainWidth = main.offsetWidth;\r\n    main.scroll({\r\n      left: mainWidth + 285 * (this.props.wholeList.length + 1),\r\n      behavior: \"smooth\",\r\n    });\r\n\r\n    this.setState({\r\n      inputTitle: this.props.title,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"click\", this.hideAll);\r\n    document.removeEventListener(\"keypress\", (e) =>\r\n      this.addNewCardFeatureByKey(e, this.props.id, this.state.textAreaValue)\r\n    );\r\n  }\r\n\r\n  hideAll = (e) => {\r\n    const searchingClass = e.target.className;\r\n    if (\r\n      searchingClass.includes(\"main\") ||\r\n      searchingClass.includes(\"input\") ||\r\n      searchingClass.includes(\"nav\") ||\r\n      searchingClass.includes(\"wrapList\") ||\r\n      searchingClass.includes(\"singleListWrap\")\r\n    ) {\r\n      this.setState({\r\n        showAddField: false,\r\n      });\r\n      this.props.showListHandle(false);\r\n      this.props.setListInput(\"\");\r\n    }\r\n  };\r\n\r\n  setListTitle = (e, listId) => {\r\n    this.setState({\r\n      inputTitle: e.target.value,\r\n    });\r\n    this.props.updateListTitle(e.target.value, listId);\r\n  };\r\n\r\n  swapAddFieldFeature = (buttonId) => {\r\n    if (buttonId === \"textArea\") {\r\n      this.setState({\r\n        showAddField: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showAddField: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  setTextAreaValue = (e) => {\r\n    this.setState({\r\n      textAreaValue: e.target.value,\r\n    });\r\n  };\r\n\r\n  addNewCardFeature = (listId, textAreaValue, taskId) => {\r\n    this.props.addNewCard(listId, textAreaValue, taskId);\r\n    this.setState({\r\n      showAddField: false,\r\n      textAreaValue: \"\",\r\n    });\r\n  };\r\n\r\n  addNewCardFeatureByKey = (e, listId, textAreaValue, taskId) => {\r\n    if (e.which === 13 && this.state.showAddField) {\r\n      e.preventDefault();\r\n      this.props.addNewCard(listId, textAreaValue, taskId);\r\n      this.setState({\r\n        textAreaValue: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteCardFeatureByMove = (listId, taskId) => {\r\n    this.props.deleteCard(listId, taskId);\r\n    this.setState({\r\n      textAreaValue: \"\",\r\n    });\r\n  };\r\n\r\n  mouseDownFeature = (e) => {\r\n    if (e.target.classList[0] !== \"lists\") return;\r\n    this.setState({\r\n      selectedList: true,\r\n    });\r\n    e.target.style.zIndex = 999;\r\n    e.target.style.cursor = \"grabbing\";\r\n    e.target.style.boxShadow = \"0px 0px 20px 0.5px rgba(0,0,0,0.1\";\r\n  };\r\n\r\n  mouseMoveFeature = (e) => {\r\n    const scrollHeighFromMain = Math.floor(this.props.scrollPosition);\r\n    if (this.state.selectedList && e.target.classList[0] === \"lists\") {\r\n      e.target.style.left = `${e.clientX - 135}px`;\r\n      e.target.style.top = `${e.clientY - 45}px`;\r\n      e.target.style.position = \"fixed\";\r\n      e.target.style.transform = \"rotate(5deg)\";\r\n\r\n      const allBlankSpan = document.querySelectorAll(\".frontBlankList\");\r\n      allBlankSpan.forEach((all) => {\r\n        all.style.display = \"none\";\r\n      });\r\n\r\n      for (let i = 1; i < 10; i++) {\r\n        if (e.pageX < 285 - scrollHeighFromMain) {\r\n          allBlankSpan[0].style.width = \"275px\";\r\n          allBlankSpan[0].style.height = \"10px\";\r\n          allBlankSpan[0].style.backgroundColor = \"rgba(0,0,0,0.15)\";\r\n          allBlankSpan[0].style.marginRight = \"10px\";\r\n          allBlankSpan[0].style.borderRadius = \"4px\";\r\n          allBlankSpan[0].style.display = \"initial\";\r\n          allBlankSpan[0].style.position = \"absolute\";\r\n          allBlankSpan[0].style.top = \"-17.5px\";\r\n        } else if (\r\n          e.pageX > 285 * i - scrollHeighFromMain &&\r\n          e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n          this.props.wholeList.length >= i + 1\r\n        ) {\r\n          allBlankSpan[i].style.width = \"275px\";\r\n          allBlankSpan[i].style.height = \"10px\";\r\n          allBlankSpan[i].style.backgroundColor = \"rgba(0,0,0,0.15)\";\r\n          allBlankSpan[i].style.marginRight = \"10px\";\r\n          allBlankSpan[i].style.borderRadius = \"4px\";\r\n          allBlankSpan[i].style.display = \"initial\";\r\n          allBlankSpan[i].style.position = \"absolute\";\r\n          allBlankSpan[i].style.top = \"-17.5px\";\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  mouseUpFeature = (e) => {\r\n    if (e.target.classList[0] !== \"lists\") return;\r\n    e.target.style.position = \"static\";\r\n    e.target.style.cursor = \"pointer\";\r\n    e.target.style.zIndex = null;\r\n    e.target.style.boxShadow = null;\r\n    e.target.style.transform = null;\r\n\r\n    const { scrollPosition, wholeList } = this.props;\r\n    const scrollHeighFromMain = Math.floor(scrollPosition);\r\n\r\n    const allBlankSpan = document.querySelectorAll(\".frontBlankList\");\r\n    allBlankSpan.forEach((all) => {\r\n      all.style.display = \"none\";\r\n    });\r\n\r\n    const draggedListIndex = this.props.wholeList.findIndex(\r\n      (list) => list.id === this.props.id\r\n    );\r\n\r\n    if (e.pageX < 285 - scrollHeighFromMain) {\r\n      this.props.moveListToAnotherPlace(draggedListIndex, 0);\r\n    }\r\n\r\n    for (let i = 1; i < 10; i++) {\r\n      if (\r\n        e.pageX > 285 * i - scrollHeighFromMain &&\r\n        e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n        wholeList.length >= i + 1\r\n      ) {\r\n        this.props.moveListToAnotherPlace(draggedListIndex, i);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      selectedList: false,\r\n    });\r\n  };\r\n\r\n  mouseLeaveFeature = () => {\r\n    const list = document.querySelectorAll(\".lists\");\r\n    list.forEach((all) => {\r\n      all.style.position = \"static\";\r\n      all.style.cursor = \"pointer\";\r\n      all.style.boxShadow = null;\r\n      all.style.transform = null;\r\n      all.style.zIndex = null;\r\n    });\r\n\r\n    const allBlankSpan = document.querySelectorAll(\".frontBlankList\");\r\n    allBlankSpan.forEach((all) => {\r\n      all.style.display = \"none\";\r\n    });\r\n\r\n    this.setState({\r\n      selectedList: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      listOption,\r\n      id,\r\n      tasks,\r\n      wholeList,\r\n      scrollPosition,\r\n      isDragAndDropTrue,\r\n      visibilityOptionFunction,\r\n      taskDetailsFunction,\r\n      clearAllBlankSpan,\r\n      hideFontSizeLabel,\r\n      setHideFontSizeLabel,\r\n    } = this.props;\r\n    const {\r\n      showAddField,\r\n      textAreaValue,\r\n      inputTitle,\r\n      selectedList,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"singleListWrap\">\r\n        <div className=\"frontBlankList\"></div>\r\n        <ListView\r\n          selectedList={selectedList}\r\n          listOption={listOption}\r\n          wholeList={wholeList}\r\n          id={id}\r\n          tasks={tasks}\r\n          scrollPosition={scrollPosition}\r\n          isDragAndDropTrue={isDragAndDropTrue}\r\n          visibilityOptionFunction={visibilityOptionFunction}\r\n          taskDetailsFunction={taskDetailsFunction}\r\n          inputTitle={inputTitle}\r\n          clearAllBlankSpan={clearAllBlankSpan}\r\n          showAddField={showAddField}\r\n          textAreaValue={textAreaValue}\r\n          mouseDownFeature={this.mouseDownFeature}\r\n          mouseMoveFeature={this.mouseMoveFeature}\r\n          mouseUpFeature={this.mouseUpFeature}\r\n          mouseLeaveFeature={this.mouseLeaveFeature}\r\n          setTextAreaValue={this.setTextAreaValue}\r\n          swapAddFieldFeature={this.swapAddFieldFeature}\r\n          setListTitle={this.setListTitle}\r\n          addNewCardFeature={this.addNewCardFeature}\r\n          deleteCardFeatureByMove={this.deleteCardFeatureByMove}\r\n          hideFontSizeLabel={hideFontSizeLabel}\r\n          setHideFontSizeLabel={setHideFontSizeLabel}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport List from \"../../Containers/List/List\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMain = styled.main`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  width: auto;\r\n  min-height: calc(100vh - 40px);\r\n  background-color: #4bbf6b;\r\n  padding: 40px 6px 0px 6px;\r\n  overflow-x: scroll;\r\n`;\r\n\r\nconst StyledListInput = styled.input`\r\n  width: 265px;\r\n  background-color: #76ce8e;\r\n  border-radius: 4px;\r\n  padding: 12px 7.5px;\r\n  text-align: left;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  box-shadow: 0px 0px 1px 0px #888;\r\n  font-size: 15px;\r\n\r\n  &::placeholder {\r\n    color: white;\r\n  }\r\n\r\n  &:focus {\r\n    background-color: #fff !important;\r\n    ::placeholder {\r\n      color: black;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledWrapList = styled.div`\r\n  display: flex;\r\n  width: auto;\r\n  flex-direction: row;\r\n  height: auto;\r\n  background-color: transparent;\r\n  margin-bottom: 10px;\r\n  padding: 3px 5px;\r\n  border-radius: 5px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  align-self: flex-start;\r\n  width: 50%;\r\n  background-color: #5aac44;\r\n  border-radius: 5px;\r\n  color: white;\r\n  padding: 8px 20px;\r\n  margin-top: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #67ba50;\r\n  }\r\n`;\r\n\r\nconst StyledWrapAddListBtn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  align-self: flex-start;\r\n  width: 275px;\r\n  border-radius: 4px;\r\n  padding: 0px 5px 5px 5px;\r\n  padding-top: ${(props) => (props.bgc ? \"5px\" : \"0px\")};\r\n  background-color: ${(props) => (props.bgc ? \"#ebecf0\" : \"transparent\")};\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nfunction CoreFieldView({\r\n  scroll,\r\n  mousePositionX,\r\n  wholeList,\r\n  listOption,\r\n  addNewCard,\r\n  deleteCard,\r\n  showListHandle,\r\n  setListInput,\r\n  scrollPosition,\r\n  isDragAndDropTrue,\r\n  visibilityOptionFunction,\r\n  taskDetailsFunction,\r\n  updateListTitle,\r\n  moveListToAnotherPlace,\r\n  clearAllBlankSpan,\r\n  showList,\r\n  showAddListHandle,\r\n  listInputHandle,\r\n  listInputValue,\r\n  addNewList,\r\n  addNewListByKey,\r\n  elementHoverEnter,\r\n  elementHoverLeave,\r\n  hideFontSizeLabel,\r\n  setHideFontSizeLabel,\r\n}) {\r\n  return (\r\n    <StyledMain\r\n      className=\"main\"\r\n      onScroll={(e) => scroll(e)}\r\n      onMouseMove={(e) => mousePositionX(e)}\r\n    >\r\n      <StyledWrapList className=\"wrapList\">\r\n        {wholeList.map((list) => (\r\n          <List\r\n            wholeList={wholeList}\r\n            key={list.id}\r\n            id={list.id}\r\n            title={list.title}\r\n            tasks={list.tasks}\r\n            listOption={listOption}\r\n            addNewCard={addNewCard}\r\n            deleteCard={deleteCard}\r\n            showListHandle={showListHandle}\r\n            setListInput={setListInput}\r\n            scrollPosition={scrollPosition}\r\n            isDragAndDropTrue={isDragAndDropTrue}\r\n            visibilityOptionFunction={visibilityOptionFunction}\r\n            taskDetailsFunction={taskDetailsFunction}\r\n            updateListTitle={updateListTitle}\r\n            moveListToAnotherPlace={moveListToAnotherPlace}\r\n            clearAllBlankSpan={clearAllBlankSpan}\r\n            hideFontSizeLabel={hideFontSizeLabel}\r\n            setHideFontSizeLabel={setHideFontSizeLabel}\r\n          />\r\n        ))}\r\n        <StyledWrapAddListBtn bgc={showList ? true : false}>\r\n          <StyledListInput\r\n            bgc={showList ? true : false}\r\n            placeholder=\"Add another list\"\r\n            onClick={showAddListHandle}\r\n            onChange={(e) => listInputHandle(e)}\r\n            className=\"list\"\r\n            value={listInputValue}\r\n            onKeyPress={(e) => addNewListByKey(e)}\r\n            onMouseEnter={(e) => elementHoverEnter(e)}\r\n            onMouseLeave={(e) => elementHoverLeave(e)}\r\n          />\r\n          {showList ? (\r\n            <StyledButton\r\n              onClick={() =>\r\n                addNewList(listInputValue, showListHandle, setListInput)\r\n              }\r\n            >\r\n              Add List\r\n            </StyledButton>\r\n          ) : null}\r\n        </StyledWrapAddListBtn>\r\n      </StyledWrapList>\r\n    </StyledMain>\r\n  );\r\n}\r\n\r\nexport default CoreFieldView;\r\n","import React, { useState } from \"react\";\r\nimport CoreFieldView from \"../../components/CoreField/CoreFieldView\";\r\n\r\nconst MainField = ({\r\n  wholeList,\r\n  listOption,\r\n  addNewCard,\r\n  deleteCard,\r\n  addNewList,\r\n  updateListTitle,\r\n  elementHoverEnter,\r\n  elementHoverLeave,\r\n  visibilityOptionFunction,\r\n  taskDetailsFunction,\r\n  moveListToAnotherPlace,\r\n  clearAllBlankSpan,\r\n  hideFontSizeLabel,\r\n  setHideFontSizeLabel,\r\n}) => {\r\n  const [showList, showListHandle] = useState(false);\r\n  const [scrollPosition, updatedScrollPosition] = useState(0);\r\n  const [isDragDropTrue, isDragDropTrueFeature] = useState(\"\");\r\n\r\n  const showAddListHandle = () => {\r\n    showListHandle(true);\r\n  };\r\n\r\n  const [listInputValue, setListInput] = useState(\"\");\r\n\r\n  const listInputHandle = (e) => {\r\n    setListInput(e.target.value);\r\n  };\r\n\r\n  const addNewListByKey = (e) => {\r\n    if (e.which === 13 && showList) {\r\n      addNewList(listInputValue, showListHandle, setListInput);\r\n      showListHandle(true);\r\n    }\r\n  };\r\n\r\n  const scroll = (e) => {\r\n    const scrollPosition = e.target.scrollLeft;\r\n    updatedScrollPosition(scrollPosition);\r\n  };\r\n\r\n  const mousePositionX = (e) => {\r\n    const main = document.querySelector(\".main\");\r\n    const mainWidth = main.offsetWidth;\r\n    const mousePositionX = e.clientX;\r\n    if (mousePositionX <= 75 && isDragDropTrue) {\r\n      main.scroll({\r\n        left: 0,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n\r\n    if (mousePositionX >= mainWidth - 75 && isDragDropTrue) {\r\n      main.scroll({\r\n        left: mainWidth + 285 * (wholeList.length + 1),\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const isDragAndDropTrue = (isTrue) => {\r\n    isDragDropTrueFeature(isTrue);\r\n  };\r\n\r\n  return (\r\n    <CoreFieldView\r\n      scroll={scroll}\r\n      mousePositionX={mousePositionX}\r\n      wholeList={wholeList}\r\n      listOption={listOption}\r\n      addNewCard={addNewCard}\r\n      deleteCard={deleteCard}\r\n      showListHandle={showListHandle}\r\n      setListInput={setListInput}\r\n      scrollPosition={scrollPosition}\r\n      isDragAndDropTrue={isDragAndDropTrue}\r\n      visibilityOptionFunction={visibilityOptionFunction}\r\n      taskDetailsFunction={taskDetailsFunction}\r\n      updateListTitle={updateListTitle}\r\n      moveListToAnotherPlace={moveListToAnotherPlace}\r\n      clearAllBlankSpan={clearAllBlankSpan}\r\n      showList={showList}\r\n      showAddListHandle={showAddListHandle}\r\n      listInputHandle={listInputHandle}\r\n      listInputValue={listInputValue}\r\n      addNewList={addNewList}\r\n      addNewListByKey={addNewListByKey}\r\n      elementHoverEnter={elementHoverEnter}\r\n      elementHoverLeave={elementHoverLeave}\r\n      hideFontSizeLabel={hideFontSizeLabel}\r\n      setHideFontSizeLabel={setHideFontSizeLabel}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MainField;\r\n","const size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n  desktop: \"2560px\",\r\n};\r\n\r\nexport const device = {\r\n  mobileS: `(min-width: ${size.mobileS})`,\r\n  mobileM: `(min-width: ${size.mobileM})`,\r\n  mobileL: `(min-width: ${size.mobileL})`,\r\n  tablet: `(min-width: ${size.tablet})`,\r\n  laptop: `(min-width: ${size.laptop})`,\r\n  laptopL: `(min-width: ${size.laptopL})`,\r\n  desktop: `(min-width: ${size.desktop})`,\r\n  desktopL: `(min-width: ${size.desktop})`,\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../Style/MediaQuery/mq\";\r\n\r\nconst StyledColorDiv = styled.div`\r\n  width: 75px;\r\n  height: 75px;\r\n  border-radius: 5px;\r\n  margin-right: 5px;\r\n  margin-left: 5px;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    opacity: 0.75;\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    width: 45%;\r\n    height: 85px;\r\n  }\r\n`;\r\n\r\nconst StyledThemeDivTitle = styled.h3`\r\n  width: 100%;\r\n  padding: 10px 0px;\r\n  text-align: center;\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst StyledThemeDiv = styled.div`\r\n  position: fixed;\r\n  bottom: 17.5px;\r\n  right: 0;\r\n  width: 100%;\r\n  transform: ${(props) =>\r\n    props.showTheme ? \"translateX(0px)\" : \"translateX(100vw)\"};\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  background-color: #f4f5f7;\r\n  padding: 10px;\r\n  transition: 0.3s linear;\r\n  z-index: 999;\r\n\r\n  @media ${device.laptop} {\r\n    top: calc(0% + 40px);\r\n    right: 0;\r\n    width: 375px;\r\n    align-content: flex-start;\r\n  }\r\n`;\r\n\r\nfunction ThemeFieldView({ themeOption, changeColor, blockOfColors }) {\r\n  return (\r\n    <StyledThemeDiv showTheme={themeOption}>\r\n      <StyledThemeDivTitle>Colors</StyledThemeDivTitle>\r\n      {blockOfColors.map((block) => (\r\n        <StyledColorDiv\r\n          onClick={() =>\r\n            changeColor(\r\n              block.mainColor,\r\n              block.navColor,\r\n              block.listColor,\r\n              block.inputColor\r\n            )\r\n          }\r\n          style={{ backgroundColor: block.mainColor }}\r\n          key={block.mainColor}\r\n        />\r\n      ))}\r\n    </StyledThemeDiv>\r\n  );\r\n}\r\n\r\nexport default ThemeFieldView;\r\n","import React from \"react\";\r\nimport ThemeFieldView from \"../../components/ThemeField/ThemeFieldView\";\r\n\r\nfunction ThemeField({ themeOption, setWhichColor }) {\r\n  const changeColor = (mainColor, navColor, listColor, inputColor) => {\r\n    const main = document.querySelector(\".main\");\r\n    main.style.backgroundColor = mainColor;\r\n\r\n    const nav = document.querySelector(\".nav\");\r\n    nav.style.backgroundColor = navColor;\r\n\r\n    const lists = document.querySelectorAll(\".list\");\r\n    lists.forEach((list) => {\r\n      list.style.backgroundColor = listColor;\r\n    });\r\n\r\n    const inputs = document.querySelectorAll(\".item\");\r\n    inputs.forEach((input) => {\r\n      input.style.backgroundColor = inputColor;\r\n    });\r\n\r\n    setWhichColor([listColor]);\r\n  };\r\n\r\n  const blockOfColors = [\r\n    {\r\n      mainColor: \"#0079BF\",\r\n      navColor: \"#0067A3\",\r\n      listColor: \"#3D99CE\",\r\n      inputColor: \"#4D95BE\",\r\n    },\r\n    {\r\n      mainColor: \"#D29034\",\r\n      navColor: \"#B37B2C\",\r\n      listColor: \"#DDAB65\",\r\n      inputColor: \"#C9A26C\",\r\n    },\r\n    {\r\n      mainColor: \"#519839\",\r\n      navColor: \"#458131\",\r\n      listColor: \"#7BB168\",\r\n      inputColor: \"#7DA76F\",\r\n    },\r\n    {\r\n      mainColor: \"#B04632\",\r\n      navColor: \"#963C2B\",\r\n      listColor: \"#C37263\",\r\n      inputColor: \"#B5766B\",\r\n    },\r\n    {\r\n      mainColor: \"#89609E\",\r\n      navColor: \"#755286\",\r\n      listColor: \"#A586B5\",\r\n      inputColor: \"#9E86AB\",\r\n    },\r\n    {\r\n      mainColor: \"#CD5A91\",\r\n      navColor: \"#AE4D7B\",\r\n      listColor: \"#D981AB\",\r\n      inputColor: \"#C682A3\",\r\n    },\r\n    {\r\n      mainColor: \"#4BBF6B\",\r\n      navColor: \"#40A35B\",\r\n      listColor: \"#76CE8E\",\r\n      inputColor: \"#79BE8C\",\r\n    },\r\n    {\r\n      mainColor: \"#00AECC\",\r\n      navColor: \"#0094AE\",\r\n      listColor: \"#3DC1D8\",\r\n      inputColor: \"#4DB4C6\",\r\n    },\r\n    {\r\n      mainColor: \"#838C91\",\r\n      navColor: \"#6F777B\",\r\n      listColor: \"#A1A8AB\",\r\n      inputColor: \"#9BA0A3\",\r\n    },\r\n  ];\r\n  return (\r\n    <ThemeFieldView\r\n      changeColor={changeColor}\r\n      themeOption={themeOption}\r\n      blockOfColors={blockOfColors}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ThemeField;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledListBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 150px;\r\n  height: 250px;\r\n`;\r\n\r\nconst StyledList = styled.li`\r\n  list-style: none;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  border-radius: 3px;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 5px;\r\n  padding: 7px 10px;\r\n  font-size: 14px;\r\n  color: white;\r\n  transition: 0.1s linear;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.75);\r\n    transform: translateX(7.5px);\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: 13px;\r\n`;\r\n\r\nfunction OptionCoverListView({\r\n  deleteCard,\r\n  listId,\r\n  handleLabelsVisibility,\r\n  addPriorityForCards,\r\n  optionCoverData,\r\n  changeListInDetails,\r\n}) {\r\n  return (\r\n    <StyledListBlock className=\"cover_listBlock\">\r\n      <ul>\r\n        <StyledList onClick={() => handleLabelsVisibility(true)}>\r\n          <StyledIcon className=\"fas fa-tag\" />\r\n          Edit labels\r\n        </StyledList>\r\n        <StyledList\r\n          className=\"suggested\"\r\n          onClick={() => changeListInDetails(\"byNavMove\")}\r\n        >\r\n          <StyledIcon className=\"fas fa-long-arrow-alt-right\" />\r\n          Move\r\n        </StyledList>\r\n        <StyledList>\r\n          <StyledIcon className=\"far fa-clipboard\" />\r\n          Copy\r\n        </StyledList>\r\n        <StyledList>\r\n          <StyledIcon className=\"far fa-clock\" />\r\n          Date Change\r\n        </StyledList>\r\n        <StyledList\r\n          onClick={() => addPriorityForCards(optionCoverData[0].clickedCardId)}\r\n        >\r\n          <StyledIcon className=\"fas fa-exclamation-circle\" />\r\n          Priority\r\n        </StyledList>\r\n        <StyledList\r\n          onClick={(e) =>\r\n            deleteCard(listId, optionCoverData[0].clickedCardId, \"byButton\")\r\n          }\r\n        >\r\n          <StyledIcon className=\"fas fa-archive\" />\r\n          Archive\r\n        </StyledList>\r\n      </ul>\r\n    </StyledListBlock>\r\n  );\r\n}\r\n\r\nexport default OptionCoverListView;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledChangeListDetails = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-wrap: wrap;\r\n  position: fixed;\r\n  right: ${(props) => (props.rightPosition ? \"-120px\" : \"null\")};\r\n  top: ${(props) => (props.topPosition ? \"60px\" : \"null\")};\r\n  width: 300px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst StyledReplaceTitle = styled.h3`\r\n  width: 100%;\r\n  position: relative;\r\n  flex-grow: 1;\r\n  text-align: ${(props) => (props.alignCenter ? \"center\" : \"left\")};\r\n  font-size: 1.5rem;\r\n  border-bottom: ${(props) => (props.border ? \"1px solid #aaa\" : \"null\")};\r\n  padding-bottom: 6px;\r\n  color: #555;\r\n  font-weight: 400;\r\n  margin-bottom: ${(props) => (props.biggerMargin ? \"27.5px\" : \"5px\")};\r\n\r\n  & > .fa-times {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledSuggestList = styled.div`\r\n  width: 100%;\r\n  max-width: 275px;\r\n  word-break: break-all;\r\n  margin: 0 auto;\r\n  margin-bottom: 7px;\r\n  padding: 9px 7.5px;\r\n  font-size: 1.4rem;\r\n  background-color: #f5f6f8;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  color: black;\r\n  transition: 0.1s linear;\r\n  z-index: 9999;\r\n\r\n  &:hover {\r\n    background-color: #e6e8ed;\r\n  }\r\n`;\r\n\r\nfunction MoveToAnotherListBox({\r\n  taskTitle,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  taskId,\r\n  changeListInDetails,\r\n  taskTitleList,\r\n  byElement,\r\n  optionCover,\r\n}) {\r\n  return (\r\n    <StyledChangeListDetails\r\n      className=\"replaceCard suggested\"\r\n      rightPosition={optionCover}\r\n      topPosition={optionCover}\r\n    >\r\n      <StyledReplaceTitle border alignCenter biggerMargin className=\"suggested\">\r\n        Replace Card\r\n        <span\r\n          className=\"fas fa-times\"\r\n          onClick={() => changeListInDetails(byElement)}\r\n        ></span>\r\n      </StyledReplaceTitle>\r\n      <StyledReplaceTitle className=\"suggested\">Suggested</StyledReplaceTitle>\r\n      {wholeList.map((list) => (\r\n        <StyledSuggestList\r\n          className=\"suggested\"\r\n          onClick={() =>\r\n            moveCardToAnotherList(\r\n              taskTitle,\r\n              taskTitleList,\r\n              taskId,\r\n              list.id,\r\n              optionCover\r\n            )\r\n          }\r\n          key={list.id}\r\n        >\r\n          {list.title}\r\n        </StyledSuggestList>\r\n      ))}\r\n    </StyledChangeListDetails>\r\n  );\r\n}\r\n\r\nexport default MoveToAnotherListBox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledBack = styled.span`\r\n  position: fixed;\r\n  left: 10px;\r\n  top: 16px;\r\n  margin-left: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledNameLabels = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: column;\r\n  top: ${(props) => (props.detailCover ? \"96px\" : \"0\")};\r\n  left: ${(props) => (props.detailCover ? \"390px\" : \"0\")};\r\n  width: 310px;\r\n  height: 350px;\r\n  transform: translate(270px);\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst StyledLabelTitle = styled.h2`\r\n  border-bottom: 1px solid #42516e;\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n  margin: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledLabelInput = styled.input`\r\n  width: 95%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 7.5px 5px;\r\n  margin: 15px auto;\r\n  margin-top: ${(props) => (props.marginTop ? \"5px\" : \"15px\")};\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledName = styled.h3`\r\n  margin-left: 7px;\r\n  margin-top: 7px;\r\n`;\r\n\r\nconst StyledWrapColors = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  margin-top: 7px;\r\n`;\r\n\r\nconst StyledColorSquar = styled.div`\r\n  width: 18%;\r\n  height: 40px;\r\n  border-radius: 4px;\r\n  margin-right: 2.5px;\r\n  margin-left: 2.5px;\r\n  margin-bottom: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.85;\r\n  }\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  position: fixed;\r\n  right: 16px;\r\n  top: 16px;\r\n  margin-left: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: #5aac44;\r\n  border-radius: 4px;\r\n  margin: 0 auto;\r\n  margin-top: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: #6abc54;\r\n  }\r\n`;\r\n\r\nfunction LabelsNameColors({\r\n  nameLabelVisibility,\r\n  filteredColors,\r\n  detailCover,\r\n  nameLabelInput,\r\n  nameLabelInputValue,\r\n  choosedSquar,\r\n  saveNameLabel,\r\n  currentSquarEdit,\r\n}) {\r\n  return (\r\n    <StyledNameLabels\r\n      className=\"label\"\r\n      detailCover={detailCover}\r\n      onKeyPress={(e) => saveNameLabel(e)}\r\n    >\r\n      <StyledLabelTitle className=\"label\">\r\n        Change Label{\" \"}\r\n        <StyledX\r\n          className=\"fas fa-times\"\r\n          onClick={(e) => nameLabelVisibility(e, false, null)}\r\n        />\r\n        <StyledBack\r\n          className=\"fas fa-angle-left label\"\r\n          onClick={(e) => nameLabelVisibility(e, false, null, \"back\")}\r\n        />\r\n      </StyledLabelTitle>\r\n      <StyledName>Name</StyledName>\r\n      <StyledLabelInput\r\n        className=\"label\"\r\n        marginTop\r\n        onChange={(e) => nameLabelInput(e)}\r\n        value={nameLabelInputValue}\r\n      />\r\n      <StyledName>Colors</StyledName>\r\n      <StyledWrapColors>\r\n        {filteredColors.map((color) => (\r\n          <StyledColorSquar\r\n            style={{\r\n              backgroundColor: `${color.color}`,\r\n              border:\r\n                currentSquarEdit === color.color ? \"1.5px solid black\" : null,\r\n            }}\r\n            className=\"label_colorSquar\"\r\n            key={color.color}\r\n            id={color.color}\r\n            onClick={(e) => choosedSquar(e, color.color)}\r\n          />\r\n        ))}\r\n      </StyledWrapColors>\r\n      <StyledButton className=\"label_saveBtn\" onClick={(e) => saveNameLabel(e)}>\r\n        SAVE\r\n      </StyledButton>\r\n    </StyledNameLabels>\r\n  );\r\n}\r\n\r\nexport default LabelsNameColors;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLabels = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: column;\r\n  top: ${(props) => (props.detailCover ? \"96px\" : \"0\")};\r\n  left: ${(props) => (props.detailCover ? \"390px\" : \"0\")};\r\n  width: 310px;\r\n  height: 555px;\r\n  transform: translate(270px);\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst StyledLabelWrapEle = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledLabelElement = styled.div`\r\n  position: relative;\r\n  width: 80%;\r\n  height: 35px;\r\n  border-radius: 5px;\r\n  margin: 0 10px;\r\n  margin-bottom: 4px;\r\n  list-style: none;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    border-left: 10px solid rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  align-self: center;\r\n  border-radius: 3px;\r\n  margin: 0 auto;\r\n  margin-bottom: 4px;\r\n  padding: 10.5px;\r\n  font-size: 15px;\r\n  color: #aaa;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #eee;\r\n  }\r\n`;\r\n\r\nconst StyledLabelTitle = styled.h2`\r\n  border-bottom: 1px solid #42516e;\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n  margin: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledLabelInput = styled.input`\r\n  width: 95%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 7.5px 5px;\r\n  margin: 15px auto;\r\n  margin-top: ${(props) => (props.marginTop ? \"5px\" : \"15px\")};\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\n// const StyledBtn = styled.div`\r\n//   width: 95%;\r\n//   background-color: #f5f6f8;\r\n//   text-align: center;\r\n//   padding: 8px 5px;\r\n//   margin: 0 auto;\r\n//   margin-top: 15px;\r\n//   font-size: 13px;\r\n//   color: #42516e;\r\n//   box-shadow: 0px 0px 1px 1.5px #ebecef;\r\n//   cursor: pointer;\r\n\r\n//   &:hover {\r\n//     background-color: #e5e6e8;\r\n//   }\r\n// `;\r\n\r\nconst StyledX = styled.span`\r\n  position: fixed;\r\n  right: 16px;\r\n  top: 16px;\r\n  margin-left: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledIconCheck = styled.div`\r\n  display: none;\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 17.5px;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 10px;\r\n  color: #fff;\r\n`;\r\n\r\nconst StyledNameSox = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  color: white;\r\n  font-weight: 600;\r\n  font-size: 13px;\r\n`;\r\nfunction LabelsChooseColors({\r\n  detailCover,\r\n  handleLabelsVisibility,\r\n  filteredColors,\r\n  nameLabelVisibility,\r\n  toggleLabelColorToCard,\r\n  taskId,\r\n  generateCheckIcon,\r\n  searchLabelColor,\r\n  searchInputLabel,\r\n}) {\r\n  useEffect(() => {\r\n    generateCheckIcon();\r\n  });\r\n\r\n  return (\r\n    <StyledLabels className=\"label\" detailCover={detailCover}>\r\n      <StyledLabelTitle className=\"label\">\r\n        Labels{\" \"}\r\n        <StyledX\r\n          className=\"fas fa-times\"\r\n          onClick={() => handleLabelsVisibility(false)}\r\n        />\r\n      </StyledLabelTitle>\r\n      <StyledLabelInput\r\n        placeholder=\"Search Labels...\"\r\n        className=\"label\"\r\n        onChange={(e) => searchLabelColor(e)}\r\n        value={searchInputLabel}\r\n      />\r\n      {filteredColors.map((color) => (\r\n        <StyledLabelWrapEle key={color.color} className=\"label\">\r\n          <StyledLabelElement\r\n            onClick={() => toggleLabelColorToCard(color.color, taskId)}\r\n            style={{ backgroundColor: `${color.color}` }}\r\n            className=\"label\"\r\n            id={color.color}\r\n          >\r\n            <StyledNameSox>{color.value}</StyledNameSox>\r\n            <StyledIconCheck\r\n              className=\"fas fa-check\"\r\n              id={`${color.color}Check`}\r\n            />\r\n          </StyledLabelElement>{\" \"}\r\n          <StyledIcon\r\n            className=\"fas fa-pen label\"\r\n            onClick={(e) => nameLabelVisibility(e, true, color.color, \"edit\")}\r\n          />\r\n        </StyledLabelWrapEle>\r\n      ))}\r\n      {/* <StyledBtn className=\"label\">Create Label</StyledBtn> */}\r\n    </StyledLabels>\r\n  );\r\n}\r\n\r\nexport default LabelsChooseColors;\r\n","import React from \"react\";\r\nimport LabelsNameColors from \"./LabelView/LabelsNameColors\";\r\nimport LabelsChooseColors from \"./LabelView/LabelsChooseColors\";\r\n\r\nfunction LabelsView({\r\n  handleLabelsVisibility,\r\n  detailCover,\r\n  nameLabelVisibility,\r\n  labelVisibility,\r\n  toggleLabelColorToCard,\r\n  taskId,\r\n  generateCheckIcon,\r\n  searchLabelColor,\r\n  searchInputLabel,\r\n  filteredColors,\r\n  nameLabelInput,\r\n  nameLabelInputValue,\r\n  choosedSquar,\r\n  saveNameLabel,\r\n  currentSquarEdit,\r\n}) {\r\n  return (\r\n    <>\r\n      {labelVisibility ? (\r\n        <LabelsNameColors\r\n          nameLabelVisibility={nameLabelVisibility}\r\n          filteredColors={filteredColors}\r\n          detailCover={detailCover}\r\n          nameLabelInput={nameLabelInput}\r\n          nameLabelInputValue={nameLabelInputValue}\r\n          choosedSquar={choosedSquar}\r\n          saveNameLabel={saveNameLabel}\r\n          currentSquarEdit={currentSquarEdit}\r\n        />\r\n      ) : (\r\n        <LabelsChooseColors\r\n          detailCover={detailCover}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          filteredColors={filteredColors}\r\n          nameLabelVisibility={nameLabelVisibility}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          taskId={taskId}\r\n          generateCheckIcon={generateCheckIcon}\r\n          searchLabelColor={searchLabelColor}\r\n          searchInputLabel={searchInputLabel}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LabelsView;\r\n","import React, { Component } from \"react\";\r\nimport LabelsView from \"../../components/Labels/LabelsView\";\r\n\r\nclass Labels extends Component {\r\n  state = {\r\n    labelVisibility: false,\r\n    searchInputLabel: \"\",\r\n    nameLabelInputValue: \"\",\r\n    currentMatchedColors: \"\",\r\n    currentSquarEdit: \"\",\r\n  };\r\n\r\n  nameLabelVisibility = (e, toggle, colorId, from) => {\r\n    if (from === \"back\") {\r\n      this.setState({\r\n        labelVisibility: toggle,\r\n      });\r\n      return;\r\n    }\r\n    if (colorId === null) {\r\n      this.setState({\r\n        labelVisibility: toggle,\r\n      });\r\n      this.props.handleLabelsVisibility(false);\r\n      return;\r\n    }\r\n    if (from === \"edit\") {\r\n      const isAnyTextAlready = e.target.parentNode.textContent;\r\n      this.setState({\r\n        labelVisibility: toggle,\r\n        currentSquarEdit: colorId,\r\n        currentMatchedColors: colorId,\r\n        nameLabelInputValue: isAnyTextAlready,\r\n      });\r\n    }\r\n  };\r\n\r\n  generateCheckIcon = () => {\r\n    const matchedBadges = this.props.listOfAllBadges.filter(\r\n      (ele) => ele.id === this.props.taskId\r\n    );\r\n    if (matchedBadges.length !== 0) {\r\n      matchedBadges.forEach((element) => {\r\n        const currentCheckIcon = document.getElementById(\r\n          `${element.color}Check`\r\n        );\r\n        if (currentCheckIcon) {\r\n          currentCheckIcon.style.display = \"block\";\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  searchLabelColor = (e) => {\r\n    this.setState({\r\n      searchInputLabel: e.target.value.substr(0, 17),\r\n    });\r\n  };\r\n\r\n  nameLabelInput = (e) => {\r\n    this.setState({\r\n      nameLabelInputValue: e.target.value.substr(0, 17),\r\n    });\r\n  };\r\n\r\n  choosedSquar = (e, colorId) => {\r\n    const allSquars = document.querySelectorAll(\".label_colorSquar\");\r\n    allSquars.forEach((ele) => {\r\n      ele.style.border = \"none\";\r\n    });\r\n    e.target.style.border = \"1.5px solid black\";\r\n\r\n    this.setState({\r\n      currentMatchedColors: colorId,\r\n    });\r\n  };\r\n\r\n  saveNameLabel = (e) => {\r\n    //Zmieniamy wartość name w badges ( renderuje sie nazwa w optionCover i detailCover lables)\r\n    const {\r\n      listOfAllBadges,\r\n      listOfAllTasksId,\r\n      labelColors,\r\n      setLabelColors,\r\n      handleLabelsVisibility,\r\n    } = this.props;\r\n\r\n    if (e.target.className.includes(\"label_saveBtn\") || e.which === 13) {\r\n      const { currentMatchedColors, nameLabelInputValue } = this.state;\r\n\r\n      if (currentMatchedColors.length === 0) return; // Return If color isn't choosed\r\n      const matchedBadges = listOfAllBadges.filter(\r\n        (ele) => ele.color === currentMatchedColors\r\n      );\r\n\r\n      matchedBadges.forEach((ele) => {\r\n        ele.name = nameLabelInputValue;\r\n      });\r\n\r\n      //Od razu pojawia się nazwa labeli w srodku labeli w CARD\r\n      listOfAllTasksId.forEach((ele) => {\r\n        const matchedLabelInCard = document.getElementById(\r\n          `${currentMatchedColors}${ele}`\r\n        );\r\n\r\n        if (matchedLabelInCard) {\r\n          matchedLabelInCard.textContent = nameLabelInputValue;\r\n        }\r\n      });\r\n\r\n      // zmieniamy odgórne labelColors by wszedzie wyswietlalo sie od razu i tak samo przy tworzeniu nowych\r\n      const index = labelColors.findIndex(\r\n        (ele) => ele.color === currentMatchedColors\r\n      );\r\n\r\n      const copyOfLabelColor = [...labelColors];\r\n      copyOfLabelColor.splice(index, 1, {\r\n        color: labelColors[index].color,\r\n        colorName: labelColors[index].colorName,\r\n        value: nameLabelInputValue,\r\n      });\r\n\r\n      //Update\r\n      setLabelColors(copyOfLabelColor);\r\n      this.nameLabelVisibility(false);\r\n      handleLabelsVisibility(false);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      handleLabelsVisibility,\r\n      detailCover,\r\n      addLabelColor,\r\n      optionCoverData,\r\n      toggleLabelColorToCard,\r\n      taskId,\r\n      labelColors,\r\n    } = this.props;\r\n\r\n    const {\r\n      searchInputLabel,\r\n      labelVisibility,\r\n      nameLabelInputValue,\r\n      currentSquarEdit,\r\n    } = this.state;\r\n\r\n    const copyOfColorsArray = [...labelColors];\r\n    const filteredColors = copyOfColorsArray.filter((ele) =>\r\n      ele.colorName.toUpperCase().includes(searchInputLabel.toUpperCase())\r\n    );\r\n    return (\r\n      <LabelsView\r\n        handleLabelsVisibility={handleLabelsVisibility}\r\n        detailCover={detailCover}\r\n        nameLabelVisibility={this.nameLabelVisibility}\r\n        labelVisibility={labelVisibility}\r\n        addLabelColor={addLabelColor}\r\n        optionCoverData={optionCoverData}\r\n        toggleLabelColorToCard={toggleLabelColorToCard}\r\n        taskId={taskId}\r\n        generateCheckIcon={this.generateCheckIcon}\r\n        searchLabelColor={this.searchLabelColor}\r\n        searchInputLabel={searchInputLabel}\r\n        filteredColors={filteredColors}\r\n        nameLabelInput={this.nameLabelInput}\r\n        nameLabelInputValue={nameLabelInputValue}\r\n        choosedSquar={this.choosedSquar}\r\n        saveNameLabel={this.saveNameLabel}\r\n        currentSquarEdit={currentSquarEdit}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Labels;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport OptionCoverListView from \"./OptionCoverListView/OptionCoverListView\";\r\nimport MoveToAnotherListBox from \"../MoveToAnotherList/MoveToAnotherListBox\";\r\nimport Labels from \"../../Containers/Labels/Labels\";\r\n\r\nconst StyledCover = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.65);\r\n  z-index: 0;\r\n`;\r\n\r\nconst StyledOptionBox = styled.div`\r\n  position: fixed;\r\n  transform: translate(0, -50%);\r\n  height: 400px;\r\n  width: 450px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  border-radius: 5px;\r\n  z-index: 999;\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  height: 100px;\r\n  width: 260px;\r\n  padding: 7.5px;\r\n  padding-top: 0px;\r\n  border-radius: 5px;\r\n  resize: none;\r\n`;\r\n\r\nconst StyledSaveButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: #5aac44;\r\n  border-radius: 4px;\r\n  margin-top: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: #6abc54;\r\n  }\r\n`;\r\n\r\nconst StyledWrapLabels = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 260px;\r\n  min-height: 10px;\r\n  padding: 5px 5px 0px 5px;\r\n  border-radius: 5px;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst StyledWrapTextAndLabels = styled.div`\r\n  width: 260px;\r\n  height: 110px;\r\n  align-self: flex-start;\r\n  border-radius: 5px;\r\n  margin-right: 10px;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst OptionCover = ({\r\n  optionCoverData,\r\n  taskTitleFeature,\r\n  taskTitle,\r\n  updateCard,\r\n  deleteCard,\r\n  handleLabelsVisibility,\r\n  labelsVisibility,\r\n  toggleLabelColorToCard,\r\n  listOfAllBadges,\r\n  matchedColorsToThisCard,\r\n  listOfAllTasksId,\r\n  labelColors,\r\n  setLabelColors,\r\n  addPriorityForCards,\r\n  toggleDetailMove,\r\n  changeListInDetails,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n}) => {\r\n  return (\r\n    <StyledCover className=\"coverOption\">\r\n      <StyledOptionBox className=\"cover_box\">\r\n        <StyledWrapTextAndLabels>\r\n          <StyledWrapLabels className=\"coverOption_wrapLabel\">\r\n            {matchedColorsToThisCard.map((ele) => (\r\n              <div\r\n                key={ele.color}\r\n                id={`${ele.labelId}OptionCover`}\r\n                className={`labelElement`}\r\n                style={{ backgroundColor: ele.color }}\r\n              >\r\n                {ele.name}\r\n              </div>\r\n            ))}\r\n          </StyledWrapLabels>\r\n          <StyledTextArea\r\n            className=\"textArea_Option\"\r\n            onChange={(e) => taskTitleFeature(e)}\r\n            onKeyPress={(e) =>\r\n              updateCard(\r\n                e,\r\n                taskTitle,\r\n                optionCoverData[0].listId,\r\n                optionCoverData[0].clickedCardId\r\n              )\r\n            }\r\n            value={taskTitle}\r\n          />\r\n          <StyledSaveButton\r\n            className=\"cover_saveBtn\"\r\n            onClick={(e) =>\r\n              updateCard(\r\n                e,\r\n                taskTitle,\r\n                optionCoverData[0].listId,\r\n                optionCoverData[0].clickedCardId\r\n              )\r\n            }\r\n          >\r\n            Save\r\n          </StyledSaveButton>\r\n        </StyledWrapTextAndLabels>\r\n        <OptionCoverListView\r\n          deleteCard={deleteCard}\r\n          taskTitle={taskTitle}\r\n          listId={optionCoverData[0].listId}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          optionCoverData={optionCoverData}\r\n          addPriorityForCards={addPriorityForCards}\r\n          changeListInDetails={changeListInDetails}\r\n        />\r\n\r\n        {labelsVisibility ? (\r\n          <Labels\r\n            handleLabelsVisibility={handleLabelsVisibility}\r\n            optionCoverData={optionCoverData}\r\n            toggleLabelColorToCard={toggleLabelColorToCard}\r\n            taskId={optionCoverData[0].clickedCardId}\r\n            listOfAllBadges={listOfAllBadges}\r\n            listOfAllTasksId={listOfAllTasksId}\r\n            labelColors={labelColors}\r\n            setLabelColors={setLabelColors}\r\n          />\r\n        ) : null}\r\n        {toggleDetailMove ? (\r\n          <MoveToAnotherListBox\r\n            taskTitle={taskTitle}\r\n            wholeList={wholeList}\r\n            moveCardToAnotherList={moveCardToAnotherList}\r\n            taskId={optionCoverData[0].clickedCardId}\r\n            changeListInDetails={changeListInDetails}\r\n            taskTitleList={optionCoverData[0].currentListName}\r\n            byElement={\"byOptionMove\"}\r\n            optionCover={true}\r\n          />\r\n        ) : null}\r\n      </StyledOptionBox>\r\n    </StyledCover>\r\n  );\r\n};\r\n\r\nexport default OptionCover;\r\n","import React, { Component } from \"react\";\r\nimport OptionCoverView from \"../../components/OptionCover/OptionCoverView\";\r\n\r\nclass OptionCover extends Component {\r\n  state = {\r\n    taskTitle: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setOptionCoverPostion(this.props.optionCoverData);\r\n    this.setState({\r\n      taskTitle: this.props.optionCoverData[0].taskTitle.taskName,\r\n    });\r\n  }\r\n\r\n  setOptionCoverPostion = (taskData) => {\r\n    const mainOffsetTop = document.querySelector(\".main\").offsetTop;\r\n    const coverBox = document.querySelector(\".cover_box\");\r\n    const coverBoxHeight = coverBox.offsetHeight;\r\n    const scrollPosition = Math.floor(\r\n      document.querySelector(\".main\").scrollLeft\r\n    );\r\n\r\n    //ListIndex, when list is moving to another place\r\n    const listIndex = taskData[0].wholeList.findIndex(\r\n      (element) => element.id === taskData[0].listId\r\n    );\r\n\r\n    const positionY =\r\n      mainOffsetTop + taskData[0].top - 8 + coverBoxHeight / 1.6;\r\n    const positionX = 285 * listIndex + 18.5 - scrollPosition;\r\n\r\n    //Top and Left BOX Position Calculate\r\n    coverBox.style.top = `${positionY}px`;\r\n    coverBox.style.left = `${positionX}px`;\r\n  };\r\n\r\n  taskTitleFeature = (e) => {\r\n    this.setState({ taskTitle: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      optionCoverData,\r\n      updateCard,\r\n      deleteCard,\r\n      handleLabelsVisibility,\r\n      labelsVisibility,\r\n      toggleLabelColorToCard,\r\n      listOfAllBadges,\r\n      listOfAllTasksId,\r\n      labelColors,\r\n      setLabelColors,\r\n      addPriorityForCards,\r\n      toggleDetailMove,\r\n      changeListInDetails,\r\n      wholeList,\r\n      moveCardToAnotherList,\r\n    } = this.props;\r\n\r\n    const { taskTitle } = this.state;\r\n\r\n    const copyOfallBadges = [...listOfAllBadges];\r\n\r\n    const matchedColorsToThisCard = copyOfallBadges.filter(\r\n      (ele) => ele.id === optionCoverData[0].clickedCardId\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <OptionCoverView\r\n          optionCoverData={optionCoverData}\r\n          taskTitleFeature={this.taskTitleFeature}\r\n          taskTitle={taskTitle}\r\n          updateCard={updateCard}\r\n          deleteCard={deleteCard}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          labelsVisibility={labelsVisibility}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          addPriorityForCards={addPriorityForCards}\r\n          toggleDetailMove={toggleDetailMove}\r\n          changeListInDetails={changeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OptionCover;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTaskName = styled.input`\r\n  width: calc(100% - 50px);\r\n  background-color: #f4f5f7;\r\n  border-radius: 1px;\r\n  padding: 5px 4px;\r\n  font-size: 1.8rem;\r\n  font-weight: 600;\r\n  color: #172b4d;\r\n\r\n  &:focus {\r\n    background-color: white;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nfunction Detail_Input({\r\n  taskTitle,\r\n  taskTitleFeature,\r\n  updateCard,\r\n  idUpdatedList,\r\n  taskId,\r\n}) {\r\n  return (\r\n    <>\r\n      <StyledTaskName\r\n        className=\"input\"\r\n        value={taskTitle}\r\n        onChange={(e) => taskTitleFeature(e)}\r\n      />\r\n      <span\r\n        className=\"fas fa-times close\"\r\n        onClick={(e) => updateCard(e, taskTitle, idUpdatedList, taskId)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Detail_Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MoveToAnotherListBox from \"../../../MoveToAnotherList/MoveToAnotherListBox\";\r\n\r\nconst StyledLightText = styled.h3`\r\n  margin-top: 7.5px;\r\n  font-weight: 400;\r\n  font-size: 1.4rem;\r\n  color: #172b4d;\r\n`;\r\n\r\nconst StyledStrongText = styled.strong`\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction DetailSuggestedElement({\r\n  changeListInDetails,\r\n  taskTitleList,\r\n  taskTitle,\r\n  visibilityChangeListInDetails,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  taskId,\r\n}) {\r\n  return (\r\n    <StyledLightText className=\"suggested\">\r\n      On the list{\" \"}\r\n      <StyledStrongText\r\n        onClick={() => changeListInDetails(\"byListName\")}\r\n        className=\"suggested\"\r\n      >\r\n        {taskTitleList}\r\n      </StyledStrongText>\r\n      {visibilityChangeListInDetails ? (\r\n        <MoveToAnotherListBox\r\n          taskTitle={taskTitle}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          taskId={taskId}\r\n          changeListInDetails={changeListInDetails}\r\n          taskTitleList={taskTitleList}\r\n          byElement=\"byListName\"\r\n        />\r\n      ) : null}\r\n    </StyledLightText>\r\n  );\r\n}\r\n\r\nexport default DetailSuggestedElement;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MoveToAnotherListBox from \"../../../MoveToAnotherList/MoveToAnotherListBox\";\r\nimport { device } from \"../../../../Style/MediaQuery/mq\";\r\n\r\nconst StyledDetailNav = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 300px;\r\n  @media ${device.laptop} {\r\n    width: 200px;\r\n  }\r\n`;\r\n\r\nconst StyledDetailUl = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  @media ${device.laptop} {\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: 13px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledDetailList = styled.li`\r\n  width: ${(props) => (props.first ? \"100%\" : \"45%\")};\r\n  background-color: ${(props) => (props.first ? \"transparent\" : \"#eaecf0\")};\r\n  border-radius: ${(props) => (props.first ? \"null\" : \"3px\")};\r\n  padding: 7.5px;\r\n  margin-right: ${(props) => (props.first ? \"0px\" : \"10px\")};\r\n  margin-bottom: ${(props) => (props.first ? \"5px\" : \"10px\")};\r\n  list-style: none;\r\n  font-size: 14px;\r\n  color: #42516e;\r\n  cursor: ${(props) => (props.first ? \"initial\" : \"pointer\")};\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.first ? \"transparent\" : \"#dadce0\")};\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nfunction DetailCoverNav({\r\n  handleLabelsVisibility,\r\n  labelsVisibility,\r\n  deleteCard,\r\n  idUpdatedList,\r\n  taskId,\r\n  addPriorityForCards,\r\n  changeListInDetails,\r\n  toggleDetailMove,\r\n  taskTitle,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  taskTitleList,\r\n}) {\r\n  return (\r\n    <StyledDetailNav>\r\n      <StyledDetailUl>\r\n        <StyledDetailList first> ADD TO CARD</StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={() => handleLabelsVisibility(!labelsVisibility)}\r\n          className=\"label\"\r\n        >\r\n          <StyledIcon className=\"fas fa-tag label\" />\r\n          Edit labels\r\n        </StyledDetailList>\r\n        <StyledDetailList>\r\n          <StyledIcon className=\"fas fa-list-alt\" />\r\n          Tasks list\r\n        </StyledDetailList>\r\n        <StyledDetailList>\r\n          <StyledIcon className=\"far fa-clock\" />\r\n          Term\r\n        </StyledDetailList>\r\n        <StyledDetailList>\r\n          <StyledIcon className=\"far fa-image\" />\r\n          Cover\r\n        </StyledDetailList>\r\n      </StyledDetailUl>\r\n      <StyledDetailUl>\r\n        <StyledDetailList first> ACTIONS</StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={() => changeListInDetails(\"byNavMove\")}\r\n          className=\"suggested\"\r\n        >\r\n          <StyledIcon className=\"fas fa-long-arrow-alt-right\" />\r\n          Move\r\n        </StyledDetailList>\r\n        <StyledDetailList>\r\n          <StyledIcon className=\"far fa-clipboard\" />\r\n          Copy\r\n        </StyledDetailList>\r\n        <StyledDetailList onClick={() => addPriorityForCards(taskId)}>\r\n          <StyledIcon className=\"fas fa-exclamation-circle\" />\r\n          Priority\r\n        </StyledDetailList>\r\n        <StyledDetailList\r\n          className=\"delete\"\r\n          onClick={(e) => deleteCard(idUpdatedList, taskId, \"byButton\")}\r\n        >\r\n          <StyledIcon className=\"fas fa-archive\" />\r\n          Archive\r\n        </StyledDetailList>\r\n      </StyledDetailUl>\r\n      {toggleDetailMove ? (\r\n        <MoveToAnotherListBox\r\n          taskTitle={taskTitle}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          taskId={taskId}\r\n          changeListInDetails={changeListInDetails}\r\n          taskTitleList={taskTitleList}\r\n          byElement=\"byNavMove\"\r\n        />\r\n      ) : null}\r\n    </StyledDetailNav>\r\n  );\r\n}\r\n\r\nexport default DetailCoverNav;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledDetailMarks = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst StyledDetailDescription = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  margin-top: 25px;\r\n`;\r\n\r\nconst StyledTitle = styled.h2`\r\n  width: 100%;\r\n  color: #42516e;\r\n  margin-bottom: 10px;\r\n  margin-top: ${(props) => (props.marginTop ? \"10px\" : \"none\")};\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 90%;\r\n  background-color: #eaecf0;\r\n  margin: 0px auto 10px auto;\r\n  padding: 7.5px 5px;\r\n  border-radius: 3px;\r\n  min-height: 75px;\r\n  resize: none;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: ${(props) => (props.biggerSize ? \"23px\" : \"17px\")};\r\n  color: #42516e;\r\n  cursor: ${(props) => (props.pointer ? \"pointer\" : \"none\")};\r\n`;\r\n\r\nconst StyledLabelsWrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledPlaceholder = styled.h3`\r\n  text-align: center;\r\n  color: #172b4d;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: ${(props) => (props.greyBgc ? \"#EAECF0\" : \"#5aac44\")};\r\n  border-radius: 4px;\r\n  margin-right: 6px;\r\n  color: ${(props) => (props.marginLeft ? \"#42516e\" : \"#fff\")};\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.hoverBgc ? \"#dadce0 \" : \"#6abc54\")};\r\n  }\r\n`;\r\n\r\nconst StyledCommentOptionWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst StyledComment = styled.h3`\r\n  width: 300px;\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n  margin-right: 10px;\r\n  word-break: break-all;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction DetailCoverMarks({\r\n  matchedColorsToThisCard,\r\n  handleLabelsVisibility,\r\n  labelsVisibility,\r\n  toggleCommentFeature,\r\n  toggleCommentVisibility,\r\n  commentChange,\r\n  commentValue,\r\n  addCommentToCard,\r\n  taskId,\r\n  listOfAllComments,\r\n  editCommentToCard,\r\n}) {\r\n  return (\r\n    <StyledDetailMarks>\r\n      <div>\r\n        <StyledTitle marginTop>\r\n          <StyledIcon className=\"fas fa-tag\" />\r\n          Labels\r\n        </StyledTitle>\r\n        {matchedColorsToThisCard.length === 0 ? (\r\n          <StyledPlaceholder>This card have no labels yet</StyledPlaceholder>\r\n        ) : (\r\n          <StyledLabelsWrap className=\"detailCover_labelsWrap\">\r\n            {matchedColorsToThisCard.map((ele) => (\r\n              <div\r\n                key={ele.color}\r\n                id={`${ele.labelId}DetailCover`}\r\n                className={`labelElement_DetailCover`}\r\n                style={{\r\n                  backgroundColor: ele.color,\r\n                  margin: \"0px 5px 5px 0px\",\r\n                }}\r\n                onClick={() => handleLabelsVisibility(!labelsVisibility)}\r\n              >\r\n                {ele.name}\r\n              </div>\r\n            ))}\r\n          </StyledLabelsWrap>\r\n        )}\r\n      </div>\r\n      <StyledDetailDescription>\r\n        <StyledTitle>\r\n          <StyledIcon className=\"fas fa-stream\" />\r\n          Description\r\n          <StyledButton\r\n            greyBgc\r\n            marginLeft\r\n            hoverBgc\r\n            style={{\r\n              color: `${\r\n                listOfAllComments.length !== 0 ? \"#42516e\" : \"rgba(0,0,0,0)\"\r\n              }`,\r\n              backgroundColor: `${\r\n                listOfAllComments.length !== 0 ? \"#EAECF0\" : \"rgba(0,0,0,0)\"\r\n              }`,\r\n              cursor: `${\r\n                listOfAllComments.length !== 0 ? \"pointer\" : \"initial\"\r\n              }`,\r\n              marginLeft: `${listOfAllComments.length !== 0 ? \"6px\" : \"50px\"}`,\r\n            }}\r\n            onClick={(e) => editCommentToCard(toggleCommentVisibility)}\r\n          >\r\n            Edit\r\n          </StyledButton>\r\n        </StyledTitle>\r\n        {listOfAllComments.length !== 0 ? null : (\r\n          <StyledTextArea\r\n            placeholder=\"Click to add more detailed comment...\"\r\n            className=\"input textArea\"\r\n            onClick={() => toggleCommentFeature(true)}\r\n            onChange={(e) => commentChange(e)}\r\n            onKeyPress={(e) => addCommentToCard(e, taskId, commentValue)}\r\n            value={commentValue}\r\n          />\r\n        )}\r\n        {toggleCommentVisibility ? (\r\n          <StyledCommentOptionWrap>\r\n            <StyledButton\r\n              className=\"commentBtn\"\r\n              onClick={(e) => addCommentToCard(e, taskId, commentValue)}\r\n            >\r\n              SAVE\r\n            </StyledButton>\r\n            <StyledIcon biggerSize pointer className=\"far fa-times-circle\" />\r\n          </StyledCommentOptionWrap>\r\n        ) : null}\r\n        {listOfAllComments.map((ele) => (\r\n          <StyledComment\r\n            key={ele.id}\r\n            onClick={(e) => editCommentToCard(toggleCommentVisibility)}\r\n          >\r\n            {ele.comment}\r\n          </StyledComment>\r\n        ))}\r\n      </StyledDetailDescription>\r\n    </StyledDetailMarks>\r\n  );\r\n}\r\n\r\nexport default DetailCoverMarks;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../Style/MediaQuery/mq\";\r\nimport DetailCoverNav from \"./DetailCoverNav/DetailCoverNav\";\r\nimport DetailCoverMarks from \"./DetailCoverMarks/DetailCoverMarks\";\r\n\r\nconst StyledDetailToolsWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 600px;\r\n  margin-top: 10px;\r\n  @media ${device.laptop} {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nfunction DetailTools({\r\n  labelsVisibility,\r\n  handleLabelsVisibility,\r\n  deleteCard,\r\n  idUpdatedList,\r\n  taskId,\r\n  matchedColorsToThisCard,\r\n  addPriorityForCards,\r\n  toggleCommentFeature,\r\n  toggleCommentVisibility,\r\n  commentChange,\r\n  commentValue,\r\n  addCommentToCard,\r\n  listOfAllComments,\r\n  editCommentToCard,\r\n  changeListInDetails,\r\n  toggleDetailMove,\r\n  taskTitle,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  taskTitleList,\r\n}) {\r\n  return (\r\n    <StyledDetailToolsWrap>\r\n      <DetailCoverMarks\r\n        matchedColorsToThisCard={matchedColorsToThisCard}\r\n        handleLabelsVisibility={handleLabelsVisibility}\r\n        labelsVisibility={labelsVisibility}\r\n        toggleCommentFeature={toggleCommentFeature}\r\n        toggleCommentVisibility={toggleCommentVisibility}\r\n        commentChange={commentChange}\r\n        commentValue={commentValue}\r\n        addCommentToCard={addCommentToCard}\r\n        taskId={taskId}\r\n        listOfAllComments={listOfAllComments}\r\n        editCommentToCard={editCommentToCard}\r\n      />\r\n      <DetailCoverNav\r\n        handleLabelsVisibility={handleLabelsVisibility}\r\n        labelsVisibility={labelsVisibility}\r\n        deleteCard={deleteCard}\r\n        idUpdatedList={idUpdatedList}\r\n        taskId={taskId}\r\n        addPriorityForCards={addPriorityForCards}\r\n        changeListInDetails={changeListInDetails}\r\n        toggleDetailMove={toggleDetailMove}\r\n        taskTitle={taskTitle}\r\n        wholeList={wholeList}\r\n        moveCardToAnotherList={moveCardToAnotherList}\r\n        taskTitleList={taskTitleList}\r\n      />\r\n    </StyledDetailToolsWrap>\r\n  );\r\n}\r\n\r\nexport default DetailTools;\r\n","import React from \"react\";\r\nimport DetailInputElement from \"../DetailElements/DetailInputElement\";\r\nimport DetailSuggestedElement from \"../DetailElements/DetalSuggestedElement/DetailSuggestedElement\";\r\nimport DetailTools from \"../DetailTools/DetailTools\";\r\nimport Labels from \"../../../Containers/Labels/Labels\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledCover = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nconst StyledDetail = styled.div`\r\n  position: fixed;\r\n  top: 41px;\r\n  left: 50%;\r\n  bottom: 17.5px;\r\n  transform: translate(-50%, 0%);\r\n  width: 100%;\r\n  max-width: 775px;\r\n  padding: 15px;\r\n  border-radius: 3px;\r\n  background-color: #f4f5f7;\r\n`;\r\n\r\nfunction DetailCoverView({\r\n  updateCard,\r\n  deleteCard,\r\n  idUpdatedList,\r\n  taskTitle,\r\n  taskTitleFeature,\r\n  changeListInDetails,\r\n  taskTitleList,\r\n  visibilityChangeListInDetails,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  labelsVisibility,\r\n  handleLabelsVisibility,\r\n  taskId,\r\n  toggleLabelColorToCard,\r\n  listOfAllBadges,\r\n  matchedColorsToThisCard,\r\n  labelColors,\r\n  setLabelColors,\r\n  listOfAllTasksId,\r\n  addPriorityForCards,\r\n  toggleCommentFeature,\r\n  toggleCommentVisibility,\r\n  commentChange,\r\n  commentValue,\r\n  addCommentToCard,\r\n  listOfAllComments,\r\n  editCommentToCard,\r\n  toggleDetailMove,\r\n}) {\r\n  return (\r\n    <StyledCover\r\n      className=\"cover\"\r\n      onClick={(e) => updateCard(e, taskTitle, idUpdatedList, taskId)}\r\n    >\r\n      <StyledDetail\r\n        className=\"detail\"\r\n        onClick={(e) => updateCard(e, taskTitle, idUpdatedList, taskId)}\r\n      >\r\n        <span className=\"fas fa-credit-card\"></span>\r\n        <DetailInputElement\r\n          taskTitle={taskTitle}\r\n          taskTitleFeature={taskTitleFeature}\r\n          updateCard={updateCard}\r\n          idUpdatedList={idUpdatedList}\r\n          taskId={taskId}\r\n        />\r\n        <DetailSuggestedElement\r\n          changeListInDetails={changeListInDetails}\r\n          taskTitleList={taskTitleList}\r\n          taskTitle={taskTitle}\r\n          visibilityChangeListInDetails={visibilityChangeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          taskId={taskId}\r\n        />\r\n        <DetailTools\r\n          labelsVisibility={labelsVisibility}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          deleteCard={deleteCard}\r\n          idUpdatedList={idUpdatedList}\r\n          taskId={taskId}\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n          addPriorityForCards={addPriorityForCards}\r\n          toggleCommentFeature={toggleCommentFeature}\r\n          toggleCommentVisibility={toggleCommentVisibility}\r\n          commentChange={commentChange}\r\n          commentValue={commentValue}\r\n          addCommentToCard={addCommentToCard}\r\n          listOfAllComments={listOfAllComments}\r\n          editCommentToCard={editCommentToCard}\r\n          changeListInDetails={changeListInDetails}\r\n          toggleDetailMove={toggleDetailMove}\r\n          taskTitle={taskTitle}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          taskTitleList={taskTitleList}\r\n        />\r\n        {labelsVisibility ? (\r\n          <Labels\r\n            detailCover={true}\r\n            handleLabelsVisibility={handleLabelsVisibility}\r\n            toggleLabelColorToCard={toggleLabelColorToCard}\r\n            listOfAllBadges={listOfAllBadges}\r\n            taskId={taskId}\r\n            listOfAllTasksId={listOfAllTasksId}\r\n            labelColors={labelColors}\r\n            setLabelColors={setLabelColors}\r\n          />\r\n        ) : null}\r\n      </StyledDetail>\r\n    </StyledCover>\r\n  );\r\n}\r\n\r\nexport default DetailCoverView;\r\n","import React from \"react\";\r\nimport DetailCoverView from \"../../components/DetailCover/DetailCoverView/DetailCoverView\";\r\n\r\nclass DetailCover extends React.Component {\r\n  state = {\r\n    taskTitle: \"\",\r\n    commentValue: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      taskTitle: this.props.taskName,\r\n    });\r\n  }\r\n\r\n  taskTitleFeature = (e) => {\r\n    this.setState({\r\n      taskTitle: e.target.value,\r\n    });\r\n  };\r\n\r\n  commentChange = (e) => {\r\n    this.setState({ commentValue: e.target.value }); //Set input comment\r\n  };\r\n\r\n  addCommentToCard = (e, taskId, comment) => {\r\n    //Add comment by click and by Enter button, add comment to commentList and TextArea is disparing, Comment is generate\r\n    // by list of matched comment in DetailCoverMarks Component\r\n    if (e.target.className.includes(\"commentBtn\") || e.which === 13) {\r\n      this.props.setListOfAllComments([\r\n        ...this.props.listOfAllComments,\r\n        {\r\n          id: taskId,\r\n          comment: comment,\r\n        },\r\n      ]);\r\n      this.props.toggleCommentFeature(false);\r\n    }\r\n  };\r\n\r\n  editCommentToCard = (e, taskId) => {\r\n    //Function that run when we want edit our comment - EditBtn is disapiring, textArea is appearing\r\n    this.props.toggleCommentFeature(true);\r\n    const commentIndexToDelete = this.props.listOfAllComments.findIndex(\r\n      (ele) => ele.id === taskId\r\n    );\r\n    this.props.listOfAllComments.splice(commentIndexToDelete, 1);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      taskId,\r\n      taskTitleList,\r\n      updateCard,\r\n      deleteCard,\r\n      idUpdatedList,\r\n      changeListInDetails,\r\n      visibilityChangeListInDetails,\r\n      wholeList,\r\n      moveCardToAnotherList,\r\n      labelsVisibility,\r\n      handleLabelsVisibility,\r\n      toggleLabelColorToCard,\r\n      listOfAllBadges,\r\n      labelColors,\r\n      setLabelColors,\r\n      listOfAllTasksId,\r\n      addPriorityForCards,\r\n      toggleCommentVisibility,\r\n      toggleCommentFeature,\r\n      listOfAllComments,\r\n      toggleDetailMove,\r\n    } = this.props;\r\n\r\n    const copyOfallBadges = [...listOfAllBadges];\r\n    const matchedColorsToThisCard = copyOfallBadges.filter(\r\n      (ele) => ele.id === taskId\r\n    );\r\n\r\n    const copyOfAllComment = [...listOfAllComments];\r\n    const matchedComments = copyOfAllComment.filter((ele) => ele.id === taskId);\r\n\r\n    const { taskTitle, commentValue } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <DetailCoverView\r\n          updateCard={updateCard}\r\n          taskTitle={taskTitle}\r\n          taskTitleFeature={this.taskTitleFeature}\r\n          changeListInDetails={changeListInDetails}\r\n          taskTitleList={taskTitleList}\r\n          visibilityChangeListInDetails={visibilityChangeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          labelsVisibility={labelsVisibility}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          deleteCard={deleteCard}\r\n          idUpdatedList={idUpdatedList}\r\n          taskId={taskId}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          addPriorityForCards={addPriorityForCards}\r\n          toggleCommentFeature={toggleCommentFeature}\r\n          toggleCommentVisibility={toggleCommentVisibility}\r\n          commentChange={this.commentChange}\r\n          commentValue={commentValue}\r\n          addCommentToCard={this.addCommentToCard}\r\n          listOfAllComments={matchedComments}\r\n          editCommentToCard={this.editCommentToCard}\r\n          toggleDetailMove={toggleDetailMove}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DetailCover;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Navigations from \"../Naviagtion/Navigations\";\r\nimport CoreField from \"../CoreField/CoreField\";\r\nimport ThemeField from \"../ThemeField/ThemeField\";\r\nimport OptionCover from \"../OptionCover/OptionCover\";\r\nimport DetailCover from \"../DetailCover/DetailCover\";\r\nimport Color from \"color\";\r\n\r\nconst Main = () => {\r\n  const [showThemeOption, showThemeOptionFunction] = useState(false);\r\n  const [numberOfTask, numberOfTaskFunction] = useState(0);\r\n  const [whichColor, setWhichColor] = useState([\"#76ce8e\"]);\r\n  const [visibilityOptionsCover, setVisibilityOptionCover] = useState(false);\r\n  const [optionCoverData, setOptionCoverData] = useState(\"\");\r\n  const [visibilityTaskDetails, setVisibilityTaskDetails] = useState(false);\r\n  const [taskTitleList, setTaskTitleList] = useState();\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const [taskId, setTaskId] = useState(\"\");\r\n  const [idUpdatedList, setIdUpdatedList] = useState();\r\n  const [visibilityChangeListInDetails, setChangeListInDetails] = useState(\r\n    false\r\n  );\r\n  const [toggleDetailMove, setToggleDetailMove] = useState(false);\r\n  const [labelsVisibility, setLabelsVisibility] = useState(false);\r\n  const [\r\n    labelsVisibilityDetailsComp,\r\n    setLabelsVisibilityDetailsComp,\r\n  ] = useState(false);\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const [listOfAllTasksId, setListOfAllTasksId] = useState([]);\r\n  const [listOfAllBadges, setListOfAllBadges] = useState([]);\r\n  const [listOfAllPriorityTasks, setListOfPriority] = useState([]);\r\n  const [listOfAllComments, setListOfAllComments] = useState([]);\r\n  const [hideFontSizeLabel, setHideFontSizeLabel] = useState(false);\r\n  const [toggleCommentVisibility, setToggleCommentVisibility] = useState(false);\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", hideTheme);\r\n  });\r\n\r\n  const [wholeList, setWholeList] = useState([\r\n    {\r\n      id: 0,\r\n      title: \"To Do\",\r\n      tasks: [],\r\n      activeList: false,\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"In Progress\",\r\n      tasks: [],\r\n      activeList: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Finished\",\r\n      tasks: [],\r\n      activeList: false,\r\n    },\r\n  ]);\r\n\r\n  const [labelColors, setLabelColors] = useState([\r\n    { color: \"#61BD4F\", colorName: \"green\", value: \"\", id: 0 },\r\n    { color: \"#F2D600\", colorName: \"yellow\", value: \"\", id: 1 },\r\n    { color: \"#FF9F1A\", colorName: \"orange\", value: \"\", id: 2 },\r\n    { color: \"#EB5A46\", colorName: \"red\", value: \"\", id: 3 },\r\n    { color: \"#C377E0\", colorName: \"purple\", value: \"\", id: 4 },\r\n    { color: \"#0079BF\", colorName: \"blue\", id: 5 },\r\n    { color: \"#00C2E0\", colorName: \"light blue ocean\", value: \"\", id: 6 },\r\n    { color: \"#51E898\", colorName: \"light green\", value: \"\", id: 7 },\r\n    { color: \"#FF78CB\", colorName: \"pink\", value: \"\", id: 8 },\r\n    { color: \"#344563\", colorName: \"dark blue\", value: \"\", id: 9 },\r\n    { color: \"#B3BAC5\", colorName: \"grey\", value: \"\", id: 10 },\r\n  ]);\r\n\r\n  const hideTheme = (e) => {\r\n    const searchingClass = e.target.className;\r\n    if (\r\n      searchingClass.includes(\"main\") ||\r\n      searchingClass.includes(\"input\") ||\r\n      searchingClass.includes(\"item\")\r\n    ) {\r\n      showThemeOptionFunction(false);\r\n    }\r\n\r\n    if (!searchingClass.includes(\"suggested\")) {\r\n      setChangeListInDetails(false);\r\n      setToggleDetailMove(false);\r\n    }\r\n\r\n    if (\r\n      searchingClass.includes(\"coverOption\") ||\r\n      searchingClass.includes(\"cover_box\")\r\n    ) {\r\n      setVisibilityOptionCover(false);\r\n      setLabelsVisibility(false);\r\n    }\r\n\r\n    if (searchingClass.includes(\"textArea_Option\")) {\r\n      setLabelsVisibility(false);\r\n    }\r\n\r\n    if (!searchingClass.includes(\"label\")) {\r\n      setLabelsVisibilityDetailsComp(false);\r\n    }\r\n    if (!searchingClass.includes(\"textArea\")) {\r\n      setToggleCommentVisibility(false);\r\n    }\r\n  };\r\n\r\n  const listOption = (listId) => {\r\n    const copyWholeList = [...wholeList];\r\n    const filterWholeList = copyWholeList.filter((list) => list.id !== listId);\r\n    const deletedList = copyWholeList.filter((list) => list.id === listId);\r\n    deletedList[0].tasks.forEach((ele) => {\r\n      deleteCard(listId, ele.id, \"byButton\");\r\n    });\r\n\r\n    setWholeList(filterWholeList);\r\n  };\r\n\r\n  const addNewCard = (listId, newTask, taskId) => {\r\n    const correctList = wholeList.filter((list) => list.id === listId);\r\n    if (newTask.length === 0) return;\r\n\r\n    const matchedBadges = listOfAllBadges.filter((ele) => ele.id === taskId);\r\n    const matchedPriority = listOfAllPriorityTasks.filter(\r\n      (ele) => ele === taskId\r\n    );\r\n    const matchedComment = listOfAllComments.filter((ele) => ele.id === taskId);\r\n    const theBiggestId = Math.max(...listOfAllTasksId);\r\n\r\n    const matchedList = wholeList.filter((ele) => ele.id === listId);\r\n\r\n    //\"Add card\" by move already existing card\r\n    if (taskId) {\r\n      correctList[0].tasks.push({\r\n        id: taskId,\r\n        taskName: newTask,\r\n        currentList: listId,\r\n        currentListName: matchedList[0].title,\r\n        comment: matchedComment,\r\n        badges: matchedBadges,\r\n        priority: `${matchedPriority.length === 0 ? null : \"priority\"}`,\r\n        date: \"\",\r\n        cover: \"\",\r\n      });\r\n    } else {\r\n      //Add new card by button 'Add Card'\r\n      correctList[0].tasks.push({\r\n        id: `${listOfAllTasksId.length === 0 ? 0 : theBiggestId + 1}`,\r\n        taskName: newTask,\r\n        currentList: listId,\r\n        currentListName: matchedList[0].title,\r\n        comment: \"\",\r\n        badges: [],\r\n        priority: false,\r\n        date: \"\",\r\n        cover: \"\",\r\n      });\r\n      if (listOfAllTasksId.length === 0) {\r\n        setListOfAllTasksId([0]);\r\n      } else {\r\n        setListOfAllTasksId([...listOfAllTasksId, theBiggestId + 1]);\r\n      }\r\n    }\r\n    numberOfTaskFunction(numberOfTask + 1);\r\n  };\r\n\r\n  const deleteCard = (listId, taskId, byButton) => {\r\n    //Delete Card from list( by every way )\r\n    const correctList = wholeList.filter((list) => list.id === listId);\r\n\r\n    const taskIndex = correctList[0].tasks.findIndex(\r\n      (element) => element.id === taskId\r\n    );\r\n\r\n    if (byButton === \"byButton\") {\r\n      //Delete Card Badges from array if matched exist\r\n      const matchedBadges = listOfAllBadges.filter((ele) => ele.id === taskId);\r\n      const matchedPriorityIndex = listOfAllPriorityTasks.findIndex(\r\n        (ele) => ele === taskId\r\n      );\r\n      const matchedCommentIndex = listOfAllComments.findIndex(\r\n        (ele) => ele.id === taskId\r\n      );\r\n      listOfAllPriorityTasks.splice(matchedPriorityIndex, 1);\r\n      listOfAllComments.splice(matchedCommentIndex, 1);\r\n      if (matchedBadges.length !== 0) {\r\n        matchedBadges.forEach((element) => {\r\n          const indexOfBadgedToDelete = listOfAllBadges.findIndex(\r\n            (ele) => ele.id === taskId && ele.color === element.color\r\n          );\r\n          listOfAllBadges.splice(indexOfBadgedToDelete, 1);\r\n        });\r\n      }\r\n\r\n      //Delete Card Id from array\r\n      const matchedIdList = listOfAllTasksId.findIndex((ele) => ele == taskId);\r\n      listOfAllTasksId.splice(matchedIdList, 1);\r\n    }\r\n\r\n    correctList[0].tasks.splice(taskIndex, 1);\r\n    numberOfTaskFunction(numberOfTask - 1);\r\n    setVisibilityOptionCover(false);\r\n    setVisibilityTaskDetails(false);\r\n  };\r\n\r\n  const addNewList = (listInputValue, showListHandle, setListInput) => {\r\n    showListHandle(false);\r\n    setListInput(\"\");\r\n    if (listInputValue === \"\") return;\r\n    if (listInputValue.length < 2) return;\r\n\r\n    let biggerThanLast = [];\r\n    wholeList.forEach((list) => biggerThanLast.push(list.id));\r\n    const theBiggest = Math.max(...biggerThanLast);\r\n    setWholeList([\r\n      ...wholeList,\r\n      {\r\n        title: listInputValue,\r\n        id: `${wholeList.length === 0 ? 0 : theBiggest + 1}`,\r\n        tasks: [],\r\n        activeInput: false,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const updateListTitle = (newTitle, listId) => {\r\n    const updatedList = wholeList.filter((list) => list.id === listId);\r\n    updatedList[0].title = newTitle;\r\n  };\r\n\r\n  const elementHoverEnter = (e) => {\r\n    const arrayClassList = [];\r\n    e.target.classList.forEach((item) => {\r\n      arrayClassList.push(item);\r\n    });\r\n\r\n    if (arrayClassList.includes(\"list\")) {\r\n      const currentLiColor = Color(\r\n        `${\r\n          e.target.style.backgroundColor\r\n            ? e.target.style.backgroundColor\r\n            : \"#76ce8e\"\r\n        }`\r\n      );\r\n      return (e.target.style.backgroundColor = currentLiColor.lighten(0.1));\r\n    }\r\n  };\r\n\r\n  const elementHoverLeave = (e) => {\r\n    const arrayClassList = [];\r\n    e.target.classList.forEach((item) => {\r\n      arrayClassList.push(item);\r\n    });\r\n\r\n    if (arrayClassList.includes(\"list\")) {\r\n      return (e.target.style.backgroundColor = whichColor);\r\n    }\r\n  };\r\n\r\n  const visibilityOptionFunction = (\r\n    e,\r\n    toggle,\r\n    taskName,\r\n    listId,\r\n    currentListName,\r\n    cardId\r\n  ) => {\r\n    //Dates sending from Card to OptionFunction Comp (by clicked Edit Icon)\r\n    setVisibilityOptionCover(toggle);\r\n    setIdUpdatedList(listId);\r\n    setTaskName(taskName);\r\n    setOptionCoverData([\r\n      {\r\n        listId: listId,\r\n        currentListName: currentListName,\r\n        top: e.target.parentNode.offsetTop,\r\n        left: e.target.parentNode.offsetLeft,\r\n        taskTitle: taskName,\r\n        clickedCard: e.target.parentNode,\r\n        clickedCardWrapLabel: e.target.parentNode.children[0],\r\n        clickedCardId: cardId,\r\n        wholeList: wholeList,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const taskDetailsFunction = (\r\n    //Dates sending from Card to DetailsComponenet (by doubleClick Card)\r\n    nameUpdatedTask,\r\n    nameUpdatedList,\r\n    listId,\r\n    cardId\r\n  ) => {\r\n    setIdUpdatedList(listId);\r\n    setTaskTitleList(nameUpdatedList);\r\n    setTaskName(nameUpdatedTask);\r\n    setTaskId(cardId);\r\n    setVisibilityTaskDetails(true);\r\n  };\r\n\r\n  const updateCard = (e, updatedTitle, listId, taskId) => {\r\n    // For changing taskName by detailCover component and optionCover\r\n    if (\r\n      e.target.className.includes(\"cover\") ||\r\n      e.target.className.includes(\"cover_saveBtn\") ||\r\n      e.which === 13\r\n    ) {\r\n      const correctList = wholeList.filter((list) => list.id === listId);\r\n      if (updatedTitle.length === 0) return setVisibilityTaskDetails(false);\r\n      const index = correctList[0].tasks.findIndex((ele) => ele.id === taskId);\r\n      correctList[0].tasks[index].taskName = updatedTitle;\r\n      setVisibilityTaskDetails(false);\r\n      setVisibilityOptionCover(false);\r\n      setLabelsVisibility(false);\r\n    }\r\n\r\n    // For changing taskName by detailCover component without closing this componentView\r\n    if (\r\n      !e.target.className.includes(\"input\") &&\r\n      !e.target.className.includes(\"suggested\") &&\r\n      !e.target.className.includes(\"close\") &&\r\n      !e.target.className.includes(\"delete\") &&\r\n      !e.target.className.includes(\"cover_textArea\")\r\n    ) {\r\n      const correctList = wholeList.filter((list) => list.id === listId);\r\n      if (updatedTitle.length === 0) return setVisibilityTaskDetails(false);\r\n      if (correctList[0]) {\r\n        const index = correctList[0].tasks.findIndex(\r\n          (ele) => ele.id === taskId\r\n        );\r\n        correctList[0].tasks[index].taskName = updatedTitle;\r\n        setTaskName(updatedTitle);\r\n      }\r\n    }\r\n\r\n    if (e.target.className.includes(\"close\")) {\r\n      setVisibilityTaskDetails(false);\r\n      setVisibilityOptionCover(false);\r\n      setLabelsVisibility(false);\r\n    }\r\n  };\r\n\r\n  const changeListInDetails = (byElement) => {\r\n    if (byElement === \"byListName\") {\r\n      setChangeListInDetails(!visibilityChangeListInDetails);\r\n    } else if (byElement === \"byNavMove\" || byElement === \"byOptionMove\") {\r\n      setToggleDetailMove(!toggleDetailMove);\r\n    }\r\n  };\r\n\r\n  const moveCardToAnotherList = (\r\n    taskTitle,\r\n    currentList,\r\n    taskId,\r\n    clickedListId,\r\n    byOptionCover\r\n  ) => {\r\n    //FindListWhereDelete\r\n    const deleteFromList = wholeList.filter(\r\n      (list) => list.title === currentList\r\n    );\r\n\r\n    //AddToAnotherList\r\n    const addToList = wholeList.filter((list) => list.id === clickedListId);\r\n    if (addToList[0].id === deleteFromList[0].id) return;\r\n    deleteCard(deleteFromList[0].id, taskId);\r\n    addNewCard(addToList[0].id, taskTitle, taskId);\r\n\r\n    setChangeListInDetails(false);\r\n    setToggleDetailMove(false);\r\n\r\n    taskDetailsFunction(taskTitle, addToList[0].title, addToList[0].id, taskId);\r\n    if (byOptionCover) {\r\n      setVisibilityTaskDetails(false);\r\n    }\r\n  };\r\n\r\n  const moveListToAnotherPlace = (draggedListIndex, addToThisIndex) => {\r\n    const copy = [...wholeList];\r\n    const splicedElement = copy.splice(draggedListIndex, 1);\r\n    copy.splice(addToThisIndex, 0, ...splicedElement);\r\n    setWholeList(copy);\r\n  };\r\n\r\n  const clearAllBlankSpan = (e) => {\r\n    const allBlank = document.querySelectorAll(\".blank\");\r\n\r\n    allBlank.forEach((blank) => {\r\n      blank.style.width = \"0\";\r\n      blank.style.height = \"0\";\r\n      blank.style.backgroundColor = \"transparent\";\r\n      blank.style.borderRadius = \"0\";\r\n    });\r\n  };\r\n\r\n  //LABLES FEATURES\r\n  const handleLabelsVisibility = (toggle) => {\r\n    setLabelsVisibility(toggle);\r\n  };\r\n\r\n  const handleLabelsVisibilityDetailsComp = (toggle) => {\r\n    setLabelsVisibilityDetailsComp(toggle);\r\n  };\r\n\r\n  const toggleLabelColorToCard = (color, taskId) => {\r\n    const alreadyExistedBadges = listOfAllBadges.filter(\r\n      (ele) => ele.id === taskId\r\n    );\r\n\r\n    const matchedBages = [];\r\n    alreadyExistedBadges.forEach((ele) => {\r\n      if (ele.color === color) {\r\n        matchedBages.push(color);\r\n      }\r\n    });\r\n\r\n    if (matchedBages.length === 0) {\r\n      //Add only if this color and Id don't exist already\r\n      const nameBadge = labelColors.filter((ele) => ele.color === color);\r\n      // const dataForClasses = color.slice(1, -1);\r\n\r\n      listOfAllBadges.push({\r\n        id: taskId,\r\n        color: color,\r\n        name: nameBadge[0].value,\r\n        labelId: `${color}${taskId}`,\r\n        // dataClass: dataForClasses,\r\n      });\r\n\r\n      createLabelsElement(color, taskId, nameBadge[0].value);\r\n\r\n      //CheckIcon Visible\r\n      const checkIcon = document.getElementById(`${color}Check`);\r\n      checkIcon.style.display = \"block\";\r\n      setToggle(!toggle);\r\n    } else {\r\n      const indexToDelete = listOfAllBadges.findIndex(\r\n        (ele) => ele.id === taskId && ele.color === color\r\n      );\r\n\r\n      //Delete from list of badges when exist and from DOM\r\n      listOfAllBadges.splice(indexToDelete, 1);\r\n      const matchedColor = document.getElementById(`${color}${taskId}`);\r\n      matchedColor.remove();\r\n\r\n      //CheckIcon Visible\r\n      const checkIcon = document.getElementById(`${color}Check`);\r\n      checkIcon.style.display = \"none\";\r\n      setToggle(!toggle);\r\n    }\r\n  };\r\n\r\n  const createLabelsElement = (color, taskId, nameLabel) => {\r\n    const currentTask = document.getElementById(taskId);\r\n\r\n    const newLabel = document.createElement(\"div\");\r\n    newLabel.classList.add(`labelElement`);\r\n    newLabel.setAttribute(\"id\", `${color}${taskId}`);\r\n    newLabel.style.backgroundColor = `${color}`;\r\n    newLabel.textContent = nameLabel;\r\n    currentTask.children[0].appendChild(newLabel);\r\n  };\r\n\r\n  const addPriorityForCards = (cardId) => {\r\n    if (!listOfAllPriorityTasks.includes(cardId)) {\r\n      setListOfPriority([...listOfAllPriorityTasks, cardId]);\r\n      const clickedCardDOM = document.getElementById(cardId);\r\n      clickedCardDOM.style.border = \"1px solid red\";\r\n    } else if (listOfAllPriorityTasks.includes(cardId)) {\r\n      const indexToDelete = listOfAllPriorityTasks.findIndex(\r\n        (ele) => ele === cardId\r\n      );\r\n      listOfAllPriorityTasks.splice(indexToDelete, 1);\r\n      const clickedCardDOM = document.getElementById(cardId);\r\n      clickedCardDOM.style.border = null;\r\n    }\r\n  };\r\n\r\n  const toggleCommentFeature = (toggle) => {\r\n    setToggleCommentVisibility(toggle);\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <Navigations\r\n        themeToggle={showThemeOptionFunction}\r\n        themeOption={showThemeOption}\r\n        elementHoverEnter={elementHoverEnter}\r\n        elementHoverLeave={elementHoverLeave}\r\n      />\r\n      <ThemeField themeOption={showThemeOption} setWhichColor={setWhichColor} />\r\n      <CoreField\r\n        wholeList={wholeList}\r\n        setWholeList={setWholeList}\r\n        listOption={listOption}\r\n        addNewCard={addNewCard}\r\n        deleteCard={deleteCard}\r\n        addNewList={addNewList}\r\n        elementHoverEnter={elementHoverEnter}\r\n        elementHoverLeave={elementHoverLeave}\r\n        visibilityOptionFunction={visibilityOptionFunction}\r\n        taskDetailsFunction={taskDetailsFunction}\r\n        updateListTitle={updateListTitle}\r\n        moveListToAnotherPlace={moveListToAnotherPlace}\r\n        clearAllBlankSpan={clearAllBlankSpan}\r\n        hideFontSizeLabel={hideFontSizeLabel}\r\n        setHideFontSizeLabel={setHideFontSizeLabel}\r\n      />\r\n      {visibilityOptionsCover ? (\r\n        <OptionCover\r\n          optionCoverData={optionCoverData}\r\n          taskName={taskName}\r\n          updateCard={updateCard}\r\n          deleteCard={deleteCard}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          labelsVisibility={labelsVisibility}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          addPriorityForCards={addPriorityForCards}\r\n          toggleDetailMove={toggleDetailMove}\r\n          changeListInDetails={changeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n        />\r\n      ) : null}\r\n      {visibilityTaskDetails ? (\r\n        <DetailCover\r\n          taskName={taskName}\r\n          taskId={taskId}\r\n          taskTitleList={taskTitleList}\r\n          updateCard={updateCard}\r\n          deleteCard={deleteCard}\r\n          idUpdatedList={idUpdatedList}\r\n          changeListInDetails={changeListInDetails}\r\n          visibilityChangeListInDetails={visibilityChangeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          handleLabelsVisibility={handleLabelsVisibilityDetailsComp}\r\n          labelsVisibility={labelsVisibilityDetailsComp}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          addPriorityForCards={addPriorityForCards}\r\n          toggleCommentFeature={toggleCommentFeature}\r\n          toggleCommentVisibility={toggleCommentVisibility}\r\n          listOfAllComments={listOfAllComments}\r\n          setListOfAllComments={setListOfAllComments}\r\n          toggleDetailMove={toggleDetailMove}\r\n        />\r\n      ) : null}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { device } from \"../MediaQuery/mq\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin:0;\r\n    padding:0;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    box-sizing:border-box;\r\n    border:none;\r\n    outline:none;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n\r\n  html{\r\n    font-size:10px;\r\n  }\r\n\r\n  body{\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n  }\r\n\r\n  .card{\r\n  top:0;\r\n  left:0;\r\n  display:flex;\r\n  justify-content:space-between;\r\n  flex-wrap:wrap;\r\n  width: 100%;\r\n  max-width:260px;\r\n  word-break: break-all;\r\n  margin: 10px 0px;\r\n  padding: 9px 7.5px;\r\n  font-size: 1.4rem;\r\n  box-shadow: 0px 0.5px 0px 0.5px #aaa;\r\n  background-color: #fff;\r\n  border-radius:3px;\r\n  cursor: pointer;\r\n  color:black;\r\n\r\n  &:hover {\r\n    background-color: #F4F5F7;\r\n  }\r\n\r\n  &:hover > *{\r\n  color:#777;\r\n  }\r\n  }\r\n\r\n  .card_cardWrapContent{\r\n    display:flex;\r\n    justify-content:space-around\r\n  }\r\n\r\n  .card_wrapLabel{\r\n    display:flex;\r\n    flex-wrap:wrap;\r\n    width:100%;\r\n    transition:0.1s linear;\r\n\r\n    &:hover{\r\n      opacity:0.6;\r\n    }\r\n  }\r\n\r\n  .labelElement{\r\n    align-self:center;\r\n    min-width: 15%;\r\n    min-height:8px;\r\n    border-radius:5px;\r\n    margin-bottom:4px;\r\n    margin-right:4px;\r\n    padding: 3px;\r\n    color:white;\r\n    transition: 0.1s linear;\r\n  }\r\n\r\n  .labelElement_DetailCover{\r\n    min-width:40px;\r\n    width:auto;\r\n    height:32px;\r\n    border-radius:3px;\r\n    margin: 3px 3px 3px 0px;\r\n    cursor:pointer;\r\n    transition: 0.1s linear;\r\n    padding: 8px 5px;\r\n    color:white;\r\n    font-size:14px;\r\n    font-weight:600;\r\n\r\n    &:hover{\r\n      opacity: 0.85;\r\n    }\r\n  }\r\n\r\n  .lists{\r\n  top:0;\r\n  left:0;\r\n  width: 275px;\r\n  max-height: 80vh;\r\n  margin-right: 10px;\r\n  align-self: flex-start;\r\n  background-color: #ebecf0;\r\n  border-radius: 4px;\r\n  padding: 10px 7.5px;\r\n  margin-bottom: 15px;\r\n  cursor: pointer;\r\n  overflow-y:scroll;\r\n\r\n  &::-webkit-scrollbar{\r\n    width:1px;\r\n}\r\n\r\n&::-webkit-scrollbar-track{\r\n    background:rgba(0,0,0,0);\r\n}\r\n\r\n&::-webkit-scrollbar-thumb{\r\n  background:rgba(0,0,0,0);\r\n  border-radius: 10px;\r\n  height:10px;\r\n}\r\n&::-webkit-scrollbar-thumb:hover{\r\n  background:rgba(0,0,0,0);\r\n}\r\n  }\r\n  \r\n  .singleListWrap{\r\n     position:relative;\r\n     width: 285px;\r\n     display:flex;\r\n     flex-direction:column;\r\n   }\r\n\r\n  .fa-highlighter{\r\n    color:#777;\r\n    align-self:center;\r\n    margin:2px;\r\n    margin-bottom:0px;\r\n    @media ${device.laptop} {\r\n      color:#fff;\r\n\r\n      &:hover{\r\n        color:#000;\r\n      }\r\n  }\r\n  }\r\n  \r\n  .fa-ellipsis-h{\r\n   padding: 9px ;\r\n   margin-left:2px;\r\n   margin-bottom: 5px;\r\n   font-size: 13px;\r\n   color: #777;\r\n   cursor: pointer;\r\n\r\n   &:hover{\r\n    background-color: #dddfe5;\r\n   }\r\n  }\r\n\r\n  .fa-credit-card{\r\n    margin-right: 7.5px;\r\n     color:#42526E;\r\n     font-size: 19px;\r\n     \r\n   }\r\n\r\n   .detail > .fa-times{\r\n     position: absolute;\r\n     top:15px;\r\n     right:15px;\r\n     font-size: 20px;\r\n     color:#42526E;\r\n     cursor: pointer;\r\n   }\r\n\r\n::-webkit-scrollbar{\r\n    height:17.5px;\r\n}::-webkit-scrollbar-track{\r\n    background:rgba(0,0,0,0.5);\r\n}\r\n::-webkit-scrollbar-thumb{\r\n  background:rgba(0,0,0,0.3);\r\n  border-radius: 10px;\r\n  height:10px;\r\n}\r\n::-webkit-scrollbar-thumb:hover{\r\n  background:rgba(0,0,0,0.5);\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\nimport Main from \"../Containers/Main/main\";\nimport GlobalStyle from \"../Style/GlobalStyle/globalStyle\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}