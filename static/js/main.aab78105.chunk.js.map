{"version":3,"sources":["components/Navigation/NavListView/NavListView.js","components/Navigation/NavigationView.js","Containers/Naviagtion/Navigations.js","components/Card/Card.js","components/List/ListButtons/ListButtons.js","components/List/ListInput/ListInput.js","components/List/ListView.js","Containers/List/List.js","components/CoreField/CoreFieldView.js","Containers/CoreField/CoreField.js","Style/MediaQuery/mq.js","components/ThemeField/ThemeFieldView.js","Containers/ThemeField/ThemeField.js","components/OptionCover/OptionCoverListView/OptionCoverListView.js","components/CopyCard/CopyCardView.js","Containers/CopyCard/CopyCard.js","components/MoveToAnotherList/MoveToAnotherListBox.js","components/Labels/LabelView/LabelsNameColors.js","components/Labels/LabelView/LabelsChooseColors.js","components/Labels/LabelsView.js","Containers/Labels/Labels.js","components/DatePicker/Calendar.js","components/DatePicker/DatePickerView.js","Containers/DatePicker/DatePicker.js","components/OptionCover/OptionCoverView.js","Containers/OptionCover/OptionCover.js","components/DetailCover/DetailElements/DetailInputElement.js","components/DetailCover/DetailElements/DetalSuggestedElement/DetailSuggestedElement.js","components/DetailCover/DetailTools/DetailCoverNav/DetailCoverNav.js","components/DetailCover/DetailTools/DetailCoverMarks/DetailCoverMarks.js","components/DetailCover/DetailTools/DetailTools.js","components/DetailCover/DetailCoverView/DetailCoverView.js","Containers/DetailCover/DetailCover.js","Containers/Main/main.js","Style/GlobalStyle/globalStyle.js","components/App.js","serviceWorker.js","index.js"],"names":["StyledList","styled","li","props","lastEle","Link","a","NavListView","elementHoverEnter","elementHoverLeave","themeFunction","linkTitle","className","onMouseEnter","e","onMouseLeave","onClick","StyledNav","nav","StyledUl","ul","StyledInput","input","navigationElements","Navigation","map","element","key","placeholder","Navigations","themeToggle","themeOption","this","NavigationView","Component","StyledContentWrap","div","StyledContent","h3","StyledEdit","span","StyledIcon","StyledTermInCard","Card","state","selected","scrollHeight","taskk","offsetX","offsetY","cardH","mouseDownFeature","target","classList","document","getElementById","task","id","clientHeight","setState","nativeEvent","style","zIndex","addEventListener","mouseMoveFeature","mouseUpFeature","card","cursor","position","transform","boxShadow","scrollPosition","wholeList","addNewCardFeature","deleteCardFeatureByMove","listId","scrollHeighFromMain","Math","floor","taskId","getAttribute","draggedCard","draggedCardChildren","children","draggenCardLabelsChildren","draggedCardTermChildren","pageX","mouseLeaveFeature","forEach","ele","textContent","i","length","isDragAndDropTrue","clearAllBlankSpan","removeEventListener","left","getBoundingClientRect","width","top","pageY","height","allBlankSpan","querySelectorAll","all","backgroundColor","borderRadius","labelFontSizeToggle","hideFontSizeLabel","setHideFontSizeLabel","taskName","inputTitle","taskDetailsFunction","visibilityOptionFunction","onDoubleClick","onMouseDown","border","priority","fontSize","pointerEvents","badges","color","labelId","name","currentListName","date","day","monthName","status","StyledAddButton","button","StyledSpanX","ListButtons","showAddField","textAreaValue","swapAddFieldFeature","StyledInputCover","ListInput","selectedList","listOption","setListTitle","onChange","value","StyledTextArea","textarea","showStyle","ListView","tasks","setTextAreaValue","List","hideAll","searchingClass","includes","showListHandle","setListInput","updateListTitle","buttonId","addNewCard","addNewCardFeatureByKey","which","preventDefault","deleteCard","list","clientX","clientY","display","marginRight","draggedListIndex","findIndex","moveListToAnotherPlace","main","querySelector","mainWidth","offsetWidth","scroll","behavior","title","StyledMain","StyledListInput","StyledWrapList","StyledButton","StyledWrapAddListBtn","bgc","CoreFieldView","mousePositionX","showList","showAddListHandle","listInputHandle","listInputValue","addNewList","addNewListByKey","onScroll","onMouseMove","onKeyPress","MainField","useState","updatedScrollPosition","isDragDropTrue","isDragDropTrueFeature","scrollLeft","isTrue","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","StyledColorDiv","StyledThemeDivTitle","StyledThemeDiv","showTheme","ThemeFieldView","changeColor","blockOfColors","block","mainColor","navColor","listColor","inputColor","ThemeField","setWhichColor","StyledListBlock","OptionCoverListView","handleLabelsVisibility","addPriorityForCards","optionCoverData","changeListInDetails","matchedPriority","toggleDateVisibility","clickedCardId","StyledReplaceTitle","alignCenter","biggerMargin","StyledCheckedBox","StyledCheckIcon","StyledCheckBoxTitle","StyledSuggestList","biggerFont","CopyCardView","changeCopyTextArea","copyTextArea","matchedColorsToThisCard","toggleCanCopyLables","canCopyLabels","moveCardToAnotherList","taskTitleList","optionCover","CopyCard","taskTitle","StyledChangeListDetails","rightPosition","topPosition","MoveToAnotherListBox","byElement","copyVisibility","StyledBack","StyledNameLabels","optionCoverPosition","StyledLabelTitle","StyledLabelInput","marginTop","StyledName","StyledWrapColors","StyledColorSquar","StyledX","StyledTitle","h4","LabelsNameColors","nameLabelVisibility","filteredColors","detailCover","nameLabelInput","nameLabelInputValue","choosedSquar","saveNameLabel","currentSquarEdit","StyledLabels","StyledLabelWrapEle","StyledLabelElement","StyledIconCheck","StyledNameSox","LabelsChooseColors","toggleLabelColorToCard","generateCheckIcon","searchLabelColor","searchInputLabel","useEffect","LabelsView","labelVisibility","Labels","currentMatchedColors","toggle","colorId","from","isAnyTextAlready","parentNode","matchedBadges","listOfAllBadges","filter","currentCheckIcon","substr","listOfAllTasksId","labelColors","setLabelColors","matchedLabelInCard","index","copyOfLabelColor","splice","colorName","addLabelColor","toUpperCase","StyledCalendar","StyledCalendarDays","darkerColor","col","cur","Calendar","days","emptyFields","howManyDaysMonth","todayDay","setThisDayFunc","StyledDateTitle","StyledText","h2","biggerFontSize","StyledDateWrap","StyledColumnDate","redButton","DatePickerView","todayYear","todayMonthName","time","toggleMonths","todayFullDate","choosedDateFunction","choosedTimeFunction","setThisDataFunctiion","DatePicker","todayWeekDay","todayMonth","months","updateFlag","action","preventMonthLenghtFlag","displayingMonthLength","blankPlace","emptyFilter","contentFilter","backMonthLenght","generateOtherMonth","firstOfMonth","stepBackMonthLength","empty","push","unshift","mappingArrayWithContent","whichWay","thisDay","month","year","buttonType","toD","toM","toY","test","currDate","Date","currD","getDate","currM","getMonth","currY","getFullYear","shorcutMonth","slice","toggleTermToCard","alert","counterModulo","getDay","todayFull","hours","getHours","minutes","getMinutes","todayWithZero","monthWithZero","nextMonthFromDay","nextMonthDay","nextMonthDayArr","firstDayOfPrevMonth","StyledCover","StyledOptionBox","StyledSaveButton","StyledWrapLabels","StyledWrapTextAndLabels","StyledDate","StyledWrapTerms","OptionCover","taskTitleFeature","updateCard","labelsVisibility","toggleDetailMove","dateVisibility","matchedTerms","setOptionCoverPostion","taskData","mainOffsetTop","offsetTop","coverBox","coverBoxHeight","offsetHeight","currentListScrollNow","scrollTop","listIndex","positionY","positionX","listOfAllPriorityTasks","listOfAllTerms","OptionCoverView","StyledTaskName","Detail_Input","idUpdatedList","StyledLightText","StyledStrongText","strong","DetailSuggestedElement","visibilityChangeListInDetails","StyledDetailNav","StyledDetailUl","StyledDetailList","first","DetailCoverNav","StyledDetailMarks","StyledDetailDescription","marginLeft","biggerSize","pointer","StyledLabelsWrap","StyledPlaceholder","greyBgc","hoverBgc","StyledCommentOptionWrap","StyledComment","StyledTermWrap","StyledTerm","DetailCoverMarks","toggleCommentFeature","toggleCommentVisibility","commentChange","commentValue","addCommentToCard","listOfAllComments","editCommentToCard","margin","term","comment","StyledDetailToolsWrap","DetailTools","StyledDetail","DetailCoverView","DetailInputElement","DetailCover","setListOfAllComments","commentIndexToDelete","matchedComments","React","Main","showThemeOption","showThemeOptionFunction","numberOfTask","numberOfTaskFunction","whichColor","visibilityOptionsCover","setVisibilityOptionCover","setOptionCoverData","visibilityTaskDetails","setVisibilityTaskDetails","setTaskTitleList","setTaskName","setTaskId","setIdUpdatedList","setChangeListInDetails","setToggleDetailMove","setLabelsVisibility","labelsVisibilityDetailsComp","setLabelsVisibilityDetailsComp","setToggle","setListOfAllTasksId","setListOfPriority","setListOfallTerms","setToggleCommentVisibility","setCopyVisibility","setDateVisibility","hideTheme","activeList","setWholeList","newTask","correctList","matchedComment","theBiggestId","max","matchedList","matchedDate","currentList","cover","byButton","matchedPriorityIndex","matchedCommentIndex","matchedTermIndex","indexOfBadgedToDelete","matchedIdList","taskIndex","arrayClassList","item","currentLiColor","Color","lighten","nameUpdatedTask","nameUpdatedList","cardId","updatedTitle","clickedListId","byOptionCover","copy","deleteFromList","addToList","unicalIdForCopy","copyCard","copyId","preventCardId","lablesToCopy","commentToCopy","dateToCopy","alreadyExistedBadges","matchedBages","nameBadge","createLabelsElement","indexToDelete","remove","nameLabel","currentTask","newLabel","createElement","add","setAttribute","appendChild","existingTermIndex","innerHTML","currentCard","termSpan","termToDeleteIndex","CoreField","copyWholeList","filterWholeList","biggerThanLast","theBiggest","activeInput","offsetLeft","clickedCard","clickedCardWrapLabel","newTitle","addToThisIndex","splicedElement","blank","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aab78105.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledList = styled.li`\r\n  width: ${(props) => (props.lastEle ? \"auto\" : \"75px\")};\r\n  height: 100%;\r\n  text-align: center;\r\n  background-color: #76ce8e;\r\n  border-radius: 4px;\r\n  transition: 0.1s linear;\r\n  margin-right: 4px;\r\n  margin-left: ${(props) => (props.lastEle ? \"auto\" : \"initial\")};\r\n  padding: ${(props) => (props.lastEle ? \"initial\" : \"8px 0px\")};\r\n`;\r\n\r\nconst Link = styled.a`\r\n  text-decoration: none;\r\n  font-size: 1.5rem;\r\n  color: #fff;\r\n`;\r\n\r\nfunction NavListView({\r\n  elementHoverEnter,\r\n  elementHoverLeave,\r\n  themeFunction,\r\n  linkTitle,\r\n}) {\r\n  return (\r\n    <StyledList\r\n      className=\"list\"\r\n      onMouseEnter={(e) => elementHoverEnter(e)}\r\n      onMouseLeave={(e) => elementHoverLeave(e)}\r\n      onClick={themeFunction}\r\n    >\r\n      <Link>{linkTitle}</Link>\r\n    </StyledList>\r\n  );\r\n}\r\n\r\nexport default NavListView;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NavListView from \"./NavListView/NavListView\";\r\n\r\nconst StyledNav = styled.nav`\r\n  width: 100vw;\r\n  height: 40px;\r\n  background-color: #40a35b;\r\n  padding: 0px 4px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledUl = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  flex-shrink: 1;\r\n  width: 100%;\r\n  height: 40px;\r\n  list-style: none;\r\n  cursor: pointer;\r\n  padding: 4px 0px;\r\n`;\r\n\r\nconst StyledList = styled.li`\r\n  width: ${(props) => (props.lastEle ? \"auto\" : \"75px\")};\r\n  height: 100%;\r\n  text-align: center;\r\n  background-color: #76ce8e;\r\n  border-radius: 4px;\r\n  transition: 0.1s linear;\r\n  margin-right: 4px;\r\n  margin-left: ${(props) => (props.lastEle ? \"auto\" : \"initial\")};\r\n  padding: ${(props) => (props.lastEle ? \"initial\" : \"8px 0px\")};\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 120px;\r\n  height: 100%;\r\n  border-radius: 4px;\r\n  padding: 7.5px;\r\n  background-color: #79be8c;\r\n  font-size: 1.6rem;\r\n  color: #fff;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    background-color: #64b37a;\r\n  }\r\n\r\n  &::placeholder {\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst navigationElements = [\"Your list\", \"Theme\", \"Help\"];\r\n\r\nconst Navigation = ({\r\n  elementHoverEnter,\r\n  elementHoverLeave,\r\n  themeFunction,\r\n}) => {\r\n  return (\r\n    <StyledNav className=\"nav\">\r\n      <StyledUl>\r\n        {navigationElements.map((element) => (\r\n          <NavListView\r\n            themeFunction={element === \"Theme\" ? themeFunction : null}\r\n            elementHoverEnter={(e) => elementHoverEnter(e)}\r\n            elementHoverLeave={(e) => elementHoverLeave(e)}\r\n            linkTitle={element}\r\n            key={element}\r\n          />\r\n        ))}\r\n        <StyledList lastEle>\r\n          <StyledInput className=\"item\" placeholder=\"Search...\" />\r\n        </StyledList>\r\n      </StyledUl>\r\n    </StyledNav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport NavigationView from \"../../components/Navigation/NavigationView\";\r\n\r\nclass Navigations extends Component {\r\n  themeFunction = () => {\r\n    this.props.themeToggle(!this.props.themeOption);\r\n  };\r\n\r\n  render() {\r\n    const { elementHoverEnter, elementHoverLeave } = this.props;\r\n    return (\r\n      <>\r\n        <NavigationView\r\n          elementHoverEnter={elementHoverEnter}\r\n          elementHoverLeave={elementHoverLeave}\r\n          themeFunction={this.themeFunction}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigations;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledContentWrap = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  pointer-events: none;\r\n  padding: 2px;\r\n`;\r\n\r\nconst StyledContent = styled.h3`\r\n  flex-grow: 1;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #172b4d;\r\n`;\r\n\r\nconst StyledEdit = styled.span`\r\n  margin: 0 5px;\r\n  align-self: center;\r\n  pointer-events: initial;\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 5px;\r\n  font-size: 12.5px;\r\n`;\r\n\r\nconst StyledTermInCard = styled.span`\r\n  color: #888;\r\n  font-size: 12.5px;\r\n  letter-spacing: 0.5px;\r\n  margin-left: 3px;\r\n`;\r\n\r\nclass Card extends Component {\r\n  state = {\r\n    selected: false,\r\n    scrollHeight: 0,\r\n    taskk: \"\",\r\n    offsetX: \"\",\r\n    offsetY: \"\",\r\n    cardH: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      taskk: this.props.task.taskName,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.removeEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n  }\r\n\r\n  mouseDownFeature = (e) => {\r\n    if (e.target.classList[0] !== \"card\") return;\r\n    const card = document.getElementById(this.props.task.id);\r\n    const cardH = card.clientHeight;\r\n    this.setState({\r\n      selected: true,\r\n      offsetX: e.nativeEvent.offsetX,\r\n      offsetY: e.nativeEvent.offsetY,\r\n      cardH: cardH,\r\n    });\r\n\r\n    e.target.style.zIndex = 999;\r\n    document.addEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.addEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n  };\r\n\r\n  mouseUpFeature = (e) => {\r\n    const card = document.getElementById(this.props.task.id);\r\n    if (e.target.classList[0] !== \"card\") return;\r\n    card.style.cursor = \"pointer\";\r\n    card.style.position = \"static\";\r\n    card.style.transform = \"rotate(0deg)\";\r\n    card.style.boxShadow = null;\r\n    card.style.zIndex = 0;\r\n\r\n    const {\r\n      scrollPosition,\r\n      wholeList,\r\n      addNewCardFeature,\r\n      deleteCardFeatureByMove,\r\n      listId,\r\n    } = this.props;\r\n\r\n    const scrollHeighFromMain = Math.floor(scrollPosition);\r\n    const taskId = card.getAttribute(\"id\");\r\n    const draggedCard = document.getElementById(taskId);\r\n\r\n    const draggedCardChildren = draggedCard.children;\r\n    const draggenCardLabelsChildren = [...draggedCardChildren[0].children]; //Weard thing that is need to properly dragging without doubling card content\r\n    const draggedCardTermChildren = [...draggedCard.children[2].children]; //Weard thing that is need to properly dragging without doubling card content\r\n\r\n    if (e.pageX < 285 - scrollHeighFromMain) {\r\n      if (wholeList[0].id === listId) return this.mouseLeaveFeature(card); //When put card in this same place\r\n      draggenCardLabelsChildren.forEach((ele) => {\r\n        ele.textContent = \"\";\r\n      });\r\n      draggedCardTermChildren.forEach((ele) => {\r\n        ele.textContent = \"\";\r\n      });\r\n      deleteCardFeatureByMove(listId, taskId);\r\n      addNewCardFeature(wholeList[0].id, card.textContent, taskId);\r\n    }\r\n\r\n    for (let i = 1; i <= 10; i++) {\r\n      if (\r\n        e.pageX > 285 * i - scrollHeighFromMain &&\r\n        e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n        wholeList.length >= i + 1\r\n      ) {\r\n        if (wholeList[i].id === listId) return this.mouseLeaveFeature(card); //When put card in this same place\r\n        draggenCardLabelsChildren.forEach((ele) => {\r\n          ele.textContent = \"\";\r\n        });\r\n        draggedCardTermChildren.forEach((ele) => {\r\n          ele.textContent = \"\";\r\n        });\r\n        deleteCardFeatureByMove(listId, taskId);\r\n        addNewCardFeature(wholeList[i].id, card.textContent, taskId);\r\n      }\r\n    }\r\n\r\n    this.props.isDragAndDropTrue(false);\r\n    this.props.clearAllBlankSpan();\r\n\r\n    document.removeEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.removeEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n\r\n    this.setState({\r\n      selected: false,\r\n    });\r\n  };\r\n\r\n  mouseMoveFeature = (e) => {\r\n    const scrollHeighFromMain = Math.floor(this.props.scrollPosition);\r\n    const card = document.getElementById(this.props.task.id);\r\n\r\n    if (this.state.selected) {\r\n      card.style.left = `${e.pageX - card.getBoundingClientRect().width / 2}px`;\r\n      card.style.top = `${e.pageY - card.getBoundingClientRect().height / 2}px`;\r\n\r\n      card.style.position = \"fixed\";\r\n      card.style.cursor = \"grabbing\";\r\n      card.style.transform = \"rotate(5deg)\";\r\n      card.style.boxShadow = \"0px 10px 20px 0.6px rgba(0,0,0,0.25)\";\r\n      card.style.zIndex = 999;\r\n\r\n      const allBlankSpan = document.querySelectorAll(\".blank\");\r\n      allBlankSpan.forEach((all) => {\r\n        all.style.width = \"0\";\r\n        all.style.height = \"0\";\r\n        all.style.backgroundColor = \"transparent\";\r\n      });\r\n\r\n      for (let i = 1; i < 10; i++) {\r\n        if (e.pageX < 285 - scrollHeighFromMain) {\r\n          allBlankSpan[0].style.width = \"100%\";\r\n          allBlankSpan[0].style.height = `${this.state.cardH}px`;\r\n          allBlankSpan[0].style.backgroundColor = \"#dddfe5\";\r\n          allBlankSpan[0].style.borderRadius = \"5px\";\r\n        } else if (\r\n          e.pageX > 285 * i - scrollHeighFromMain &&\r\n          e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n          this.props.wholeList.length >= i + 1\r\n        ) {\r\n          allBlankSpan[i].style.width = \"100%\";\r\n          allBlankSpan[i].style.height = `${this.state.cardH}px`;\r\n          allBlankSpan[i].style.backgroundColor = \"#dddfe5\";\r\n          allBlankSpan[i].style.borderRadius = \"5px\";\r\n        }\r\n      }\r\n    }\r\n\r\n    this.props.isDragAndDropTrue(true);\r\n  };\r\n\r\n  mouseLeaveFeature = (card) => {\r\n    const target = card;\r\n    target.style.cursor = \"pointer\";\r\n    target.style.position = \"static\";\r\n    target.style.transform = \"rotate(0deg)\";\r\n    target.style.zIndex = 0;\r\n    this.props.clearAllBlankSpan();\r\n    this.props.isDragAndDropTrue(false);\r\n\r\n    document.removeEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.removeEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n\r\n    this.setState({\r\n      selected: false,\r\n    });\r\n  };\r\n\r\n  labelFontSizeToggle = (hideFontSizeLabel) => {\r\n    this.props.setHideFontSizeLabel(!hideFontSizeLabel);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      task,\r\n      inputTitle,\r\n      listId,\r\n      taskDetailsFunction,\r\n      visibilityOptionFunction,\r\n      hideFontSizeLabel,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div\r\n        id={task.id}\r\n        className=\"card\"\r\n        onDoubleClick={(e) =>\r\n          taskDetailsFunction(task.taskName, inputTitle, listId, task.id)\r\n        }\r\n        onMouseDown={(e) => this.mouseDownFeature(e)}\r\n        style={{\r\n          border: task.priority === \"priority\" ? \"1px solid #db4a36\" : null,\r\n        }}\r\n      >\r\n        <div\r\n          className=\"card_wrapLabel\"\r\n          onClick={() => this.labelFontSizeToggle(hideFontSizeLabel)}\r\n          style={{\r\n            fontSize: hideFontSizeLabel ? 0 : \"12px\",\r\n            pointerEvents: \"none\",\r\n          }}\r\n        >\r\n          {task.badges.map((ele) => (\r\n            <div\r\n              key={ele.color}\r\n              id={ele.labelId}\r\n              className=\"labelElement\"\r\n              style={{ backgroundColor: ele.color, pointerEvents: \"none\" }}\r\n            >\r\n              {ele.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <StyledContentWrap>\r\n          <StyledContent>{task.taskName}</StyledContent>\r\n          <StyledEdit\r\n            className=\"fas fa-highlighter\"\r\n            onClick={(e) =>\r\n              visibilityOptionFunction(\r\n                e,\r\n                true,\r\n                task,\r\n                listId,\r\n                task.currentListName,\r\n                task.id\r\n              )\r\n            }\r\n          />\r\n        </StyledContentWrap>\r\n\r\n        <div\r\n          style={{ width: \"100%\", pointerEvents: \"none\" }}\r\n          id={`${task.id}term`}\r\n        >\r\n          {task.date.map((ele) => (\r\n            <StyledTermInCard key={ele.id}>\r\n              <StyledIcon className=\"far fa-clock\" />\r\n              {`${ele.day} ${ele.monthName} ${ele.status}`}\r\n            </StyledTermInCard>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledAddButton = styled.button`\r\n  background-color: #5aac44;\r\n  border-radius: 5px;\r\n  color: white;\r\n  padding: 8px 20px;\r\n  margin: 5px 0px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #67ba50;\r\n  }\r\n`;\r\n\r\nconst StyledSpanX = styled.span`\r\n  font-size: 2.3rem;\r\n  vertical-align: middle;\r\n  color: #666;\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction ListButtons({\r\n  showAddField,\r\n  id,\r\n  textAreaValue,\r\n  addNewCardFeature,\r\n  swapAddFieldFeature,\r\n}) {\r\n  return (\r\n    <>\r\n      {showAddField ? (\r\n        <>\r\n          <StyledAddButton onClick={() => addNewCardFeature(id, textAreaValue)}>\r\n            Add Card\r\n          </StyledAddButton>\r\n          <StyledSpanX\r\n            className=\"fas fa-times\"\r\n            onClick={() => swapAddFieldFeature(\"SpanX\")}\r\n          />\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListButtons;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledInput = styled.input`\r\n  width: 220px;\r\n  background-color: #ebecf0;\r\n  border-radius: 1px;\r\n  padding: 5px 4px;\r\n  font-size: 1.4rem;\r\n  font-weight: 600;\r\n  color: #172b4d;\r\n\r\n  &:focus {\r\n    background-color: white;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n\r\n  &::placeholder {\r\n    font-weight: 400;\r\n    color: #779;\r\n  }\r\n`;\r\n\r\nconst StyledInputCover = styled.div`\r\n  display: inline-block;\r\n  width: 220px;\r\n  background-color: #ebecf0;\r\n  border-radius: 1px;\r\n  padding: 5px 4px;\r\n  font-size: 1.4rem;\r\n  font-weight: 600;\r\n  color: #172b4d;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nfunction ListInput({ selectedList, id, inputTitle, listOption, setListTitle }) {\r\n  return (\r\n    <>\r\n      {selectedList ? (\r\n        <StyledInputCover\r\n          onChange={(e) => setListTitle(e, id)}\r\n          className=\"input\"\r\n        >\r\n          {inputTitle}\r\n        </StyledInputCover>\r\n      ) : (\r\n        <StyledInput\r\n          value={inputTitle}\r\n          onChange={(e) => setListTitle(e, id)}\r\n          className=\"input\"\r\n          placeholder=\"Add any title...\"\r\n        />\r\n      )}\r\n      <span className=\"fas fa-ellipsis-h\" onClick={() => listOption(id)} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListInput;\r\n","import React from \"react\";\r\nimport Card from \"../../components/Card/Card\";\r\nimport ListButtons from \"./ListButtons/ListButtons\";\r\nimport ListInput from \"./ListInput/ListInput\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 100%;\r\n  height: ${(props) => (props.showStyle ? \"60px\" : \"31px\")};\r\n  background-color: ${(props) => (props.showStyle ? \"#fff\" : \"#ebecf0\")};\r\n  border-radius: 5px;\r\n  padding: 7.5px;\r\n  color: #779;\r\n  resize: none;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  box-shadow: ${(props) =>\r\n    props.showStyle ? \"0px 0.5px 0px 0.5px #aaa\" : \"none\"};\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.showStyle ? null : \"#dddfe5\")};\r\n  }\r\n`;\r\n\r\nfunction ListView({\r\n  mouseDownFeature,\r\n  selectedList,\r\n  listOption,\r\n  wholeList,\r\n  id,\r\n  tasks,\r\n  scrollPosition,\r\n  isDragAndDropTrue,\r\n  visibilityOptionFunction,\r\n  taskDetailsFunction,\r\n  inputTitle,\r\n  clearAllBlankSpan,\r\n  showAddField,\r\n  textAreaValue,\r\n  setTextAreaValue,\r\n  swapAddFieldFeature,\r\n  setListTitle,\r\n  addNewCardFeature,\r\n  deleteCardFeatureByMove,\r\n  hideFontSizeLabel,\r\n  setHideFontSizeLabel,\r\n}) {\r\n  return (\r\n    <div\r\n      className=\"lists\"\r\n      id={`list${id}`}\r\n      onMouseDown={(e) => mouseDownFeature(e)}\r\n    >\r\n      <ListInput\r\n        selectedList={selectedList}\r\n        id={id}\r\n        inputTitle={inputTitle}\r\n        listOption={listOption}\r\n        setListTitle={setListTitle}\r\n      />\r\n\r\n      {tasks.map((task) => (\r\n        <Card\r\n          wholeList={wholeList}\r\n          key={task.id}\r\n          task={task}\r\n          listId={id}\r\n          addNewCardFeature={addNewCardFeature}\r\n          deleteCardFeatureByMove={deleteCardFeatureByMove}\r\n          scrollPosition={scrollPosition}\r\n          isDragAndDropTrue={isDragAndDropTrue}\r\n          visibilityOptionFunction={visibilityOptionFunction}\r\n          taskDetailsFunction={taskDetailsFunction}\r\n          inputTitle={inputTitle}\r\n          clearAllBlankSpan={clearAllBlankSpan}\r\n          hideFontSizeLabel={hideFontSizeLabel}\r\n          setHideFontSizeLabel={setHideFontSizeLabel}\r\n        />\r\n      ))}\r\n      <div className=\"blank\" />\r\n      <StyledTextArea\r\n        value={showAddField ? textAreaValue : \"Add Another Card\"}\r\n        onChange={(e) => setTextAreaValue(e)}\r\n        onClick={() => swapAddFieldFeature(\"textArea\")}\r\n        showStyle={showAddField}\r\n        placeholder=\"Add title for this card...\"\r\n      />\r\n      <ListButtons\r\n        showAddField={showAddField}\r\n        id={id}\r\n        textAreaValue={textAreaValue}\r\n        addNewCardFeature={addNewCardFeature}\r\n        swapAddFieldFeature={swapAddFieldFeature}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default ListView;\r\n","import React, { Component } from \"react\";\r\nimport ListView from \"../../components/List/ListView\";\r\n\r\nclass List extends Component {\r\n  state = {\r\n    inputTitle: \"\",\r\n    showAddField: false,\r\n    textAreaValue: \"\",\r\n    selectedList: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"click\", this.hideAll);\r\n    document.addEventListener(\"keypress\", (e) =>\r\n      this.addNewCardFeatureByKey(e, this.props.id, this.state.textAreaValue)\r\n    );\r\n    const main = document.querySelector(\".main\");\r\n    const mainWidth = main.offsetWidth;\r\n    main.scroll({\r\n      left: mainWidth + 285 * (this.props.wholeList.length + 1),\r\n      behavior: \"smooth\",\r\n    });\r\n\r\n    this.setState({\r\n      inputTitle: this.props.title,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"click\", this.hideAll);\r\n    document.removeEventListener(\"keypress\", (e) =>\r\n      this.addNewCardFeatureByKey(e, this.props.id, this.state.textAreaValue)\r\n    );\r\n    document.removeEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.removeEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n  }\r\n\r\n  hideAll = (e) => {\r\n    const searchingClass = e.target.className;\r\n    if (\r\n      searchingClass.includes(\"main\") ||\r\n      searchingClass.includes(\"input\") ||\r\n      searchingClass.includes(\"nav\") ||\r\n      searchingClass.includes(\"wrapList\") ||\r\n      searchingClass.includes(\"singleListWrap\")\r\n    ) {\r\n      this.setState({\r\n        showAddField: false,\r\n      });\r\n      this.props.showListHandle(false);\r\n      this.props.setListInput(\"\");\r\n    }\r\n  };\r\n\r\n  setListTitle = (e, listId) => {\r\n    this.setState({\r\n      inputTitle: e.target.value,\r\n    });\r\n    this.props.updateListTitle(e.target.value, listId);\r\n  };\r\n\r\n  swapAddFieldFeature = (buttonId) => {\r\n    if (buttonId === \"textArea\") {\r\n      this.setState({\r\n        showAddField: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showAddField: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  setTextAreaValue = (e) => {\r\n    this.setState({\r\n      textAreaValue: e.target.value,\r\n    });\r\n  };\r\n\r\n  addNewCardFeature = (listId, textAreaValue, taskId) => {\r\n    this.props.addNewCard(listId, textAreaValue, taskId);\r\n    this.setState({\r\n      showAddField: false,\r\n      textAreaValue: \"\",\r\n    });\r\n  };\r\n\r\n  addNewCardFeatureByKey = (e, listId, textAreaValue, taskId) => {\r\n    if (e.which === 13 && this.state.showAddField) {\r\n      e.preventDefault();\r\n      this.props.addNewCard(listId, textAreaValue, taskId);\r\n      this.setState({\r\n        textAreaValue: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteCardFeatureByMove = (listId, taskId) => {\r\n    this.props.deleteCard(listId, taskId);\r\n    this.setState({\r\n      textAreaValue: \"\",\r\n    });\r\n  };\r\n\r\n  mouseDownFeature = (e) => {\r\n    if (e.target.classList[0] !== \"lists\") return;\r\n    this.setState({\r\n      selectedList: true,\r\n    });\r\n    e.target.style.zIndex = 999;\r\n    e.target.style.cursor = \"grabbing\";\r\n    e.target.style.boxShadow = \"0px 10px 20px 0.6px rgba(0,0,0,0.25)\";\r\n\r\n    document.addEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.addEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n  };\r\n\r\n  mouseMoveFeature = (e) => {\r\n    const list = document.getElementById(`list${this.props.id}`);\r\n    const scrollHeighFromMain = Math.floor(this.props.scrollPosition);\r\n    if (this.state.selectedList && list.classList[0] === \"lists\") {\r\n      list.style.left = `${e.clientX - 135}px`;\r\n      list.style.top = `${e.clientY - 45}px`;\r\n      list.style.position = \"fixed\";\r\n      list.style.transform = \"rotate(5deg)\";\r\n\r\n      const allBlankSpan = document.querySelectorAll(\".frontBlankList\");\r\n      allBlankSpan.forEach((all) => {\r\n        all.style.display = \"none\";\r\n      });\r\n\r\n      for (let i = 1; i < 10; i++) {\r\n        if (e.pageX < 285 - scrollHeighFromMain) {\r\n          allBlankSpan[0].style.width = \"275px\";\r\n          allBlankSpan[0].style.height = \"10px\";\r\n          allBlankSpan[0].style.backgroundColor = \"rgba(0,0,0,0.15)\";\r\n          allBlankSpan[0].style.marginRight = \"10px\";\r\n          allBlankSpan[0].style.borderRadius = \"4px\";\r\n          allBlankSpan[0].style.display = \"initial\";\r\n          allBlankSpan[0].style.position = \"absolute\";\r\n          allBlankSpan[0].style.top = \"-17.5px\";\r\n        } else if (\r\n          e.pageX > 285 * i - scrollHeighFromMain &&\r\n          e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n          this.props.wholeList.length >= i + 1\r\n        ) {\r\n          allBlankSpan[i].style.width = \"275px\";\r\n          allBlankSpan[i].style.height = \"10px\";\r\n          allBlankSpan[i].style.backgroundColor = \"rgba(0,0,0,0.15)\";\r\n          allBlankSpan[i].style.marginRight = \"10px\";\r\n          allBlankSpan[i].style.borderRadius = \"4px\";\r\n          allBlankSpan[i].style.display = \"initial\";\r\n          allBlankSpan[i].style.position = \"absolute\";\r\n          allBlankSpan[i].style.top = \"-17.5px\";\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  mouseUpFeature = (e) => {\r\n    const list = document.getElementById(`list${this.props.id}`);\r\n    if (list.classList[0] !== \"lists\") return;\r\n    list.style.position = \"static\";\r\n    list.style.cursor = \"pointer\";\r\n    list.style.zIndex = null;\r\n    list.style.boxShadow = null;\r\n    list.style.transform = null;\r\n\r\n    const { scrollPosition, wholeList } = this.props;\r\n    const scrollHeighFromMain = Math.floor(scrollPosition);\r\n\r\n    const allBlankSpan = document.querySelectorAll(\".frontBlankList\");\r\n    allBlankSpan.forEach((all) => {\r\n      all.style.display = \"none\";\r\n    });\r\n\r\n    const draggedListIndex = this.props.wholeList.findIndex(\r\n      (list) => list.id === this.props.id\r\n    );\r\n\r\n    if (e.pageX < 285 - scrollHeighFromMain) {\r\n      this.props.moveListToAnotherPlace(draggedListIndex, 0);\r\n    }\r\n\r\n    for (let i = 1; i < 10; i++) {\r\n      if (\r\n        e.pageX > 285 * i - scrollHeighFromMain &&\r\n        e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n        wholeList.length >= i + 1\r\n      ) {\r\n        this.props.moveListToAnotherPlace(draggedListIndex, i);\r\n      }\r\n    }\r\n    document.removeEventListener(\"mousemove\", this.mouseMoveFeature, true);\r\n    document.removeEventListener(\"mouseup\", this.mouseUpFeature, true);\r\n    this.setState({\r\n      selectedList: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      listOption,\r\n      id,\r\n      tasks,\r\n      wholeList,\r\n      scrollPosition,\r\n      isDragAndDropTrue,\r\n      visibilityOptionFunction,\r\n      taskDetailsFunction,\r\n      clearAllBlankSpan,\r\n      hideFontSizeLabel,\r\n      setHideFontSizeLabel,\r\n    } = this.props;\r\n    const {\r\n      showAddField,\r\n      textAreaValue,\r\n      inputTitle,\r\n      selectedList,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"singleListWrap\">\r\n        <div className=\"frontBlankList\"></div>\r\n        <ListView\r\n          selectedList={selectedList}\r\n          listOption={listOption}\r\n          wholeList={wholeList}\r\n          id={id}\r\n          tasks={tasks}\r\n          scrollPosition={scrollPosition}\r\n          isDragAndDropTrue={isDragAndDropTrue}\r\n          visibilityOptionFunction={visibilityOptionFunction}\r\n          taskDetailsFunction={taskDetailsFunction}\r\n          inputTitle={inputTitle}\r\n          clearAllBlankSpan={clearAllBlankSpan}\r\n          showAddField={showAddField}\r\n          textAreaValue={textAreaValue}\r\n          mouseDownFeature={this.mouseDownFeature}\r\n          setTextAreaValue={this.setTextAreaValue}\r\n          swapAddFieldFeature={this.swapAddFieldFeature}\r\n          setListTitle={this.setListTitle}\r\n          addNewCardFeature={this.addNewCardFeature}\r\n          deleteCardFeatureByMove={this.deleteCardFeatureByMove}\r\n          hideFontSizeLabel={hideFontSizeLabel}\r\n          setHideFontSizeLabel={setHideFontSizeLabel}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport List from \"../../Containers/List/List\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMain = styled.main`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  width: auto;\r\n  min-height: calc(100vh - 40px);\r\n  background-color: #4bbf6b;\r\n  padding: 40px 6px 0px 6px;\r\n  overflow-x: scroll;\r\n`;\r\n\r\nconst StyledListInput = styled.input`\r\n  width: 265px;\r\n  background-color: #76ce8e;\r\n  border-radius: 4px;\r\n  padding: 12px 7.5px;\r\n  text-align: left;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  box-shadow: 0px 0px 1px 0px #888;\r\n  font-size: 15px;\r\n\r\n  &::placeholder {\r\n    color: white;\r\n  }\r\n\r\n  &:focus {\r\n    background-color: #fff !important;\r\n    ::placeholder {\r\n      color: black;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledWrapList = styled.div`\r\n  display: flex;\r\n  width: auto;\r\n  flex-direction: row;\r\n  height: auto;\r\n  background-color: transparent;\r\n  margin-bottom: 10px;\r\n  padding: 3px 5px;\r\n  border-radius: 5px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  align-self: flex-start;\r\n  width: 50%;\r\n  background-color: #5aac44;\r\n  border-radius: 5px;\r\n  color: white;\r\n  padding: 8px 20px;\r\n  margin-top: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #67ba50;\r\n  }\r\n`;\r\n\r\nconst StyledWrapAddListBtn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  align-self: flex-start;\r\n  width: 275px;\r\n  border-radius: 4px;\r\n  padding: 0px 5px 5px 5px;\r\n  padding-top: ${(props) => (props.bgc ? \"5px\" : \"0px\")};\r\n  background-color: ${(props) => (props.bgc ? \"#ebecf0\" : \"transparent\")};\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nfunction CoreFieldView({\r\n  scroll,\r\n  mousePositionX,\r\n  wholeList,\r\n  listOption,\r\n  addNewCard,\r\n  deleteCard,\r\n  showListHandle,\r\n  setListInput,\r\n  scrollPosition,\r\n  isDragAndDropTrue,\r\n  visibilityOptionFunction,\r\n  taskDetailsFunction,\r\n  updateListTitle,\r\n  moveListToAnotherPlace,\r\n  clearAllBlankSpan,\r\n  showList,\r\n  showAddListHandle,\r\n  listInputHandle,\r\n  listInputValue,\r\n  addNewList,\r\n  addNewListByKey,\r\n  elementHoverEnter,\r\n  elementHoverLeave,\r\n  hideFontSizeLabel,\r\n  setHideFontSizeLabel,\r\n}) {\r\n  return (\r\n    <StyledMain\r\n      className=\"main\"\r\n      onScroll={(e) => scroll(e)}\r\n      onMouseMove={(e) => mousePositionX(e)}\r\n    >\r\n      <StyledWrapList className=\"wrapList\">\r\n        {wholeList.map((list) => (\r\n          <List\r\n            wholeList={wholeList}\r\n            key={list.id}\r\n            id={list.id}\r\n            title={list.title}\r\n            tasks={list.tasks}\r\n            listOption={listOption}\r\n            addNewCard={addNewCard}\r\n            deleteCard={deleteCard}\r\n            showListHandle={showListHandle}\r\n            setListInput={setListInput}\r\n            scrollPosition={scrollPosition}\r\n            isDragAndDropTrue={isDragAndDropTrue}\r\n            visibilityOptionFunction={visibilityOptionFunction}\r\n            taskDetailsFunction={taskDetailsFunction}\r\n            updateListTitle={updateListTitle}\r\n            moveListToAnotherPlace={moveListToAnotherPlace}\r\n            clearAllBlankSpan={clearAllBlankSpan}\r\n            hideFontSizeLabel={hideFontSizeLabel}\r\n            setHideFontSizeLabel={setHideFontSizeLabel}\r\n          />\r\n        ))}\r\n        <StyledWrapAddListBtn bgc={showList ? true : false}>\r\n          <StyledListInput\r\n            bgc={showList ? true : false}\r\n            placeholder=\"Add another list\"\r\n            onClick={showAddListHandle}\r\n            onChange={(e) => listInputHandle(e)}\r\n            className=\"list\"\r\n            value={listInputValue}\r\n            onKeyPress={(e) => addNewListByKey(e)}\r\n            onMouseEnter={(e) => elementHoverEnter(e)}\r\n            onMouseLeave={(e) => elementHoverLeave(e)}\r\n          />\r\n          {showList ? (\r\n            <StyledButton\r\n              onClick={() =>\r\n                addNewList(listInputValue, showListHandle, setListInput)\r\n              }\r\n            >\r\n              Add List\r\n            </StyledButton>\r\n          ) : null}\r\n        </StyledWrapAddListBtn>\r\n      </StyledWrapList>\r\n    </StyledMain>\r\n  );\r\n}\r\n\r\nexport default CoreFieldView;\r\n","import React, { useState } from \"react\";\r\nimport CoreFieldView from \"../../components/CoreField/CoreFieldView\";\r\n\r\nconst MainField = ({\r\n  wholeList,\r\n  listOption,\r\n  addNewCard,\r\n  deleteCard,\r\n  addNewList,\r\n  updateListTitle,\r\n  elementHoverEnter,\r\n  elementHoverLeave,\r\n  visibilityOptionFunction,\r\n  taskDetailsFunction,\r\n  moveListToAnotherPlace,\r\n  clearAllBlankSpan,\r\n  hideFontSizeLabel,\r\n  setHideFontSizeLabel,\r\n}) => {\r\n  const [showList, showListHandle] = useState(false);\r\n  const [scrollPosition, updatedScrollPosition] = useState(0);\r\n  const [isDragDropTrue, isDragDropTrueFeature] = useState(\"\");\r\n\r\n  const showAddListHandle = () => {\r\n    showListHandle(true);\r\n  };\r\n\r\n  const [listInputValue, setListInput] = useState(\"\");\r\n\r\n  const listInputHandle = (e) => {\r\n    setListInput(e.target.value);\r\n  };\r\n\r\n  const addNewListByKey = (e) => {\r\n    if (e.which === 13 && showList) {\r\n      addNewList(listInputValue, showListHandle, setListInput);\r\n      showListHandle(true);\r\n    }\r\n  };\r\n\r\n  const scroll = (e) => {\r\n    const scrollPosition = e.target.scrollLeft;\r\n    updatedScrollPosition(scrollPosition);\r\n  };\r\n\r\n  const mousePositionX = (e) => {\r\n    const main = document.querySelector(\".main\");\r\n    const mainWidth = main.offsetWidth;\r\n    const mousePositionX = e.clientX;\r\n    if (mousePositionX <= 75 && isDragDropTrue) {\r\n      main.scroll({\r\n        left: 0,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n\r\n    if (mousePositionX >= mainWidth - 75 && isDragDropTrue) {\r\n      main.scroll({\r\n        left: mainWidth + 285 * (wholeList.length + 1),\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const isDragAndDropTrue = (isTrue) => {\r\n    isDragDropTrueFeature(isTrue);\r\n  };\r\n\r\n  return (\r\n    <CoreFieldView\r\n      scroll={scroll}\r\n      mousePositionX={mousePositionX}\r\n      wholeList={wholeList}\r\n      listOption={listOption}\r\n      addNewCard={addNewCard}\r\n      deleteCard={deleteCard}\r\n      showListHandle={showListHandle}\r\n      setListInput={setListInput}\r\n      scrollPosition={scrollPosition}\r\n      isDragAndDropTrue={isDragAndDropTrue}\r\n      visibilityOptionFunction={visibilityOptionFunction}\r\n      taskDetailsFunction={taskDetailsFunction}\r\n      updateListTitle={updateListTitle}\r\n      moveListToAnotherPlace={moveListToAnotherPlace}\r\n      clearAllBlankSpan={clearAllBlankSpan}\r\n      showList={showList}\r\n      showAddListHandle={showAddListHandle}\r\n      listInputHandle={listInputHandle}\r\n      listInputValue={listInputValue}\r\n      addNewList={addNewList}\r\n      addNewListByKey={addNewListByKey}\r\n      elementHoverEnter={elementHoverEnter}\r\n      elementHoverLeave={elementHoverLeave}\r\n      hideFontSizeLabel={hideFontSizeLabel}\r\n      setHideFontSizeLabel={setHideFontSizeLabel}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MainField;\r\n","const size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n  desktop: \"2560px\",\r\n};\r\n\r\nexport const device = {\r\n  mobileS: `(min-width: ${size.mobileS})`,\r\n  mobileM: `(min-width: ${size.mobileM})`,\r\n  mobileL: `(min-width: ${size.mobileL})`,\r\n  tablet: `(min-width: ${size.tablet})`,\r\n  laptop: `(min-width: ${size.laptop})`,\r\n  laptopL: `(min-width: ${size.laptopL})`,\r\n  desktop: `(min-width: ${size.desktop})`,\r\n  desktopL: `(min-width: ${size.desktop})`,\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../Style/MediaQuery/mq\";\r\n\r\nconst StyledColorDiv = styled.div`\r\n  width: 75px;\r\n  height: 75px;\r\n  border-radius: 5px;\r\n  margin-right: 5px;\r\n  margin-left: 5px;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    opacity: 0.75;\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    width: 45%;\r\n    height: 85px;\r\n  }\r\n`;\r\n\r\nconst StyledThemeDivTitle = styled.h3`\r\n  width: 100%;\r\n  padding: 10px 0px;\r\n  text-align: center;\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst StyledThemeDiv = styled.div`\r\n  position: fixed;\r\n  bottom: 17.5px;\r\n  right: 0;\r\n  width: 100%;\r\n  transform: ${(props) =>\r\n    props.showTheme ? \"translateX(0px)\" : \"translateX(100vw)\"};\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  background-color: #f4f5f7;\r\n  padding: 10px;\r\n  transition: 0.3s linear;\r\n  z-index: 999;\r\n\r\n  @media ${device.laptop} {\r\n    top: calc(0% + 40px);\r\n    right: 0;\r\n    width: 375px;\r\n    align-content: flex-start;\r\n  }\r\n`;\r\n\r\nfunction ThemeFieldView({ themeOption, changeColor, blockOfColors }) {\r\n  return (\r\n    <StyledThemeDiv showTheme={themeOption}>\r\n      <StyledThemeDivTitle>Colors</StyledThemeDivTitle>\r\n      {blockOfColors.map((block) => (\r\n        <StyledColorDiv\r\n          onClick={() =>\r\n            changeColor(\r\n              block.mainColor,\r\n              block.navColor,\r\n              block.listColor,\r\n              block.inputColor\r\n            )\r\n          }\r\n          style={{ backgroundColor: block.mainColor }}\r\n          key={block.mainColor}\r\n        />\r\n      ))}\r\n    </StyledThemeDiv>\r\n  );\r\n}\r\n\r\nexport default ThemeFieldView;\r\n","import React from \"react\";\r\nimport ThemeFieldView from \"../../components/ThemeField/ThemeFieldView\";\r\n\r\nfunction ThemeField({ themeOption, setWhichColor }) {\r\n  const changeColor = (mainColor, navColor, listColor, inputColor) => {\r\n    const main = document.querySelector(\".main\");\r\n    main.style.backgroundColor = mainColor;\r\n\r\n    const nav = document.querySelector(\".nav\");\r\n    nav.style.backgroundColor = navColor;\r\n\r\n    const lists = document.querySelectorAll(\".list\");\r\n    lists.forEach((list) => {\r\n      list.style.backgroundColor = listColor;\r\n    });\r\n\r\n    const inputs = document.querySelectorAll(\".item\");\r\n    inputs.forEach((input) => {\r\n      input.style.backgroundColor = inputColor;\r\n    });\r\n\r\n    setWhichColor([listColor]);\r\n  };\r\n\r\n  const blockOfColors = [\r\n    {\r\n      mainColor: \"#0079BF\",\r\n      navColor: \"#0067A3\",\r\n      listColor: \"#3D99CE\",\r\n      inputColor: \"#4D95BE\",\r\n    },\r\n    {\r\n      mainColor: \"#D29034\",\r\n      navColor: \"#B37B2C\",\r\n      listColor: \"#DDAB65\",\r\n      inputColor: \"#C9A26C\",\r\n    },\r\n    {\r\n      mainColor: \"#519839\",\r\n      navColor: \"#458131\",\r\n      listColor: \"#7BB168\",\r\n      inputColor: \"#7DA76F\",\r\n    },\r\n    {\r\n      mainColor: \"#B04632\",\r\n      navColor: \"#963C2B\",\r\n      listColor: \"#C37263\",\r\n      inputColor: \"#B5766B\",\r\n    },\r\n    {\r\n      mainColor: \"#89609E\",\r\n      navColor: \"#755286\",\r\n      listColor: \"#A586B5\",\r\n      inputColor: \"#9E86AB\",\r\n    },\r\n    {\r\n      mainColor: \"#CD5A91\",\r\n      navColor: \"#AE4D7B\",\r\n      listColor: \"#D981AB\",\r\n      inputColor: \"#C682A3\",\r\n    },\r\n    {\r\n      mainColor: \"#4BBF6B\",\r\n      navColor: \"#40A35B\",\r\n      listColor: \"#76CE8E\",\r\n      inputColor: \"#79BE8C\",\r\n    },\r\n    {\r\n      mainColor: \"#00AECC\",\r\n      navColor: \"#0094AE\",\r\n      listColor: \"#3DC1D8\",\r\n      inputColor: \"#4DB4C6\",\r\n    },\r\n    {\r\n      mainColor: \"#838C91\",\r\n      navColor: \"#6F777B\",\r\n      listColor: \"#A1A8AB\",\r\n      inputColor: \"#9BA0A3\",\r\n    },\r\n  ];\r\n  return (\r\n    <ThemeFieldView\r\n      changeColor={changeColor}\r\n      themeOption={themeOption}\r\n      blockOfColors={blockOfColors}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ThemeField;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledListBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 150px;\r\n  height: 250px;\r\n`;\r\n\r\nconst StyledList = styled.li`\r\n  list-style: none;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  border-radius: 3px;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 5px;\r\n  padding: 7px 10px;\r\n  font-size: 14px;\r\n  color: white;\r\n  transition: 0.1s linear;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.75);\r\n    transform: translateX(7.5px);\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: 13px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nfunction OptionCoverListView({\r\n  deleteCard,\r\n  listId,\r\n  handleLabelsVisibility,\r\n  addPriorityForCards,\r\n  optionCoverData,\r\n  changeListInDetails,\r\n  matchedPriority,\r\n  toggleDateVisibility,\r\n}) {\r\n  return (\r\n    <StyledListBlock className=\"cover_listBlock\">\r\n      <ul>\r\n        <StyledList onClick={() => handleLabelsVisibility(true)}>\r\n          <StyledIcon className=\"fas fa-tag\" />\r\n          Edit labels\r\n        </StyledList>\r\n        <StyledList\r\n          className=\"suggested\"\r\n          onClick={() => changeListInDetails(\"byNavMove\")}\r\n        >\r\n          <StyledIcon className=\"fas fa-long-arrow-alt-right\" />\r\n          Move\r\n        </StyledList>\r\n        <StyledList\r\n          className=\"suggested\"\r\n          onClick={() => changeListInDetails(\"byNavCopy\")}\r\n        >\r\n          <StyledIcon className=\"far fa-clipboard\" />\r\n          Copy\r\n        </StyledList>\r\n        <StyledList onClick={() => toggleDateVisibility()} className=\"calendar\">\r\n          <StyledIcon className=\"far fa-clock calendaer\" />\r\n          Date Change\r\n        </StyledList>\r\n        <StyledList\r\n          onClick={(e) =>\r\n            addPriorityForCards(\r\n              e,\r\n              optionCoverData[0].clickedCardId,\r\n              \"optionCover\"\r\n            )\r\n          }\r\n          style={{\r\n            color: `${matchedPriority.length !== 0 ? \"#db4a36\" : \"#FFF\"}`,\r\n          }}\r\n        >\r\n          <StyledIcon\r\n            className=\"fas fa-exclamation-circle\"\r\n            style={{\r\n              color: `${matchedPriority.length !== 0 ? \"#db4a36\" : \"#FFF\"}`,\r\n            }}\r\n          />\r\n          Priority\r\n        </StyledList>\r\n        <StyledList\r\n          onClick={(e) =>\r\n            deleteCard(listId, optionCoverData[0].clickedCardId, \"byButton\")\r\n          }\r\n        >\r\n          <StyledIcon className=\"fas fa-archive\" />\r\n          Archive\r\n        </StyledList>\r\n      </ul>\r\n    </StyledListBlock>\r\n  );\r\n}\r\n\r\nexport default OptionCoverListView;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledReplaceTitle = styled.h3`\r\n  width: 100%;\r\n  position: relative;\r\n  flex-grow: 1;\r\n  text-align: ${(props) => (props.alignCenter ? \"center\" : \"left\")};\r\n  font-size: 1.5rem;\r\n  border-bottom: ${(props) => (props.border ? \"1px solid #aaa\" : \"null\")};\r\n  padding-bottom: 6px;\r\n  color: #555;\r\n  font-weight: 400;\r\n  margin-bottom: ${(props) => (props.biggerMargin ? \"27.5px\" : \"5px\")};\r\n\r\n  & > .fa-times {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 95%;\r\n  background-color: #f5f6f8;\r\n  margin: 0px auto 10px auto;\r\n  padding: 7.5px 5px;\r\n  border-radius: 3px;\r\n  min-height: 75px;\r\n  resize: none;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  box-shadow: 0px 0px 1px 1.5px #aaa;\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledCheckedBox = styled.span`\r\n  position: relative;\r\n  width: 17px;\r\n  height: 17px;\r\n  border-radius: 2px;\r\n  margin-right: 10px;\r\n  margin-bottom: 10px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledCheckIcon = styled.span`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 8px;\r\n`;\r\n\r\nconst StyledCheckBoxTitle = styled.span`\r\n  font-size: 14px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst StyledSuggestList = styled.div`\r\n  width: 100%;\r\n  max-width: 275px;\r\n  word-break: break-all;\r\n  margin: 0 auto;\r\n  margin-bottom: 7px;\r\n  padding: 9px 7.5px;\r\n  font-size: 1.4rem;\r\n  background-color: #f5f6f8;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  color: black;\r\n  transition: 0.1s linear;\r\n  z-index: 9999;\r\n\r\n  &:hover {\r\n    background-color: #e6e8ed;\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: ${(props) => (props.biggerFont ? \"15.5px\" : \"13px\")};\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nfunction CopyCardView({\r\n  changeCopyTextArea,\r\n  copyTextArea,\r\n  matchedColorsToThisCard,\r\n  toggleCanCopyLables,\r\n  canCopyLabels,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  taskTitleList,\r\n  optionCover,\r\n  taskId,\r\n}) {\r\n  return (\r\n    <>\r\n      <StyledReplaceTitle className=\"suggested\">Title</StyledReplaceTitle>\r\n      <StyledTextArea\r\n        className=\"suggested\"\r\n        onChange={(e) => changeCopyTextArea(e)}\r\n        value={copyTextArea}\r\n      />\r\n      <StyledReplaceTitle className=\"suggested\">Keep...</StyledReplaceTitle>\r\n      <StyledCheckedBox\r\n        className=\"suggested\"\r\n        onClick={() => toggleCanCopyLables()}\r\n        style={{\r\n          backgroundColor: `${canCopyLabels ? \"#0079bf\" : \"#fff\"}`,\r\n          border: `${canCopyLabels ? \"2px solid #0079bf\" : \"2px solid #aaa\"}`,\r\n        }}\r\n      >\r\n        <StyledCheckIcon className=\"fas fa-check suggested\" />\r\n      </StyledCheckedBox>\r\n      <StyledCheckBoxTitle className=\"suggested\">\r\n        Labels ({matchedColorsToThisCard.length})\r\n      </StyledCheckBoxTitle>\r\n      <StyledReplaceTitle className=\"suggested\">\r\n        <StyledIcon className=\"fas fa-map-marker\" />\r\n        Copy to...\r\n      </StyledReplaceTitle>\r\n      {wholeList.map((list) => (\r\n        <StyledSuggestList\r\n          className=\"suggested\"\r\n          onClick={() =>\r\n            moveCardToAnotherList(\r\n              copyTextArea,\r\n              taskTitleList,\r\n              taskId,\r\n              list.id,\r\n              optionCover,\r\n              \"copy\",\r\n              canCopyLabels\r\n            )\r\n          }\r\n          key={list.id}\r\n        >\r\n          <StyledIcon biggerFont className=\"fas fa-long-arrow-alt-left\" />\r\n          {list.title}\r\n        </StyledSuggestList>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CopyCardView;\r\n","import React, { Component } from \"react\";\r\nimport CopyCardView from \"../../components/CopyCard/CopyCardView\";\r\n\r\nclass CopyCard extends Component {\r\n  state = {\r\n    copyTextArea: \"\",\r\n    canCopyLabels: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ copyTextArea: this.props.taskTitle });\r\n  }\r\n  changeCopyTextArea = (e) => {\r\n    this.setState({ copyTextArea: e.target.value });\r\n  };\r\n\r\n  toggleCanCopyLables = () => {\r\n    this.setState({\r\n      canCopyLabels: !this.state.canCopyLabels,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      matchedColorsToThisCard,\r\n      wholeList,\r\n      moveCardToAnotherList,\r\n      taskTitleList,\r\n      optionCover,\r\n      taskId,\r\n    } = this.props;\r\n    const { copyTextArea, canCopyLabels } = this.state;\r\n    return (\r\n      <CopyCardView\r\n        changeCopyTextArea={this.changeCopyTextArea}\r\n        copyTextArea={copyTextArea}\r\n        matchedColorsToThisCard={matchedColorsToThisCard}\r\n        toggleCanCopyLables={this.toggleCanCopyLables}\r\n        canCopyLabels={canCopyLabels}\r\n        wholeList={wholeList}\r\n        moveCardToAnotherList={moveCardToAnotherList}\r\n        taskTitleList={taskTitleList}\r\n        optionCover={optionCover}\r\n        taskId={taskId}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CopyCard;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CopyCard from \"../../Containers/CopyCard/CopyCard\";\r\n\r\nconst StyledChangeListDetails = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-wrap: wrap;\r\n  position: fixed;\r\n  right: ${(props) => (props.rightPosition ? \"-120px\" : \"null\")};\r\n  top: ${(props) => (props.topPosition ? \"0px\" : \"null\")};\r\n  width: 300px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst StyledReplaceTitle = styled.h3`\r\n  width: 100%;\r\n  position: relative;\r\n  flex-grow: 1;\r\n  text-align: ${(props) => (props.alignCenter ? \"center\" : \"left\")};\r\n  font-size: 1.5rem;\r\n  border-bottom: ${(props) => (props.border ? \"1px solid #aaa\" : \"null\")};\r\n  padding-bottom: 6px;\r\n  color: #555;\r\n  font-weight: 400;\r\n  margin-bottom: ${(props) => (props.biggerMargin ? \"27.5px\" : \"5px\")};\r\n\r\n  & > .fa-times {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledSuggestList = styled.div`\r\n  width: 100%;\r\n  max-width: 275px;\r\n  word-break: break-all;\r\n  margin: 0 auto;\r\n  margin-bottom: 7px;\r\n  padding: 9px 7.5px;\r\n  font-size: 1.4rem;\r\n  background-color: #f5f6f8;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  color: black;\r\n  transition: 0.1s linear;\r\n  z-index: 9999;\r\n\r\n  &:hover {\r\n    background-color: #e6e8ed;\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: ${(props) => (props.biggerFont ? \"15.5px\" : \"13px\")};\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nfunction MoveToAnotherListBox({\r\n  taskTitle,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  taskId,\r\n  changeListInDetails,\r\n  taskTitleList,\r\n  byElement,\r\n  optionCover,\r\n  copyVisibility,\r\n  matchedColorsToThisCard,\r\n}) {\r\n  return (\r\n    <StyledChangeListDetails\r\n      className=\"replaceCard suggested\"\r\n      rightPosition={optionCover}\r\n      topPosition={optionCover}\r\n    >\r\n      <StyledReplaceTitle border alignCenter biggerMargin className=\"suggested\">\r\n        Replace Card\r\n        <span\r\n          className=\"fas fa-times\"\r\n          onClick={() => changeListInDetails(byElement)}\r\n        ></span>\r\n      </StyledReplaceTitle>\r\n      {copyVisibility ? (\r\n        <CopyCard\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          taskTitle={taskTitle}\r\n          taskTitleList={taskTitleList}\r\n          optionCover={optionCover}\r\n          taskId={taskId}\r\n        />\r\n      ) : (\r\n        <>\r\n          {\" \"}\r\n          <StyledReplaceTitle className=\"suggested\">\r\n            <StyledIcon className=\"fas fa-map-marker\" />\r\n            Suggested\r\n          </StyledReplaceTitle>\r\n          {wholeList.map((list) => (\r\n            <StyledSuggestList\r\n              className=\"suggested\"\r\n              onClick={() =>\r\n                moveCardToAnotherList(\r\n                  taskTitle,\r\n                  taskTitleList,\r\n                  taskId,\r\n                  list.id,\r\n                  optionCover\r\n                )\r\n              }\r\n              key={list.id}\r\n            >\r\n              <StyledIcon biggerFont className=\"fas fa-long-arrow-alt-left\" />\r\n              {list.title.length !== 0 ? list.title : \"No Name List\"}\r\n            </StyledSuggestList>\r\n          ))}\r\n        </>\r\n      )}\r\n    </StyledChangeListDetails>\r\n  );\r\n}\r\n\r\nexport default MoveToAnotherListBox;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledBack = styled.span`\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledNameLabels = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: column;\r\n  top: ${(props) => (props.optionCoverPosition ? \"0px\" : \"null\")};\r\n  right: ${(props) => (props.optionCoverPosition ? \"0px\" : \"null\")};\r\n  width: 310px;\r\n  height: 350px;\r\n  transform: ${(props) =>\r\n    props.optionCoverPosition ? \"translate(130px)\" : \"null\"};\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst StyledLabelTitle = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #42516e;\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n  margin: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledLabelInput = styled.input`\r\n  width: 95%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 7.5px 5px;\r\n  margin: 15px auto;\r\n  margin-top: ${(props) => (props.marginTop ? \"5px\" : \"15px\")};\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledName = styled.h3`\r\n  margin-left: 7px;\r\n  margin-top: 7px;\r\n`;\r\n\r\nconst StyledWrapColors = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  margin-top: 7px;\r\n`;\r\n\r\nconst StyledColorSquar = styled.div`\r\n  width: 18%;\r\n  height: 40px;\r\n  border-radius: 4px;\r\n  margin-right: 2.5px;\r\n  margin-left: 2.5px;\r\n  margin-bottom: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.85;\r\n  }\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: #5aac44;\r\n  border-radius: 4px;\r\n  margin: 0 auto;\r\n  margin-top: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: #6abc54;\r\n  }\r\n`;\r\n\r\nconst StyledTitle = styled.h4``;\r\n\r\nfunction LabelsNameColors({\r\n  nameLabelVisibility,\r\n  filteredColors,\r\n  detailCover,\r\n  optionCover,\r\n  nameLabelInput,\r\n  nameLabelInputValue,\r\n  choosedSquar,\r\n  saveNameLabel,\r\n  currentSquarEdit,\r\n}) {\r\n  return (\r\n    <StyledNameLabels\r\n      className=\"label\"\r\n      detailCover={detailCover}\r\n      optionCoverPosition={optionCover}\r\n      onKeyPress={(e) => saveNameLabel(e)}\r\n    >\r\n      <StyledLabelTitle className=\"label\">\r\n        <StyledBack\r\n          className=\"fas fa-angle-left label\"\r\n          onClick={(e) => nameLabelVisibility(e, false, null, \"back\")}\r\n        />\r\n        <StyledTitle>Change Label</StyledTitle>\r\n        <StyledX\r\n          className=\"fas fa-times\"\r\n          onClick={(e) => nameLabelVisibility(e, false, null)}\r\n        />\r\n      </StyledLabelTitle>\r\n      <StyledName>Name</StyledName>\r\n      <StyledLabelInput\r\n        className=\"label\"\r\n        marginTop\r\n        onChange={(e) => nameLabelInput(e)}\r\n        value={nameLabelInputValue}\r\n      />\r\n      <StyledName>Colors</StyledName>\r\n      <StyledWrapColors>\r\n        {filteredColors.map((color) => (\r\n          <StyledColorSquar\r\n            style={{\r\n              backgroundColor: `${color.color}`,\r\n              border:\r\n                currentSquarEdit === color.color ? \"1.5px solid black\" : null,\r\n            }}\r\n            className=\"label_colorSquar\"\r\n            key={color.color}\r\n            id={color.color}\r\n            onClick={(e) => choosedSquar(e, color.color)}\r\n          />\r\n        ))}\r\n      </StyledWrapColors>\r\n      <StyledButton className=\"label_saveBtn\" onClick={(e) => saveNameLabel(e)}>\r\n        SAVE\r\n      </StyledButton>\r\n    </StyledNameLabels>\r\n  );\r\n}\r\n\r\nexport default LabelsNameColors;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLabels = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: column;\r\n  top: ${(props) => (props.optionCoverPosition ? \"0px\" : \"null\")};\r\n  right: ${(props) => (props.optionCoverPosition ? \"0px\" : \"null\")};\r\n  width: 310px;\r\n  height: 555px;\r\n  transform: ${(props) =>\r\n    props.optionCoverPosition ? \"translate(130px)\" : \"null\"};\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst StyledLabelWrapEle = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledLabelElement = styled.div`\r\n  position: relative;\r\n  width: 80%;\r\n  height: 35px;\r\n  border-radius: 5px;\r\n  margin: 0 10px;\r\n  margin-bottom: 4px;\r\n  list-style: none;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    border-left: 10px solid rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  align-self: center;\r\n  border-radius: 3px;\r\n  margin: 0 auto;\r\n  margin-bottom: 4px;\r\n  padding: 10.5px;\r\n  font-size: 15px;\r\n  color: #aaa;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #eee;\r\n  }\r\n`;\r\n\r\nconst StyledLabelTitle = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid #42516e;\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n  margin: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledLabelInput = styled.input`\r\n  width: 95%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 7.5px 5px;\r\n  margin: 15px auto;\r\n  margin-top: ${(props) => (props.marginTop ? \"5px\" : \"15px\")};\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  margin-left: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledBack = styled.span`\r\n  font-size: 15px;\r\n  opacity: 0;\r\n`;\r\n\r\nconst StyledTitle = styled.h4``;\r\n\r\nconst StyledIconCheck = styled.div`\r\n  display: none;\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 17.5px;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 10px;\r\n  color: #fff;\r\n`;\r\n\r\nconst StyledNameSox = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  color: white;\r\n  font-weight: 600;\r\n  font-size: 13px;\r\n`;\r\nfunction LabelsChooseColors({\r\n  detailCover,\r\n  optionCover,\r\n  handleLabelsVisibility,\r\n  filteredColors,\r\n  nameLabelVisibility,\r\n  toggleLabelColorToCard,\r\n  taskId,\r\n  generateCheckIcon,\r\n  searchLabelColor,\r\n  searchInputLabel,\r\n}) {\r\n  useEffect(() => {\r\n    generateCheckIcon();\r\n  });\r\n\r\n  return (\r\n    <StyledLabels\r\n      className=\"label\"\r\n      optionCoverPosition={optionCover}\r\n      detailCover={detailCover}\r\n    >\r\n      <StyledLabelTitle className=\"label\">\r\n        <StyledBack className=\"fas fa-angle-left label\" />\r\n        <StyledTitle>Labels</StyledTitle>\r\n        <StyledX\r\n          className=\"fas fa-times\"\r\n          onClick={() => handleLabelsVisibility(false)}\r\n        />\r\n      </StyledLabelTitle>\r\n      <StyledLabelInput\r\n        placeholder=\"Search Labels...\"\r\n        className=\"label\"\r\n        onChange={(e) => searchLabelColor(e)}\r\n        value={searchInputLabel}\r\n      />\r\n      {filteredColors.map((color) => (\r\n        <StyledLabelWrapEle key={color.color} className=\"label\">\r\n          <StyledLabelElement\r\n            onClick={() => toggleLabelColorToCard(color.color, taskId)}\r\n            style={{ backgroundColor: `${color.color}` }}\r\n            className=\"label\"\r\n            id={color.color}\r\n          >\r\n            <StyledNameSox>{color.value}</StyledNameSox>\r\n            <StyledIconCheck\r\n              className=\"fas fa-check\"\r\n              id={`${color.color}Check`}\r\n            />\r\n          </StyledLabelElement>{\" \"}\r\n          <StyledIcon\r\n            className=\"fas fa-pen label\"\r\n            onClick={(e) => nameLabelVisibility(e, true, color.color, \"edit\")}\r\n          />\r\n        </StyledLabelWrapEle>\r\n      ))}\r\n    </StyledLabels>\r\n  );\r\n}\r\n\r\nexport default LabelsChooseColors;\r\n","import React from \"react\";\r\nimport LabelsNameColors from \"./LabelView/LabelsNameColors\";\r\nimport LabelsChooseColors from \"./LabelView/LabelsChooseColors\";\r\n\r\nfunction LabelsView({\r\n  handleLabelsVisibility,\r\n  detailCover,\r\n  optionCover,\r\n  nameLabelVisibility,\r\n  labelVisibility,\r\n  toggleLabelColorToCard,\r\n  taskId,\r\n  generateCheckIcon,\r\n  searchLabelColor,\r\n  searchInputLabel,\r\n  filteredColors,\r\n  nameLabelInput,\r\n  nameLabelInputValue,\r\n  choosedSquar,\r\n  saveNameLabel,\r\n  currentSquarEdit,\r\n}) {\r\n  return (\r\n    <>\r\n      {labelVisibility ? (\r\n        <LabelsNameColors\r\n          nameLabelVisibility={nameLabelVisibility}\r\n          filteredColors={filteredColors}\r\n          detailCover={detailCover}\r\n          nameLabelInput={nameLabelInput}\r\n          nameLabelInputValue={nameLabelInputValue}\r\n          choosedSquar={choosedSquar}\r\n          saveNameLabel={saveNameLabel}\r\n          currentSquarEdit={currentSquarEdit}\r\n          optionCover={optionCover}\r\n        />\r\n      ) : (\r\n        <LabelsChooseColors\r\n          detailCover={detailCover}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          filteredColors={filteredColors}\r\n          nameLabelVisibility={nameLabelVisibility}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          taskId={taskId}\r\n          generateCheckIcon={generateCheckIcon}\r\n          searchLabelColor={searchLabelColor}\r\n          searchInputLabel={searchInputLabel}\r\n          optionCover={optionCover}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LabelsView;\r\n","import React, { Component } from \"react\";\r\nimport LabelsView from \"../../components/Labels/LabelsView\";\r\n\r\nclass Labels extends Component {\r\n  state = {\r\n    labelVisibility: false,\r\n    searchInputLabel: \"\",\r\n    nameLabelInputValue: \"\",\r\n    currentMatchedColors: \"\",\r\n    currentSquarEdit: \"\",\r\n  };\r\n\r\n  nameLabelVisibility = (e, toggle, colorId, from) => {\r\n    if (from === \"back\") {\r\n      this.setState({\r\n        labelVisibility: toggle,\r\n      });\r\n      return;\r\n    }\r\n    if (colorId === null) {\r\n      this.setState({\r\n        labelVisibility: toggle,\r\n      });\r\n      this.props.handleLabelsVisibility(false);\r\n      return;\r\n    }\r\n    if (from === \"edit\") {\r\n      const isAnyTextAlready = e.target.parentNode.textContent;\r\n      this.setState({\r\n        labelVisibility: toggle,\r\n        currentSquarEdit: colorId,\r\n        currentMatchedColors: colorId,\r\n        nameLabelInputValue: isAnyTextAlready,\r\n      });\r\n    }\r\n  };\r\n\r\n  generateCheckIcon = () => {\r\n    const matchedBadges = this.props.listOfAllBadges.filter(\r\n      (ele) => ele.id === this.props.taskId\r\n    );\r\n    if (matchedBadges.length !== 0) {\r\n      matchedBadges.forEach((element) => {\r\n        const currentCheckIcon = document.getElementById(\r\n          `${element.color}Check`\r\n        );\r\n        if (currentCheckIcon) {\r\n          currentCheckIcon.style.display = \"block\";\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  searchLabelColor = (e) => {\r\n    this.setState({\r\n      searchInputLabel: e.target.value.substr(0, 17),\r\n    });\r\n  };\r\n\r\n  nameLabelInput = (e) => {\r\n    this.setState({\r\n      nameLabelInputValue: e.target.value.substr(0, 17),\r\n    });\r\n  };\r\n\r\n  choosedSquar = (e, colorId) => {\r\n    const allSquars = document.querySelectorAll(\".label_colorSquar\");\r\n    allSquars.forEach((ele) => {\r\n      ele.style.border = \"none\";\r\n    });\r\n    e.target.style.border = \"1.5px solid black\";\r\n\r\n    this.setState({\r\n      currentMatchedColors: colorId,\r\n    });\r\n  };\r\n\r\n  saveNameLabel = (e) => {\r\n    //Zmieniamy wartość name w badges ( renderuje sie nazwa w optionCover i detailCover lables)\r\n    const {\r\n      listOfAllBadges,\r\n      listOfAllTasksId,\r\n      labelColors,\r\n      setLabelColors,\r\n      handleLabelsVisibility,\r\n    } = this.props;\r\n\r\n    if (e.target.className.includes(\"label_saveBtn\") || e.which === 13) {\r\n      const { currentMatchedColors, nameLabelInputValue } = this.state;\r\n\r\n      if (currentMatchedColors.length === 0) return; // Return If color isn't choosed\r\n      const matchedBadges = listOfAllBadges.filter(\r\n        (ele) => ele.color === currentMatchedColors\r\n      );\r\n\r\n      matchedBadges.forEach((ele) => {\r\n        ele.name = nameLabelInputValue;\r\n      });\r\n\r\n      //Od razu pojawia się nazwa labeli w srodku labeli w CARD\r\n      listOfAllTasksId.forEach((ele) => {\r\n        const matchedLabelInCard = document.getElementById(\r\n          `${currentMatchedColors}${ele}`\r\n        );\r\n\r\n        if (matchedLabelInCard) {\r\n          matchedLabelInCard.textContent = nameLabelInputValue;\r\n        }\r\n      });\r\n\r\n      // zmieniamy odgórne labelColors by wszedzie wyswietlalo sie od razu i tak samo przy tworzeniu nowych\r\n      const index = labelColors.findIndex(\r\n        (ele) => ele.color === currentMatchedColors\r\n      );\r\n\r\n      const copyOfLabelColor = [...labelColors];\r\n      copyOfLabelColor.splice(index, 1, {\r\n        color: labelColors[index].color,\r\n        colorName: labelColors[index].colorName,\r\n        value: nameLabelInputValue,\r\n      });\r\n\r\n      //Update\r\n      setLabelColors(copyOfLabelColor);\r\n      this.nameLabelVisibility(false);\r\n      handleLabelsVisibility(false);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      handleLabelsVisibility,\r\n      detailCover,\r\n      optionCover,\r\n      addLabelColor,\r\n      optionCoverData,\r\n      toggleLabelColorToCard,\r\n      taskId,\r\n      labelColors,\r\n    } = this.props;\r\n\r\n    const {\r\n      searchInputLabel,\r\n      labelVisibility,\r\n      nameLabelInputValue,\r\n      currentSquarEdit,\r\n    } = this.state;\r\n\r\n    const copyOfColorsArray = [...labelColors];\r\n    const filteredColors = copyOfColorsArray.filter((ele) =>\r\n      ele.colorName.toUpperCase().includes(searchInputLabel.toUpperCase())\r\n    );\r\n    return (\r\n      <LabelsView\r\n        handleLabelsVisibility={handleLabelsVisibility}\r\n        detailCover={detailCover}\r\n        nameLabelVisibility={this.nameLabelVisibility}\r\n        labelVisibility={labelVisibility}\r\n        addLabelColor={addLabelColor}\r\n        optionCoverData={optionCoverData}\r\n        toggleLabelColorToCard={toggleLabelColorToCard}\r\n        taskId={taskId}\r\n        generateCheckIcon={this.generateCheckIcon}\r\n        searchLabelColor={this.searchLabelColor}\r\n        searchInputLabel={searchInputLabel}\r\n        filteredColors={filteredColors}\r\n        nameLabelInput={this.nameLabelInput}\r\n        nameLabelInputValue={nameLabelInputValue}\r\n        choosedSquar={this.choosedSquar}\r\n        saveNameLabel={this.saveNameLabel}\r\n        currentSquarEdit={currentSquarEdit}\r\n        optionCover={optionCover}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Labels;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledCalendar = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  height: 250px;\r\n  color: white;\r\n`;\r\n\r\nconst StyledCalendarDays = styled.div`\r\n  width: 36px;\r\n  height: 36px;\r\n  margin: 0 3px;\r\n  text-align: center;\r\n  line-height: 36px;\r\n  font-size: 13px;\r\n  font-weight: 600;\r\n  background-color: #fff;\r\n  color: ${(props) => (props.darkerColor ? \"#42516e\" : \"#aaa\")};\r\n  border: 0.5px solid #fff;\r\n  border-radius: 50%;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.bgc ? \"#73829f !important\" : \"#fff\")};\r\n    color: ${(props) => (props.col ? \"#fff !important\" : \"#42516e\")};\r\n    cursor: ${(props) => (props.cur ? \"pointer !important\" : \"inherit\")};\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nfunction Calendar({\r\n  days,\r\n  emptyFields,\r\n  howManyDaysMonth,\r\n  todayDay,\r\n  setThisDayFunc,\r\n}) {\r\n  return (\r\n    <StyledCalendar className=\"calendar\">\r\n      {days.map((ele) => (\r\n        <StyledCalendarDays key={ele} className=\"calendar\">\r\n          {ele}\r\n        </StyledCalendarDays>\r\n      ))}\r\n      {emptyFields.map((ele) => (\r\n        <StyledCalendarDays ele={ele.id} className=\"calendar\" />\r\n      ))}\r\n      {howManyDaysMonth.map((ele) => (\r\n        <>\r\n          <StyledCalendarDays\r\n            key={ele.id}\r\n            bgc\r\n            col\r\n            cur\r\n            darkerColor\r\n            onClick={(e) => setThisDayFunc(e, ele.id)}\r\n            className=\"calendarDays calendar\"\r\n            style={{\r\n              backgroundColor: `${ele.id === todayDay ? \"#42516e\" : \"#fff\"}`,\r\n              color: `${ele.id === todayDay ? \"#fff\" : \"#42516e\"}`,\r\n            }}\r\n          >\r\n            {ele.day}\r\n          </StyledCalendarDays>\r\n        </>\r\n      ))}\r\n    </StyledCalendar>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Calendar from \"./Calendar\";\r\n\r\nconst StyledChangeListDetails = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  align-content: flex-start;\r\n  flex-wrap: wrap;\r\n  position: fixed;\r\n  width: 300px;\r\n  height: 580px;\r\n  top: ${(props) => (props.optionCoverPosition ? \"0px\" : \"null\")};\r\n  right: ${(props) => (props.optionCoverPosition ? \"-120px\" : \"null\")};\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst StyledDateTitle = styled.h3`\r\n  width: 100%;\r\n  position: relative;\r\n  flex-grow: 1;\r\n  text-align: center;\r\n  font-size: 1.5rem;\r\n  border-bottom: 1px solid #aaa;\r\n  padding-bottom: 6px;\r\n  color: #555;\r\n  font-weight: 400;\r\n  margin-bottom: 5px;\r\n  padding: 10px;\r\n\r\n  & > .fa-times {\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledText = styled.h2`\r\n  width: 100%;\r\n  text-align: center;\r\n  font-size: ${(props) => (props.biggerFontSize ? \"40px\" : \"25px\")};\r\n  margin-left: 5px;\r\n  margin-bottom: 5px;\r\n  padding: 5px;\r\n  color: white;\r\n`;\r\n\r\nconst StyledDateWrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  margin-top: 10px;\r\n  background-color: #5aac44;\r\n  padding: 5px 10px;\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin: 0 5px;\r\n  font-size: 45px;\r\n  align-self: center;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst StyledColumnDate = styled.div`\r\n  display: flex;\r\n  flex-grow: 1;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 40%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 7.5px 5px;\r\n  margin: 10px auto;\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: ${(props) => (props.redButton ? \"#CF513D\" : \"#5aac44\")};\r\n  border-radius: 4px;\r\n  margin: 10px auto;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n  align-self: center;\r\n\r\n  &:hover {\r\n    opacity: 0.85;\r\n  }\r\n`;\r\n\r\nfunction DatePickerView({\r\n  toggleDateVisibility,\r\n  todayDay,\r\n  todayYear,\r\n  todayMonthName,\r\n  time,\r\n  days,\r\n  toggleMonths,\r\n  emptyFields,\r\n  howManyDaysMonth,\r\n  todayFullDate,\r\n  choosedDateFunction,\r\n  choosedTimeFunction,\r\n  setThisDataFunctiion,\r\n  setThisDayFunc,\r\n  optionCover,\r\n}) {\r\n  return (\r\n    <StyledChangeListDetails\r\n      optionCoverPosition={optionCover}\r\n      className=\"calendar\"\r\n    >\r\n      <StyledDateTitle className=\"calendar\">\r\n        Change Date{\" \"}\r\n        <span className=\"fas fa-times\" onClick={() => toggleDateVisibility()} />\r\n      </StyledDateTitle>\r\n      <StyledDateWrap className=\"calendar\">\r\n        <StyledIcon\r\n          className=\"fas fa-caret-left calendar\"\r\n          onClick={() => toggleMonths(\"Minus\")}\r\n        />\r\n        <StyledColumnDate className=\"calendar\">\r\n          <StyledText className=\"calendar\">{todayMonthName}</StyledText>\r\n          <StyledText biggerFontSize className=\"calendar\">\r\n            {todayDay}\r\n          </StyledText>\r\n          <StyledText className=\"calendar\">{todayYear}</StyledText>\r\n        </StyledColumnDate>\r\n\r\n        <StyledIcon\r\n          className=\"fas fa-caret-right calendar\"\r\n          onClick={() => toggleMonths(\"Add\")}\r\n        />\r\n      </StyledDateWrap>\r\n      <Calendar\r\n        days={days}\r\n        todayDay={todayDay}\r\n        emptyFields={emptyFields}\r\n        howManyDaysMonth={howManyDaysMonth}\r\n        setThisDayFunc={setThisDayFunc}\r\n        className=\"calendar\"\r\n      />\r\n      <StyledInput\r\n        value={todayFullDate}\r\n        onChange={(e) => choosedDateFunction(e)}\r\n        className=\"calendar\"\r\n      />\r\n\r\n      <StyledInput\r\n        value={time}\r\n        onChange={(e) => choosedTimeFunction(e)}\r\n        className=\"calendar\"\r\n      />\r\n      <StyledButton\r\n        onClick={() => setThisDataFunctiion(\"save\")}\r\n        className=\"calendar\"\r\n      >\r\n        SAVE\r\n      </StyledButton>\r\n      <StyledButton\r\n        onClick={() => setThisDataFunctiion(\"delete\")}\r\n        redButton\r\n        className=\"calendar\"\r\n      >\r\n        DELETE\r\n      </StyledButton>\r\n    </StyledChangeListDetails>\r\n  );\r\n}\r\n\r\nexport default DatePickerView;\r\n","import React, { Component } from \"react\";\r\nimport DatePickerView from \"../../components/DatePicker/DatePickerView\";\r\n\r\nclass DatePicker extends Component {\r\n  state = {\r\n    time: \"\",\r\n    todayFullDate: \"\",\r\n    todayWeekDay: \"\",\r\n    todayDay: \"\",\r\n    todayMonthName: \"\",\r\n    todayMonth: \"\",\r\n    todayYear: \"\",\r\n    days: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\r\n    months: [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ],\r\n    updateFlag: false,\r\n    action: \"\",\r\n    preventMonthLenghtFlag: true,\r\n    displayingMonthLength: \"\",\r\n    blankPlace: \"\",\r\n    emptyFilter: [],\r\n    contentFilter: [],\r\n    backMonthLenght: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    //Calculate with module which day will be FirstDay on INITIAL month\r\n    const date = new Date();\r\n    const counterModulo = (date.getDate() % 7) - 1;\r\n    const firstOfMonth = this.state.days.slice(\r\n      date.getDay() - counterModulo - 1\r\n    );\r\n\r\n    //Set INITIAL date ( current date ) in input\r\n    const todayFull = `${\r\n      date.getDate() <= 9 ? \"0\" + date.getDate() : date.getDate()\r\n    }.${\r\n      date.getMonth() + 1 <= 9\r\n        ? \"0\" + (date.getMonth() + 1)\r\n        : date.getMonth() + 1\r\n    }.${date.getFullYear()}`;\r\n\r\n    //Set INITIAL time ( current time ) in input\r\n    const hours = `${\r\n      date.getHours() <= 9 ? \"0\" + date.getHours() : date.getHours()\r\n    }`;\r\n    const minutes = `${\r\n      date.getMinutes() <= 9 ? \"0\" + date.getMinutes() : date.getMinutes()\r\n    }`;\r\n\r\n    //Call generate\r\n    this.generateOtherMonth(\r\n      firstOfMonth,\r\n      this.state.months[date.getMonth()],\r\n      date.getFullYear()\r\n    );\r\n    //INITIAL data for date\r\n    this.setState({\r\n      time: `${hours}:${minutes}`,\r\n      todayDay: date.getDate(),\r\n      todayMonthName: this.state.months[date.getMonth()],\r\n      todayMonth: date.getMonth() + 1,\r\n      todayYear: date.getFullYear(),\r\n      todayWeekDay: date.getDay(),\r\n      firstOfMonth: firstOfMonth,\r\n      todayFullDate: todayFull,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const {\r\n      days,\r\n      todayDay,\r\n      todayMonth,\r\n      todayYear,\r\n      months,\r\n      updateFlag,\r\n      action,\r\n      displayingMonthLength,\r\n      backMonthLenght,\r\n      blankPlace,\r\n    } = this.state;\r\n\r\n    const todayWithZero = `${todayDay <= 9 ? \"0\" + todayDay : todayDay}`;\r\n    const monthWithZero = `${todayMonth <= 9 ? \"0\" + todayMonth : todayMonth}`;\r\n\r\n    //Update date ( month and year)\r\n    if (updateFlag && action === \"Add\") {\r\n      //Calculate which day will be FirstDay on next Month\r\n      const nextMonthFromDay = 7 - (42 - displayingMonthLength);\r\n      const nextMonthDay = days.slice(nextMonthFromDay);\r\n      const nextMonthDayArr = [];\r\n      nextMonthDayArr.push(nextMonthDay[0]);\r\n      if (todayMonth > 12) {\r\n        //Generate Call for Next Month and Year,send to state new date\r\n        this.generateOtherMonth(nextMonthDayArr, months[0], todayYear + 1);\r\n        this.setState({\r\n          todayDay: todayDay,\r\n          todayMonthName: months[0],\r\n          todayMonth: 1,\r\n          todayYear: todayYear + 1,\r\n          updateFlag: false,\r\n          preventMonthLenghtFlag: true,\r\n          firstOfMonth: nextMonthDayArr,\r\n          todayFullDate: `${todayWithZero}.${\"0\" + 1}.${todayYear + 1}`, //Input udating with every back/next click\r\n        });\r\n        return;\r\n      }\r\n      //Generate Call for Next Month, send to state new date\r\n      this.generateOtherMonth(\r\n        nextMonthDayArr,\r\n        months[todayMonth - 1],\r\n        todayYear\r\n      );\r\n      this.setState({\r\n        todayDay: todayDay,\r\n        todayMonthName: months[todayMonth - 1],\r\n        todayMonth: todayMonth,\r\n        todayYear: todayYear,\r\n        updateFlag: false,\r\n        preventMonthLenghtFlag: true,\r\n        firstOfMonth: nextMonthDayArr,\r\n        todayFullDate: `${todayWithZero}.${monthWithZero}.${todayYear}`,\r\n      });\r\n    } else if (updateFlag && action === \"Minus\") {\r\n      const blankInPrevMonthInEnd = 7 - blankPlace;\r\n      const firstDayOfPrevMonth =\r\n        35 - (backMonthLenght + blankInPrevMonthInEnd);\r\n      const nextMonthDayArr = days.slice(firstDayOfPrevMonth);\r\n      if (todayMonth < 1) {\r\n        //Generate Call for Back Month and Year, send to state new date\r\n        this.generateOtherMonth(nextMonthDayArr, months[11], todayYear - 1);\r\n        this.setState({\r\n          todayDay: todayDay,\r\n          todayMonthName: months[11],\r\n          todayMonth: 12,\r\n          todayYear: todayYear - 1,\r\n          updateFlag: false,\r\n          preventMonthLenghtFlag: true,\r\n          firstOfMonth: nextMonthDayArr,\r\n          todayFullDate: `${todayWithZero}.${12}.${todayYear - 1}`,\r\n        });\r\n        return;\r\n      }\r\n      //Generate Call for Back Month, send to state new date\r\n      this.generateOtherMonth(\r\n        nextMonthDayArr,\r\n        months[todayMonth - 1],\r\n        todayYear\r\n      );\r\n      this.setState({\r\n        todayDay: todayDay,\r\n        todayMonthName: months[todayMonth - 1],\r\n        todayMonth: todayMonth,\r\n        todayYear: todayYear,\r\n        updateFlag: false,\r\n        preventMonthLenghtFlag: true,\r\n        firstOfMonth: nextMonthDayArr,\r\n        todayFullDate: `${todayWithZero}.${monthWithZero}.${todayYear}`,\r\n      });\r\n    }\r\n  }\r\n\r\n  generateOtherMonth = (firstOfMonth, todayMonthName, todayYear) => {\r\n    const displayingMonthLength = [];\r\n    let stepBackMonthLength = \"\";\r\n    if (firstOfMonth) {\r\n      //Empty - how many EMPTY SQUAR we need AGAINST back or next calendaer/month\r\n      const empty = this.state.days.findIndex((ele) => ele === firstOfMonth[0]);\r\n      //Calculate backMonthLenght, when we BACK calendar, calucalte prevMonthLenght when we NEXT calendar\r\n      if (\r\n        todayMonthName === \"January\" ||\r\n        todayMonthName === \"March\" ||\r\n        todayMonthName === \"May\" ||\r\n        todayMonthName === \"July\" ||\r\n        todayMonthName === \"August\" ||\r\n        todayMonthName === \"October\" ||\r\n        todayMonthName === \"December\"\r\n      ) {\r\n        for (let i = 1; i < 32; i++) {\r\n          displayingMonthLength.push({ day: i, id: i });\r\n        }\r\n        if (todayMonthName === \"August\" || todayMonthName === \"January\") {\r\n          stepBackMonthLength = 31;\r\n        } else if (todayMonthName === \"March\" && todayYear % 4 === 0) {\r\n          stepBackMonthLength = 29;\r\n        } else if (todayMonthName === \"March\" && todayYear % 4 !== 0) {\r\n          stepBackMonthLength = 28;\r\n        } else {\r\n          stepBackMonthLength = 30;\r\n        }\r\n      } else if (todayMonthName === \"February\" && todayYear % 4 === 0) {\r\n        for (let i = 1; i < 30; i++) {\r\n          displayingMonthLength.push({ day: i, id: i });\r\n        }\r\n        stepBackMonthLength = 31;\r\n      } else if (todayMonthName === \"February\" && todayYear % 4 !== 0) {\r\n        for (let i = 1; i < 29; i++) {\r\n          displayingMonthLength.push({ day: i, id: i });\r\n        }\r\n        stepBackMonthLength = 31;\r\n      } else {\r\n        for (let i = 1; i < 31; i++) {\r\n          displayingMonthLength.push({ day: i, id: i });\r\n        }\r\n        stepBackMonthLength = 31;\r\n      }\r\n\r\n      for (let i = 0; empty > i; i++) {\r\n        displayingMonthLength.unshift({ day: \"\", id: `blank${i}` });\r\n      }\r\n\r\n      //Filtering seperately emptyFields before first day of Month, and\r\n      // proper days with number content inside\r\n      const emptyFilter = displayingMonthLength.filter(\r\n        (ele) => ele.day.length === 0\r\n      );\r\n      const mappingArrayWithContent = displayingMonthLength.filter(\r\n        (ele) => ele.day.length !== 0\r\n      );\r\n\r\n      //Send every made informations to STATE, so during componentUpdate we can use it (when back or next calendar)\r\n      this.setState({\r\n        displayingMonthLength: displayingMonthLength.length,\r\n        blankPlace: empty,\r\n        emptyFilter: emptyFilter,\r\n        contentFilter: mappingArrayWithContent,\r\n        backMonthLenght: stepBackMonthLength,\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleMonths = (whichWay) => {\r\n    //Back or Next month for toggle months and years\r\n    if (whichWay === \"Add\") {\r\n      this.setState({\r\n        todayMonth: this.state.todayMonth + 1,\r\n        updateFlag: true,\r\n        action: whichWay,\r\n      });\r\n    }\r\n\r\n    if (whichWay === \"Minus\") {\r\n      this.setState({\r\n        todayMonth: this.state.todayMonth - 1,\r\n        updateFlag: true,\r\n        action: whichWay,\r\n      });\r\n    }\r\n  };\r\n\r\n  choosedDateFunction = (e) => {\r\n    //Input onChange function for date\r\n    this.setState({\r\n      todayFullDate: e.target.value,\r\n    });\r\n  };\r\n\r\n  choosedTimeFunction = (e) => {\r\n    //Input onChange function for time\r\n    this.setState({\r\n      time: e.target.value,\r\n    });\r\n  };\r\n\r\n  setThisDayFunc = (e, thisDay) => {\r\n    //Set proper style for clicked Day and set proper date in input\r\n    const calendarDays = document.querySelectorAll(\".calendarDays\");\r\n    calendarDays.forEach((ele) => {\r\n      ele.style.backgroundColor = \"#fff\";\r\n      ele.style.color = \"#42516e\";\r\n      ele.style.fontSize = \"13px\";\r\n    });\r\n    e.target.style.backgroundColor = \"#42516e\";\r\n    e.target.style.color = \"#fff\";\r\n    e.target.style.fontSize = \"16px\";\r\n\r\n    const day = `${thisDay <= 9 ? \"0\" + thisDay : thisDay}`;\r\n    const month = `${\r\n      this.state.todayMonth <= 9\r\n        ? \"0\" + this.state.todayMonth\r\n        : this.state.todayMonth\r\n    }`;\r\n    const year = this.state.todayYear;\r\n\r\n    this.setState({\r\n      todayFullDate: `${day}.${month}.${year}`,\r\n      todayDay: thisDay,\r\n    });\r\n  };\r\n\r\n  setThisDataFunctiion = (buttonType) => {\r\n    //Send choosed date to main function and currentCard object, after validation by patter RegEx\r\n    const patternDate = /^(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\\d\\d$/;\r\n    const patternTime = /^([0-1][0-9]|[2][0-3]):([0-5][0-9])$/;\r\n    const {\r\n      todayFullDate,\r\n      todayDay: toD,\r\n      todayMonth: toM,\r\n      todayYear: toY,\r\n      todayMonthName,\r\n      time,\r\n    } = this.state;\r\n\r\n    if (\r\n      patternDate.test(this.state.todayFullDate) &&\r\n      patternTime.test(this.state.time)\r\n    ) {\r\n      const currDate = new Date();\r\n      const currD = currDate.getDate();\r\n      const currM = currDate.getMonth() + 1;\r\n      const currY = currDate.getFullYear();\r\n      const shorcutMonth = todayMonthName.slice(0, 3);\r\n\r\n      if (\r\n        (toD === currD + 3 && currM === toM && currY === toY) ||\r\n        (toD === currD + 2 && currM === toM && currY === toY)\r\n      ) {\r\n        return this.props.toggleTermToCard(\r\n          this.props.taskId,\r\n          todayFullDate,\r\n          toD,\r\n          toM,\r\n          toY,\r\n          shorcutMonth,\r\n          time,\r\n          \"Soon\",\r\n          buttonType\r\n        );\r\n      }\r\n      if (toD === currD + 1 && currM === toM && currY === toY) {\r\n        return this.props.toggleTermToCard(\r\n          this.props.taskId,\r\n          todayFullDate,\r\n          \"Tomorrow\",\r\n          toM,\r\n          toY,\r\n          shorcutMonth,\r\n          time,\r\n          \"Soon\",\r\n          buttonType\r\n        );\r\n      } else if (toD === currD && currM === toM && currY === toY) {\r\n        return this.props.toggleTermToCard(\r\n          this.props.taskId,\r\n          todayFullDate,\r\n          \"Today\",\r\n          toM,\r\n          toY,\r\n          shorcutMonth,\r\n          time,\r\n          \"Soon\",\r\n          buttonType\r\n        );\r\n      } else if (\r\n        (currD <= toD && currM <= toM && currY <= toY) ||\r\n        (currD > toD && currM < toM && currY <= toY) ||\r\n        currY < toY\r\n      ) {\r\n        return this.props.toggleTermToCard(\r\n          this.props.taskId,\r\n          todayFullDate,\r\n          toD,\r\n          toM,\r\n          toY,\r\n          shorcutMonth,\r\n          time,\r\n          \"\",\r\n          buttonType\r\n        );\r\n      } else {\r\n        return this.props.toggleTermToCard(\r\n          this.props.taskId,\r\n          todayFullDate,\r\n          toD,\r\n          toM,\r\n          toY,\r\n          shorcutMonth,\r\n          time,\r\n          \"Overdue\",\r\n          buttonType\r\n        );\r\n      }\r\n    } else {\r\n      alert(\"NOPE\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { toggleDateVisibility, optionCover } = this.props;\r\n    const {\r\n      time,\r\n      days,\r\n      todayDay,\r\n      todayYear,\r\n      todayMonthName,\r\n      todayFullDate,\r\n    } = this.state;\r\n\r\n    return (\r\n      <DatePickerView\r\n        toggleDateVisibility={toggleDateVisibility}\r\n        time={time}\r\n        days={days}\r\n        todayDay={todayDay}\r\n        todayYear={todayYear}\r\n        todayMonthName={todayMonthName}\r\n        toggleMonths={this.toggleMonths}\r\n        choosedDateFunction={this.choosedDateFunction}\r\n        choosedTimeFunction={this.choosedTimeFunction}\r\n        setThisDataFunctiion={this.setThisDataFunctiion}\r\n        emptyFields={this.state.emptyFilter}\r\n        howManyDaysMonth={this.state.contentFilter}\r\n        todayFullDate={todayFullDate}\r\n        setThisDayFunc={this.setThisDayFunc}\r\n        optionCover={optionCover}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default DatePicker;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport OptionCoverListView from \"./OptionCoverListView/OptionCoverListView\";\r\nimport MoveToAnotherListBox from \"../MoveToAnotherList/MoveToAnotherListBox\";\r\nimport Labels from \"../../Containers/Labels/Labels\";\r\nimport DatePicker from \"../../Containers/DatePicker/DatePicker\";\r\n\r\nconst StyledCover = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.65);\r\n  z-index: 0;\r\n`;\r\n\r\nconst StyledOptionBox = styled.div`\r\n  position: fixed;\r\n  transform: translate(0, -50%);\r\n  height: 400px;\r\n  width: 450px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  z-index: 999;\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 260px;\r\n  min-height: 70px;\r\n  padding: 0px 7.5px;\r\n  font-size: 14px;\r\n  color: #172b4d;\r\n  resize: none;\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 0px;\r\n  }\r\n`;\r\n\r\nconst StyledSaveButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: #5aac44;\r\n  border-radius: 4px;\r\n  margin-top: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: #6abc54;\r\n  }\r\n`;\r\n\r\nconst StyledWrapLabels = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 260px;\r\n  min-height: 10px;\r\n  padding: 5px 5px 0px 5px;\r\n  border-top-left-radius: 5px;\r\n  border-top-right-radius: 5px;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst StyledWrapTextAndLabels = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 260px;\r\n  align-self: flex-start;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: 13px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledDate = styled.span`\r\n  text-align: center;\r\n  padding: 5px 7.5px;\r\n  background-color: rgba(255, 255, 255, 0.85);\r\n  border-bottom-left-radius: 5px;\r\n  font-size: 14px;\r\n`;\r\n\r\nconst StyledWrapTerms = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 260px;\r\n  min-height: 30px;\r\n  border-bottom-left-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n  background-color: #fff;\r\n  color: #777;\r\n`;\r\n\r\nconst OptionCover = ({\r\n  optionCoverData,\r\n  taskTitleFeature,\r\n  taskTitle,\r\n  updateCard,\r\n  deleteCard,\r\n  handleLabelsVisibility,\r\n  labelsVisibility,\r\n  toggleLabelColorToCard,\r\n  listOfAllBadges,\r\n  matchedColorsToThisCard,\r\n  listOfAllTasksId,\r\n  labelColors,\r\n  setLabelColors,\r\n  addPriorityForCards,\r\n  toggleDetailMove,\r\n  changeListInDetails,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  matchedPriority,\r\n  copyVisibility,\r\n  dateVisibility,\r\n  toggleDateVisibility,\r\n  toggleTermToCard,\r\n  matchedTerms,\r\n}) => {\r\n  return (\r\n    <StyledCover className=\"coverOption\">\r\n      <StyledOptionBox className=\"cover_box\">\r\n        <StyledWrapTextAndLabels>\r\n          <StyledWrapLabels className=\"coverOption_wrapLabel\">\r\n            {matchedColorsToThisCard.map((ele) => (\r\n              <div\r\n                key={ele.color}\r\n                id={`${ele.labelId}OptionCover`}\r\n                className={`labelElement`}\r\n                style={{ backgroundColor: ele.color }}\r\n              >\r\n                {ele.name}\r\n              </div>\r\n            ))}\r\n          </StyledWrapLabels>\r\n          <StyledTextArea\r\n            className=\"textArea_Option\"\r\n            onChange={(e) => taskTitleFeature(e)}\r\n            onKeyPress={(e) =>\r\n              updateCard(\r\n                e,\r\n                taskTitle,\r\n                optionCoverData[0].listId,\r\n                optionCoverData[0].clickedCardId\r\n              )\r\n            }\r\n            value={taskTitle}\r\n          />\r\n          <StyledWrapTerms>\r\n            {matchedTerms.map((ele) => (\r\n              <StyledDate key={ele.id}>\r\n                <StyledIcon className=\"far fa-clock\" />\r\n                {`${ele.day} ${ele.monthName} ${ele.status}`}\r\n              </StyledDate>\r\n            ))}\r\n          </StyledWrapTerms>\r\n          <StyledSaveButton\r\n            className=\"cover_saveBtn\"\r\n            onClick={(e) =>\r\n              updateCard(\r\n                e,\r\n                taskTitle,\r\n                optionCoverData[0].listId,\r\n                optionCoverData[0].clickedCardId\r\n              )\r\n            }\r\n          >\r\n            Save\r\n          </StyledSaveButton>\r\n        </StyledWrapTextAndLabels>\r\n        <OptionCoverListView\r\n          deleteCard={deleteCard}\r\n          taskTitle={taskTitle}\r\n          listId={optionCoverData[0].listId}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          optionCoverData={optionCoverData}\r\n          addPriorityForCards={addPriorityForCards}\r\n          changeListInDetails={changeListInDetails}\r\n          matchedPriority={matchedPriority}\r\n          dateVisibility={dateVisibility}\r\n          toggleDateVisibility={toggleDateVisibility}\r\n        />\r\n\r\n        {labelsVisibility ? (\r\n          <Labels\r\n            handleLabelsVisibility={handleLabelsVisibility}\r\n            optionCoverData={optionCoverData}\r\n            toggleLabelColorToCard={toggleLabelColorToCard}\r\n            taskId={optionCoverData[0].clickedCardId}\r\n            listOfAllBadges={listOfAllBadges}\r\n            listOfAllTasksId={listOfAllTasksId}\r\n            labelColors={labelColors}\r\n            setLabelColors={setLabelColors}\r\n            optionCover={true}\r\n          />\r\n        ) : null}\r\n        {toggleDetailMove ? (\r\n          <MoveToAnotherListBox\r\n            taskTitle={taskTitle}\r\n            wholeList={wholeList}\r\n            moveCardToAnotherList={moveCardToAnotherList}\r\n            taskId={optionCoverData[0].clickedCardId}\r\n            changeListInDetails={changeListInDetails}\r\n            taskTitleList={optionCoverData[0].currentListName}\r\n            byElement={\"byOptionMove\"}\r\n            optionCover={true}\r\n            copyVisibility={copyVisibility}\r\n            matchedColorsToThisCard={matchedColorsToThisCard}\r\n          />\r\n        ) : null}\r\n        {dateVisibility ? (\r\n          <DatePicker\r\n            toggleDateVisibility={toggleDateVisibility}\r\n            taskId={optionCoverData[0].clickedCardId}\r\n            toggleTermToCard={toggleTermToCard}\r\n            optionCover={true}\r\n          />\r\n        ) : null}\r\n      </StyledOptionBox>\r\n    </StyledCover>\r\n  );\r\n};\r\n\r\nexport default OptionCover;\r\n","import React, { Component } from \"react\";\r\nimport OptionCoverView from \"../../components/OptionCover/OptionCoverView\";\r\n\r\nclass OptionCover extends Component {\r\n  state = {\r\n    taskTitle: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setOptionCoverPostion(this.props.optionCoverData);\r\n    this.setState({\r\n      taskTitle: this.props.optionCoverData[0].taskTitle.taskName,\r\n    });\r\n  }\r\n\r\n  setOptionCoverPostion = (taskData) => {\r\n    const mainOffsetTop = document.querySelector(\".main\").offsetTop;\r\n    const coverBox = document.querySelector(\".cover_box\");\r\n    const coverBoxHeight = coverBox.offsetHeight;\r\n    const scrollPosition = Math.floor(\r\n      document.querySelector(\".main\").scrollLeft\r\n    );\r\n\r\n    const currentList = document.getElementById(`list${taskData[0].listId}`);\r\n    const currentListScrollNow = currentList.scrollTop;\r\n\r\n    //ListIndex, when list is moving to another place\r\n    const listIndex = taskData[0].wholeList.findIndex(\r\n      (element) => element.id === taskData[0].listId\r\n    );\r\n\r\n    const positionY =\r\n      mainOffsetTop +\r\n      taskData[0].top -\r\n      currentListScrollNow +\r\n      coverBoxHeight / 1.65;\r\n    const positionX = 285 * listIndex + 18.5 - scrollPosition;\r\n\r\n    //Top and Left BOX Position Calculate\r\n    coverBox.style.top = `${positionY}px`;\r\n    coverBox.style.left = `${positionX}px`;\r\n  };\r\n\r\n  taskTitleFeature = (e) => {\r\n    this.setState({ taskTitle: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      optionCoverData,\r\n      updateCard,\r\n      deleteCard,\r\n      handleLabelsVisibility,\r\n      labelsVisibility,\r\n      toggleLabelColorToCard,\r\n      listOfAllBadges,\r\n      listOfAllTasksId,\r\n      labelColors,\r\n      setLabelColors,\r\n      addPriorityForCards,\r\n      toggleDetailMove,\r\n      changeListInDetails,\r\n      wholeList,\r\n      moveCardToAnotherList,\r\n      listOfAllPriorityTasks,\r\n      copyVisibility,\r\n      dateVisibility,\r\n      toggleDateVisibility,\r\n      toggleTermToCard,\r\n      listOfAllTerms,\r\n    } = this.props;\r\n\r\n    const { taskTitle } = this.state;\r\n\r\n    const copyOfallBadges = [...listOfAllBadges];\r\n\r\n    const matchedColorsToThisCard = copyOfallBadges.filter(\r\n      (ele) => ele.id === optionCoverData[0].clickedCardId\r\n    );\r\n\r\n    const copyOfAllPriority = [...listOfAllPriorityTasks];\r\n    const matchedPriority = copyOfAllPriority.filter(\r\n      (ele) => ele === optionCoverData[0].clickedCardId\r\n    );\r\n\r\n    const copyOfAllTerms = [...listOfAllTerms];\r\n    const matchedTerms = copyOfAllTerms.filter(\r\n      (ele) => ele.id === optionCoverData[0].clickedCardId\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <OptionCoverView\r\n          optionCoverData={optionCoverData}\r\n          taskTitleFeature={this.taskTitleFeature}\r\n          taskTitle={taskTitle}\r\n          updateCard={updateCard}\r\n          deleteCard={deleteCard}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          labelsVisibility={labelsVisibility}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          addPriorityForCards={addPriorityForCards}\r\n          toggleDetailMove={toggleDetailMove}\r\n          changeListInDetails={changeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          matchedPriority={matchedPriority}\r\n          copyVisibility={copyVisibility}\r\n          dateVisibility={dateVisibility}\r\n          toggleDateVisibility={toggleDateVisibility}\r\n          toggleTermToCard={toggleTermToCard}\r\n          matchedTerms={matchedTerms}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OptionCover;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTaskName = styled.input`\r\n  width: calc(100% - 50px);\r\n  background-color: #f4f5f7;\r\n  border-radius: 1px;\r\n  padding: 5px 4px;\r\n  font-size: 1.8rem;\r\n  font-weight: 600;\r\n  color: #172b4d;\r\n\r\n  &:focus {\r\n    background-color: white;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nfunction Detail_Input({\r\n  taskTitle,\r\n  taskTitleFeature,\r\n  updateCard,\r\n  idUpdatedList,\r\n  taskId,\r\n}) {\r\n  return (\r\n    <>\r\n      <StyledTaskName\r\n        className=\"input\"\r\n        value={taskTitle}\r\n        onChange={(e) => taskTitleFeature(e)}\r\n      />\r\n      <span\r\n        className=\"fas fa-times close\"\r\n        onClick={(e) => updateCard(e, taskTitle, idUpdatedList, taskId)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Detail_Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MoveToAnotherListBox from \"../../../MoveToAnotherList/MoveToAnotherListBox\";\r\n\r\nconst StyledLightText = styled.h3`\r\n  margin-top: 7.5px;\r\n  font-weight: 400;\r\n  font-size: 1.4rem;\r\n  color: #172b4d;\r\n`;\r\n\r\nconst StyledStrongText = styled.strong`\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction DetailSuggestedElement({\r\n  changeListInDetails,\r\n  taskTitleList,\r\n  taskTitle,\r\n  visibilityChangeListInDetails,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  taskId,\r\n}) {\r\n  return (\r\n    <StyledLightText className=\"suggested\">\r\n      On the list{\" \"}\r\n      <StyledStrongText\r\n        onClick={() => changeListInDetails(\"byListName\")}\r\n        className=\"suggested\"\r\n      >\r\n        {taskTitleList.length !== 0 ? taskTitleList : \"No Name List\"}\r\n      </StyledStrongText>\r\n      {visibilityChangeListInDetails ? (\r\n        <MoveToAnotherListBox\r\n          taskTitle={taskTitle}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          taskId={taskId}\r\n          changeListInDetails={changeListInDetails}\r\n          taskTitleList={taskTitleList}\r\n          byElement=\"byListName\"\r\n        />\r\n      ) : null}\r\n    </StyledLightText>\r\n  );\r\n}\r\n\r\nexport default DetailSuggestedElement;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Labels from \"../../../../Containers/Labels/Labels\";\r\nimport MoveToAnotherListBox from \"../../../MoveToAnotherList/MoveToAnotherListBox\";\r\nimport DatePicker from \"../../../../Containers/DatePicker/DatePicker\";\r\nimport { device } from \"../../../../Style/MediaQuery/mq\";\r\n\r\nconst StyledDetailNav = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 300px;\r\n  @media ${device.laptop} {\r\n    width: 200px;\r\n  }\r\n`;\r\n\r\nconst StyledDetailUl = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  @media ${device.laptop} {\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: 13px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledDetailList = styled.li`\r\n  width: ${(props) => (props.first ? \"100%\" : \"45%\")};\r\n  background-color: ${(props) => (props.first ? \"transparent\" : \"#eaecf0\")};\r\n  border-radius: ${(props) => (props.first ? \"null\" : \"3px\")};\r\n  padding: 7.5px;\r\n  margin-right: ${(props) => (props.first ? \"0px\" : \"10px\")};\r\n  margin-bottom: ${(props) => (props.first ? \"5px\" : \"10px\")};\r\n  list-style: none;\r\n  font-size: 14px;\r\n  color: #42516e;\r\n  cursor: ${(props) => (props.first ? \"initial\" : \"pointer\")};\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.first ? \"transparent\" : \"#dadce0\")};\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nfunction DetailCoverNav({\r\n  handleLabelsVisibility,\r\n  labelsVisibility,\r\n  deleteCard,\r\n  idUpdatedList,\r\n  taskId,\r\n  addPriorityForCards,\r\n  changeListInDetails,\r\n  toggleDetailMove,\r\n  taskTitle,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  taskTitleList,\r\n  matchedPriority,\r\n  copyVisibility,\r\n  matchedColorsToThisCard,\r\n  toggleDateVisibility,\r\n  dateVisibility,\r\n  toggleLabelColorToCard,\r\n  listOfAllBadges,\r\n  listOfAllTasksId,\r\n  labelColors,\r\n  setLabelColors,\r\n  toggleTermToCard,\r\n}) {\r\n  return (\r\n    <StyledDetailNav>\r\n      <StyledDetailUl>\r\n        <StyledDetailList first> ADD TO CARD</StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={() => handleLabelsVisibility(!labelsVisibility)}\r\n          className=\"label\"\r\n        >\r\n          <StyledIcon className=\"fas fa-tag label\" />\r\n          Edit labels\r\n        </StyledDetailList>\r\n        <StyledDetailList>\r\n          <StyledIcon className=\"fas fa-list-alt\" />\r\n          Tasks list\r\n        </StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={() => toggleDateVisibility()}\r\n          className=\"calendar\"\r\n        >\r\n          <StyledIcon className=\"far fa-clock calendar\" />\r\n          Term\r\n        </StyledDetailList>\r\n        <StyledDetailList>\r\n          <StyledIcon className=\"far fa-image\" />\r\n          Cover\r\n        </StyledDetailList>\r\n      </StyledDetailUl>\r\n      <StyledDetailUl>\r\n        <StyledDetailList first> ACTIONS</StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={() => changeListInDetails(\"byNavMove\")}\r\n          className=\"suggested\"\r\n        >\r\n          <StyledIcon className=\"fas fa-long-arrow-alt-right suggested\" />\r\n          Move\r\n        </StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={() => changeListInDetails(\"byNavCopy\")}\r\n          className=\"suggested\"\r\n        >\r\n          <StyledIcon className=\"far fa-clipboard suggested\" />\r\n          Copy\r\n        </StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={(e) => addPriorityForCards(e, taskId, \"detailCover\")}\r\n          style={{\r\n            color: `${matchedPriority.length !== 0 ? \"#db4a36\" : \"#42516e\"}`,\r\n          }}\r\n        >\r\n          <StyledIcon\r\n            className=\"fas fa-exclamation-circle\"\r\n            style={{\r\n              color: `${matchedPriority.length !== 0 ? \"#db4a36\" : \"#42516e\"}`,\r\n            }}\r\n          />\r\n          Priority\r\n        </StyledDetailList>\r\n        <StyledDetailList\r\n          className=\"delete\"\r\n          onClick={(e) => deleteCard(idUpdatedList, taskId, \"byButton\")}\r\n        >\r\n          <StyledIcon className=\"fas fa-archive\" />\r\n          Archive\r\n        </StyledDetailList>\r\n      </StyledDetailUl>\r\n      {labelsVisibility ? (\r\n        <Labels\r\n          detailCover={true}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          taskId={taskId}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n        />\r\n      ) : null}\r\n      {toggleDetailMove ? (\r\n        <MoveToAnotherListBox\r\n          taskTitle={taskTitle}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          taskId={taskId}\r\n          changeListInDetails={changeListInDetails}\r\n          taskTitleList={taskTitleList}\r\n          byElement=\"byNavMove\"\r\n          copyVisibility={copyVisibility}\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n        />\r\n      ) : null}\r\n      {dateVisibility ? (\r\n        <DatePicker\r\n          toggleDateVisibility={toggleDateVisibility}\r\n          toggleTermToCard={toggleTermToCard}\r\n          taskId={taskId}\r\n        />\r\n      ) : null}\r\n    </StyledDetailNav>\r\n  );\r\n}\r\n\r\nexport default DetailCoverNav;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledDetailMarks = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst StyledDetailDescription = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n`;\r\n\r\nconst StyledTitle = styled.h2`\r\n  width: 100%;\r\n  color: #42516e;\r\n  margin-bottom: 20px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 90%;\r\n  background-color: #eaecf0;\r\n  margin: 0px auto 10px auto;\r\n  padding: 7.5px 5px;\r\n  border-radius: 3px;\r\n  min-height: 75px;\r\n  resize: none;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  margin-left: ${(props) => (props.marginLeft ? \"6\" : \"none\")};\r\n  font-size: ${(props) => (props.biggerSize ? \"23px\" : \"17px\")};\r\n  color: #42516e;\r\n  cursor: ${(props) => (props.pointer ? \"pointer\" : \"initial\")};\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst StyledLabelsWrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledPlaceholder = styled.h3`\r\n  text-align: center;\r\n  color: #172b4d;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: ${(props) => (props.greyBgc ? \"#EAECF0\" : \"#5aac44\")};\r\n  border-radius: 4px;\r\n  margin-right: 6px;\r\n  color: ${(props) => (props.marginLeft ? \"#42516e\" : \"#fff\")};\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.hoverBgc ? \"#dadce0 \" : \"#6abc54\")};\r\n  }\r\n`;\r\n\r\nconst StyledCommentOptionWrap = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 90%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst StyledComment = styled.h3`\r\n  width: 300px;\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n  margin-right: 10px;\r\n  word-break: break-all;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledTermWrap = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst StyledTerm = styled.h3`\r\n  background-color: #eaecf0;\r\n  border-radius: 4px;\r\n  padding: 7.5px 10px;\r\n  letter-spacing: 1px;\r\n  font-weight: 400;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #dadce0;\r\n  }\r\n`;\r\n\r\nfunction DetailCoverMarks({\r\n  matchedColorsToThisCard,\r\n  handleLabelsVisibility,\r\n  labelsVisibility,\r\n  toggleCommentFeature,\r\n  toggleCommentVisibility,\r\n  commentChange,\r\n  commentValue,\r\n  addCommentToCard,\r\n  taskId,\r\n  listOfAllComments,\r\n  editCommentToCard,\r\n  matchedTerms,\r\n  toggleDateVisibility,\r\n}) {\r\n  return (\r\n    <StyledDetailMarks>\r\n      <div>\r\n        <StyledTitle marginTop>\r\n          <StyledIcon className=\"fas fa-tag\" />\r\n          Labels\r\n        </StyledTitle>\r\n        {matchedColorsToThisCard.length === 0 ? (\r\n          <StyledPlaceholder>This card have no labels yet</StyledPlaceholder>\r\n        ) : (\r\n          <StyledLabelsWrap className=\"detailCover_labelsWrap\">\r\n            {matchedColorsToThisCard.map((ele) => (\r\n              <div\r\n                key={ele.color}\r\n                id={`${ele.labelId}DetailCover`}\r\n                className={`labelElement_DetailCover`}\r\n                style={{\r\n                  backgroundColor: ele.color,\r\n                  margin: \"0px 5px 5px 0px\",\r\n                }}\r\n                onClick={() => handleLabelsVisibility(!labelsVisibility)}\r\n              >\r\n                {ele.name}\r\n              </div>\r\n            ))}\r\n          </StyledLabelsWrap>\r\n        )}\r\n      </div>\r\n      <StyledTitle marginTop>\r\n        <StyledIcon className=\"far fa-clock\" />\r\n        Terms\r\n      </StyledTitle>\r\n      {matchedTerms.length === 0 ? (\r\n        <StyledPlaceholder>This card has no deadline yet</StyledPlaceholder>\r\n      ) : (\r\n        <>\r\n          {matchedTerms.map((ele) => (\r\n            <StyledTermWrap key={ele.term} className=\"calendar\">\r\n              <StyledTerm\r\n                onClick={() => toggleDateVisibility()}\r\n                className=\"calendar\"\r\n              >\r\n                {`${ele.day} ${ele.monthName} ${ele.year}`} at{\" \"}\r\n                {`${ele.time} ${ele.status} `}\r\n                <StyledIcon\r\n                  className=\"fas fa-chevron-down calendar\"\r\n                  pointer\r\n                  marginLeft\r\n                />\r\n              </StyledTerm>\r\n            </StyledTermWrap>\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n      <StyledDetailDescription>\r\n        <StyledTitle>\r\n          <StyledIcon className=\"fas fa-stream\" />\r\n          Description\r\n          <StyledButton\r\n            greyBgc\r\n            marginLeft\r\n            hoverBgc\r\n            style={{\r\n              color: `${\r\n                listOfAllComments.length !== 0 ? \"#42516e\" : \"rgba(0,0,0,0)\"\r\n              }`,\r\n              backgroundColor: `${\r\n                listOfAllComments.length !== 0 ? \"#EAECF0\" : \"rgba(0,0,0,0)\"\r\n              }`,\r\n              cursor: `${\r\n                listOfAllComments.length !== 0 ? \"pointer\" : \"initial\"\r\n              }`,\r\n              marginLeft: `${listOfAllComments.length !== 0 ? \"6px\" : \"50px\"}`,\r\n            }}\r\n            onClick={(e) => editCommentToCard(toggleCommentVisibility)}\r\n          >\r\n            Edit\r\n          </StyledButton>\r\n        </StyledTitle>\r\n        {listOfAllComments.length !== 0 ? null : (\r\n          <StyledTextArea\r\n            placeholder=\"Click to add more detailed comment...\"\r\n            className=\"input textArea\"\r\n            onClick={() => toggleCommentFeature(true)}\r\n            onChange={(e) => commentChange(e)}\r\n            onKeyPress={(e) => addCommentToCard(e, taskId, commentValue)}\r\n            value={commentValue}\r\n          />\r\n        )}\r\n        {toggleCommentVisibility ? (\r\n          <StyledCommentOptionWrap>\r\n            <StyledButton\r\n              className=\"commentBtn\"\r\n              onClick={(e) => addCommentToCard(e, taskId, commentValue)}\r\n            >\r\n              SAVE\r\n            </StyledButton>\r\n            <StyledIcon biggerSize pointer className=\"far fa-times-circle\" />\r\n          </StyledCommentOptionWrap>\r\n        ) : null}\r\n        {listOfAllComments.map((ele) => (\r\n          <StyledComment\r\n            key={ele.id}\r\n            onClick={(e) => editCommentToCard(toggleCommentVisibility)}\r\n          >\r\n            {ele.comment}\r\n          </StyledComment>\r\n        ))}\r\n      </StyledDetailDescription>\r\n    </StyledDetailMarks>\r\n  );\r\n}\r\n\r\nexport default DetailCoverMarks;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../Style/MediaQuery/mq\";\r\nimport DetailCoverNav from \"./DetailCoverNav/DetailCoverNav\";\r\nimport DetailCoverMarks from \"./DetailCoverMarks/DetailCoverMarks\";\r\n\r\nconst StyledDetailToolsWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 600px;\r\n  margin-top: 10px;\r\n  @media ${device.laptop} {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nfunction DetailTools({\r\n  labelsVisibility,\r\n  handleLabelsVisibility,\r\n  deleteCard,\r\n  idUpdatedList,\r\n  taskId,\r\n  matchedColorsToThisCard,\r\n  addPriorityForCards,\r\n  toggleCommentFeature,\r\n  toggleCommentVisibility,\r\n  commentChange,\r\n  commentValue,\r\n  addCommentToCard,\r\n  listOfAllComments,\r\n  editCommentToCard,\r\n  changeListInDetails,\r\n  toggleDetailMove,\r\n  taskTitle,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  taskTitleList,\r\n  matchedPriority,\r\n  copyVisibility,\r\n  toggleDateVisibility,\r\n  dateVisibility,\r\n  toggleLabelColorToCard,\r\n  listOfAllBadges,\r\n  listOfAllTasksId,\r\n  labelColors,\r\n  setLabelColors,\r\n  matchedTerms,\r\n  toggleTermToCard,\r\n}) {\r\n  return (\r\n    <StyledDetailToolsWrap>\r\n      <DetailCoverMarks\r\n        matchedColorsToThisCard={matchedColorsToThisCard}\r\n        handleLabelsVisibility={handleLabelsVisibility}\r\n        labelsVisibility={labelsVisibility}\r\n        toggleCommentFeature={toggleCommentFeature}\r\n        toggleCommentVisibility={toggleCommentVisibility}\r\n        commentChange={commentChange}\r\n        commentValue={commentValue}\r\n        addCommentToCard={addCommentToCard}\r\n        taskId={taskId}\r\n        listOfAllComments={listOfAllComments}\r\n        editCommentToCard={editCommentToCard}\r\n        matchedTerms={matchedTerms}\r\n        toggleDateVisibility={toggleDateVisibility}\r\n      />\r\n      <DetailCoverNav\r\n        handleLabelsVisibility={handleLabelsVisibility}\r\n        labelsVisibility={labelsVisibility}\r\n        deleteCard={deleteCard}\r\n        idUpdatedList={idUpdatedList}\r\n        taskId={taskId}\r\n        addPriorityForCards={addPriorityForCards}\r\n        changeListInDetails={changeListInDetails}\r\n        toggleDetailMove={toggleDetailMove}\r\n        taskTitle={taskTitle}\r\n        wholeList={wholeList}\r\n        moveCardToAnotherList={moveCardToAnotherList}\r\n        taskTitleList={taskTitleList}\r\n        matchedPriority={matchedPriority}\r\n        copyVisibility={copyVisibility}\r\n        matchedColorsToThisCard={matchedColorsToThisCard}\r\n        toggleDateVisibility={toggleDateVisibility}\r\n        dateVisibility={dateVisibility}\r\n        toggleLabelColorToCard={toggleLabelColorToCard}\r\n        listOfAllBadges={listOfAllBadges}\r\n        listOfAllTasksId={listOfAllTasksId}\r\n        labelColors={labelColors}\r\n        setLabelColors={setLabelColors}\r\n        toggleTermToCard={toggleTermToCard}\r\n      />\r\n    </StyledDetailToolsWrap>\r\n  );\r\n}\r\n\r\nexport default DetailTools;\r\n","import React from \"react\";\r\nimport DetailInputElement from \"../DetailElements/DetailInputElement\";\r\nimport DetailSuggestedElement from \"../DetailElements/DetalSuggestedElement/DetailSuggestedElement\";\r\nimport DetailTools from \"../DetailTools/DetailTools\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledCover = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nconst StyledDetail = styled.div`\r\n  position: fixed;\r\n  top: 41px;\r\n  left: 50%;\r\n  bottom: 17.5px;\r\n  transform: translate(-50%, 0%);\r\n  width: 100%;\r\n  max-width: 775px;\r\n  padding: 15px;\r\n  border-radius: 3px;\r\n  background-color: #f4f5f7;\r\n`;\r\n\r\nfunction DetailCoverView({\r\n  updateCard,\r\n  deleteCard,\r\n  idUpdatedList,\r\n  taskTitle,\r\n  taskTitleFeature,\r\n  changeListInDetails,\r\n  taskTitleList,\r\n  visibilityChangeListInDetails,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  labelsVisibility,\r\n  handleLabelsVisibility,\r\n  taskId,\r\n  toggleLabelColorToCard,\r\n  listOfAllBadges,\r\n  matchedColorsToThisCard,\r\n  labelColors,\r\n  setLabelColors,\r\n  listOfAllTasksId,\r\n  addPriorityForCards,\r\n  toggleCommentFeature,\r\n  toggleCommentVisibility,\r\n  commentChange,\r\n  commentValue,\r\n  addCommentToCard,\r\n  listOfAllComments,\r\n  editCommentToCard,\r\n  toggleDetailMove,\r\n  matchedPriority,\r\n  copyVisibility,\r\n  toggleDateVisibility,\r\n  dateVisibility,\r\n  matchedTerms,\r\n  toggleTermToCard,\r\n}) {\r\n  return (\r\n    <StyledCover\r\n      className=\"cover\"\r\n      onClick={(e) => updateCard(e, taskTitle, idUpdatedList, taskId)}\r\n    >\r\n      <StyledDetail\r\n        className=\"detail\"\r\n        onClick={(e) => updateCard(e, taskTitle, idUpdatedList, taskId)}\r\n      >\r\n        <span className=\"fas fa-credit-card\"></span>\r\n        <DetailInputElement\r\n          taskTitle={taskTitle}\r\n          taskTitleFeature={taskTitleFeature}\r\n          updateCard={updateCard}\r\n          idUpdatedList={idUpdatedList}\r\n          taskId={taskId}\r\n        />\r\n        <DetailSuggestedElement\r\n          changeListInDetails={changeListInDetails}\r\n          taskTitleList={taskTitleList}\r\n          taskTitle={taskTitle}\r\n          visibilityChangeListInDetails={visibilityChangeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          taskId={taskId}\r\n        />\r\n        <DetailTools\r\n          labelsVisibility={labelsVisibility}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          deleteCard={deleteCard}\r\n          idUpdatedList={idUpdatedList}\r\n          taskId={taskId}\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n          addPriorityForCards={addPriorityForCards}\r\n          toggleCommentFeature={toggleCommentFeature}\r\n          toggleCommentVisibility={toggleCommentVisibility}\r\n          commentChange={commentChange}\r\n          commentValue={commentValue}\r\n          addCommentToCard={addCommentToCard}\r\n          listOfAllComments={listOfAllComments}\r\n          editCommentToCard={editCommentToCard}\r\n          changeListInDetails={changeListInDetails}\r\n          toggleDetailMove={toggleDetailMove}\r\n          taskTitle={taskTitle}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          taskTitleList={taskTitleList}\r\n          matchedPriority={matchedPriority}\r\n          copyVisibility={copyVisibility}\r\n          toggleDateVisibility={toggleDateVisibility}\r\n          dateVisibility={dateVisibility}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          matchedTerms={matchedTerms}\r\n          toggleTermToCard={toggleTermToCard}\r\n        />\r\n      </StyledDetail>\r\n    </StyledCover>\r\n  );\r\n}\r\n\r\nexport default DetailCoverView;\r\n","import React from \"react\";\r\nimport DetailCoverView from \"../../components/DetailCover/DetailCoverView/DetailCoverView\";\r\n\r\nclass DetailCover extends React.Component {\r\n  state = {\r\n    taskTitle: \"\",\r\n    commentValue: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      taskTitle: this.props.taskName,\r\n    });\r\n  }\r\n\r\n  taskTitleFeature = (e) => {\r\n    this.setState({\r\n      taskTitle: e.target.value,\r\n    });\r\n  };\r\n\r\n  commentChange = (e) => {\r\n    this.setState({ commentValue: e.target.value }); //Set input comment\r\n  };\r\n\r\n  addCommentToCard = (e, taskId, comment) => {\r\n    //Add comment by click and by Enter button, add comment to commentList and TextArea is disparing, Comment is generate\r\n    // by list of matched comment in DetailCoverMarks Component\r\n    if (e.target.className.includes(\"commentBtn\") || e.which === 13) {\r\n      this.props.setListOfAllComments([\r\n        ...this.props.listOfAllComments,\r\n        {\r\n          id: taskId,\r\n          comment: comment,\r\n        },\r\n      ]);\r\n      this.props.toggleCommentFeature(false);\r\n    }\r\n  };\r\n\r\n  editCommentToCard = (e, taskId) => {\r\n    //Function that run when we want edit our comment - EditBtn is disapiring, textArea is appearing\r\n    this.props.toggleCommentFeature(true);\r\n    const commentIndexToDelete = this.props.listOfAllComments.findIndex(\r\n      (ele) => ele.id === taskId\r\n    );\r\n    this.props.listOfAllComments.splice(commentIndexToDelete, 1);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      taskId,\r\n      taskTitleList,\r\n      updateCard,\r\n      deleteCard,\r\n      idUpdatedList,\r\n      changeListInDetails,\r\n      visibilityChangeListInDetails,\r\n      wholeList,\r\n      moveCardToAnotherList,\r\n      labelsVisibility,\r\n      handleLabelsVisibility,\r\n      toggleLabelColorToCard,\r\n      listOfAllBadges,\r\n      labelColors,\r\n      setLabelColors,\r\n      listOfAllTasksId,\r\n      addPriorityForCards,\r\n      toggleCommentVisibility,\r\n      toggleCommentFeature,\r\n      listOfAllComments,\r\n      toggleDetailMove,\r\n      listOfAllPriorityTasks,\r\n      copyVisibility,\r\n      toggleDateVisibility,\r\n      dateVisibility,\r\n      listOfAllTerms,\r\n      toggleTermToCard,\r\n    } = this.props;\r\n\r\n    const copyOfallBadges = [...listOfAllBadges];\r\n    const matchedColorsToThisCard = copyOfallBadges.filter(\r\n      (ele) => ele.id === taskId\r\n    );\r\n\r\n    const copyOfAllComment = [...listOfAllComments];\r\n    const matchedComments = copyOfAllComment.filter((ele) => ele.id === taskId);\r\n\r\n    const copyOfAllPriority = [...listOfAllPriorityTasks];\r\n    const matchedPriority = copyOfAllPriority.filter((ele) => ele === taskId);\r\n\r\n    const copyOfAllTerms = [...listOfAllTerms];\r\n    const matchedTerms = copyOfAllTerms.filter((ele) => ele.id === taskId);\r\n\r\n    const { taskTitle, commentValue } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <DetailCoverView\r\n          updateCard={updateCard}\r\n          taskTitle={taskTitle}\r\n          taskTitleFeature={this.taskTitleFeature}\r\n          changeListInDetails={changeListInDetails}\r\n          taskTitleList={taskTitleList}\r\n          visibilityChangeListInDetails={visibilityChangeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          labelsVisibility={labelsVisibility}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          deleteCard={deleteCard}\r\n          idUpdatedList={idUpdatedList}\r\n          taskId={taskId}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          addPriorityForCards={addPriorityForCards}\r\n          toggleCommentFeature={toggleCommentFeature}\r\n          toggleCommentVisibility={toggleCommentVisibility}\r\n          commentChange={this.commentChange}\r\n          commentValue={commentValue}\r\n          addCommentToCard={this.addCommentToCard}\r\n          listOfAllComments={matchedComments}\r\n          editCommentToCard={this.editCommentToCard}\r\n          toggleDetailMove={toggleDetailMove}\r\n          matchedPriority={matchedPriority}\r\n          copyVisibility={copyVisibility}\r\n          toggleDateVisibility={toggleDateVisibility}\r\n          dateVisibility={dateVisibility}\r\n          matchedTerms={matchedTerms}\r\n          toggleTermToCard={toggleTermToCard}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DetailCover;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Navigations from \"../Naviagtion/Navigations\";\r\nimport CoreField from \"../CoreField/CoreField\";\r\nimport ThemeField from \"../ThemeField/ThemeField\";\r\nimport OptionCover from \"../OptionCover/OptionCover\";\r\nimport DetailCover from \"../DetailCover/DetailCover\";\r\nimport Color from \"color\";\r\n\r\nconst Main = () => {\r\n  const [showThemeOption, showThemeOptionFunction] = useState(false);\r\n  const [numberOfTask, numberOfTaskFunction] = useState(0);\r\n  const [whichColor, setWhichColor] = useState([\"#76ce8e\"]);\r\n  const [visibilityOptionsCover, setVisibilityOptionCover] = useState(false);\r\n  const [optionCoverData, setOptionCoverData] = useState(\"\");\r\n  const [visibilityTaskDetails, setVisibilityTaskDetails] = useState(false);\r\n  const [taskTitleList, setTaskTitleList] = useState();\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const [taskId, setTaskId] = useState(\"\");\r\n  const [idUpdatedList, setIdUpdatedList] = useState();\r\n  const [visibilityChangeListInDetails, setChangeListInDetails] = useState(\r\n    false\r\n  );\r\n  const [toggleDetailMove, setToggleDetailMove] = useState(false);\r\n  const [labelsVisibility, setLabelsVisibility] = useState(false);\r\n  const [\r\n    labelsVisibilityDetailsComp,\r\n    setLabelsVisibilityDetailsComp,\r\n  ] = useState(false);\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const [listOfAllTasksId, setListOfAllTasksId] = useState([]);\r\n  const [listOfAllBadges, setListOfAllBadges] = useState([]);\r\n  const [listOfAllPriorityTasks, setListOfPriority] = useState([]);\r\n  const [listOfAllComments, setListOfAllComments] = useState([]);\r\n  const [listOfAllTerms, setListOfallTerms] = useState([]);\r\n  const [hideFontSizeLabel, setHideFontSizeLabel] = useState(false);\r\n  const [toggleCommentVisibility, setToggleCommentVisibility] = useState(false);\r\n  const [copyVisibility, setCopyVisibility] = useState(false);\r\n  const [dateVisibility, setDateVisibility] = useState(false);\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", hideTheme);\r\n  });\r\n\r\n  const [wholeList, setWholeList] = useState([\r\n    {\r\n      id: 0,\r\n      title: \"To Do\",\r\n      tasks: [],\r\n      activeList: false,\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"In Progress\",\r\n      tasks: [],\r\n      activeList: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Finished\",\r\n      tasks: [],\r\n      activeList: false,\r\n    },\r\n  ]);\r\n\r\n  const [labelColors, setLabelColors] = useState([\r\n    { color: \"#61BD4F\", colorName: \"green\", value: \"\", id: 0 },\r\n    { color: \"#F2D600\", colorName: \"yellow\", value: \"\", id: 1 },\r\n    { color: \"#FF9F1A\", colorName: \"orange\", value: \"\", id: 2 },\r\n    { color: \"#EB5A46\", colorName: \"red\", value: \"\", id: 3 },\r\n    { color: \"#C377E0\", colorName: \"purple\", value: \"\", id: 4 },\r\n    { color: \"#0079BF\", colorName: \"blue\", id: 5 },\r\n    { color: \"#00C2E0\", colorName: \"light blue ocean\", value: \"\", id: 6 },\r\n    { color: \"#51E898\", colorName: \"light green\", value: \"\", id: 7 },\r\n    { color: \"#FF78CB\", colorName: \"pink\", value: \"\", id: 8 },\r\n    { color: \"#344563\", colorName: \"dark blue\", value: \"\", id: 9 },\r\n    { color: \"#B3BAC5\", colorName: \"grey\", value: \"\", id: 10 },\r\n  ]);\r\n\r\n  const hideTheme = (e) => {\r\n    const searchingClass = e.target.className;\r\n    if (\r\n      searchingClass.includes(\"main\") ||\r\n      searchingClass.includes(\"input\") ||\r\n      searchingClass.includes(\"item\")\r\n    ) {\r\n      showThemeOptionFunction(false);\r\n    }\r\n\r\n    if (!searchingClass.includes(\"suggested\")) {\r\n      setChangeListInDetails(false);\r\n      setToggleDetailMove(false);\r\n      setCopyVisibility(false);\r\n    }\r\n\r\n    if (\r\n      searchingClass.includes(\"coverOption\") ||\r\n      searchingClass.includes(\"cover_box\")\r\n    ) {\r\n      setVisibilityOptionCover(false);\r\n      setLabelsVisibility(false);\r\n    }\r\n\r\n    if (searchingClass.includes(\"textArea_Option\")) {\r\n      setLabelsVisibility(false);\r\n    }\r\n\r\n    if (!searchingClass.includes(\"label\")) {\r\n      setLabelsVisibilityDetailsComp(false);\r\n    }\r\n    if (!searchingClass.includes(\"textArea\")) {\r\n      setToggleCommentVisibility(false);\r\n    }\r\n    if (!searchingClass.includes(\"calendar\")) {\r\n      setDateVisibility(false);\r\n    }\r\n  };\r\n\r\n  const listOption = (listId) => {\r\n    const copyWholeList = [...wholeList];\r\n    const filterWholeList = copyWholeList.filter((list) => list.id !== listId);\r\n    const deletedList = copyWholeList.filter((list) => list.id === listId);\r\n    deletedList[0].tasks.forEach((ele) => {\r\n      deleteCard(listId, ele.id, \"byButton\");\r\n    });\r\n\r\n    setWholeList(filterWholeList);\r\n  };\r\n\r\n  const addNewCard = (listId, newTask, taskId) => {\r\n    const correctList = wholeList.filter((list) => list.id === listId);\r\n    if (newTask.length === 0) return;\r\n\r\n    const matchedBadges = listOfAllBadges.filter((ele) => ele.id === taskId);\r\n    const matchedPriority = listOfAllPriorityTasks.filter(\r\n      (ele) => ele === taskId\r\n    );\r\n    const matchedComment = listOfAllComments.filter((ele) => ele.id === taskId);\r\n    const theBiggestId = Math.max(...listOfAllTasksId);\r\n\r\n    const matchedList = wholeList.filter((ele) => ele.id === listId);\r\n    const matchedDate = listOfAllTerms.filter((ele) => ele.id === taskId);\r\n\r\n    //\"Add card\" by move already existing card\r\n    if (taskId) {\r\n      correctList[0].tasks.push({\r\n        id: taskId,\r\n        taskName: newTask,\r\n        currentList: listId,\r\n        currentListName: matchedList[0].title,\r\n        comment: matchedComment,\r\n        badges: matchedBadges,\r\n        priority: `${matchedPriority.length === 0 ? null : \"priority\"}`,\r\n        date: matchedDate,\r\n        cover: \"\",\r\n      });\r\n    } else {\r\n      //Add new card by button 'Add Card'\r\n      correctList[0].tasks.push({\r\n        id: `${listOfAllTasksId.length === 0 ? 0 : theBiggestId + 1}`,\r\n        taskName: newTask,\r\n        currentList: listId,\r\n        currentListName: matchedList[0].title,\r\n        comment: \"\",\r\n        badges: [],\r\n        priority: false,\r\n        date: [],\r\n        cover: \"\",\r\n      });\r\n      if (listOfAllTasksId.length === 0) {\r\n        setListOfAllTasksId([0]);\r\n      } else {\r\n        setListOfAllTasksId([...listOfAllTasksId, theBiggestId + 1]);\r\n      }\r\n    }\r\n    numberOfTaskFunction(numberOfTask + 1);\r\n  };\r\n\r\n  const deleteCard = (listId, taskId, byButton) => {\r\n    if (byButton === \"byButton\") {\r\n      //Delete Card Badges from array if matched exist\r\n      const matchedBadges = listOfAllBadges.filter((ele) => ele.id === taskId);\r\n      const matchedPriorityIndex = listOfAllPriorityTasks.findIndex(\r\n        (ele) => ele === taskId\r\n      );\r\n      const matchedCommentIndex = listOfAllComments.findIndex(\r\n        (ele) => ele.id === taskId\r\n      );\r\n      const matchedTermIndex = listOfAllTerms.findIndex(\r\n        (ele) => ele === taskId\r\n      );\r\n      listOfAllPriorityTasks.splice(matchedPriorityIndex, 1);\r\n      listOfAllComments.splice(matchedCommentIndex, 1);\r\n      listOfAllTerms.splice(matchedTermIndex, 1);\r\n      if (matchedBadges.length !== 0) {\r\n        matchedBadges.forEach((element) => {\r\n          const indexOfBadgedToDelete = listOfAllBadges.findIndex(\r\n            (ele) => ele.id === taskId && ele.color === element.color\r\n          );\r\n          listOfAllBadges.splice(indexOfBadgedToDelete, 1);\r\n        });\r\n      }\r\n      //Delete Card Id from array\r\n      const matchedIdList = listOfAllTasksId.findIndex(\r\n        (ele) => ele === taskId * 1\r\n      );\r\n      listOfAllTasksId.splice(matchedIdList, 1);\r\n    }\r\n\r\n    //Delete Card from list( by every way )\r\n    const correctList = wholeList.filter((list) => list.id === listId);\r\n    const taskIndex = correctList[0].tasks.findIndex(\r\n      (element) => element.id === taskId\r\n    );\r\n    correctList[0].tasks.splice(taskIndex, 1);\r\n\r\n    numberOfTaskFunction(numberOfTask - 1);\r\n    setVisibilityOptionCover(false);\r\n    setVisibilityTaskDetails(false);\r\n  };\r\n\r\n  const addNewList = (listInputValue, showListHandle, setListInput) => {\r\n    showListHandle(false);\r\n    setListInput(\"\");\r\n    if (listInputValue === \"\") return;\r\n    if (listInputValue.length < 2) return;\r\n\r\n    let biggerThanLast = [];\r\n    wholeList.forEach((list) => biggerThanLast.push(list.id));\r\n    const theBiggest = Math.max(...biggerThanLast);\r\n    setWholeList([\r\n      ...wholeList,\r\n      {\r\n        title: listInputValue,\r\n        id: `${wholeList.length === 0 ? 0 : theBiggest + 1}`,\r\n        tasks: [],\r\n        activeInput: false,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const updateListTitle = (newTitle, listId) => {\r\n    const updatedList = wholeList.filter((list) => list.id === listId);\r\n    updatedList[0].title = newTitle;\r\n  };\r\n\r\n  const elementHoverEnter = (e) => {\r\n    const arrayClassList = [];\r\n    e.target.classList.forEach((item) => {\r\n      arrayClassList.push(item);\r\n    });\r\n\r\n    if (arrayClassList.includes(\"list\")) {\r\n      const currentLiColor = Color(\r\n        `${\r\n          e.target.style.backgroundColor\r\n            ? e.target.style.backgroundColor\r\n            : \"#76ce8e\"\r\n        }`\r\n      );\r\n      return (e.target.style.backgroundColor = currentLiColor.lighten(0.1));\r\n    }\r\n  };\r\n\r\n  const elementHoverLeave = (e) => {\r\n    const arrayClassList = [];\r\n    e.target.classList.forEach((item) => {\r\n      arrayClassList.push(item);\r\n    });\r\n\r\n    if (arrayClassList.includes(\"list\")) {\r\n      return (e.target.style.backgroundColor = whichColor);\r\n    }\r\n  };\r\n\r\n  const visibilityOptionFunction = (\r\n    e,\r\n    toggle,\r\n    taskName,\r\n    listId,\r\n    currentListName,\r\n    cardId\r\n  ) => {\r\n    //Dates sending from Card to OptionFunction Comp (by clicked Edit Icon)\r\n    setVisibilityOptionCover(toggle);\r\n    setIdUpdatedList(listId);\r\n    setTaskName(taskName);\r\n    setOptionCoverData([\r\n      {\r\n        listId: listId,\r\n        currentListName: currentListName,\r\n        top: e.target.parentNode.parentNode.offsetTop,\r\n        left: e.target.parentNode.offsetLeft,\r\n        taskTitle: taskName,\r\n        clickedCard: e.target.parentNode,\r\n        clickedCardWrapLabel: e.target.parentNode.children[0],\r\n        clickedCardId: cardId,\r\n        wholeList: wholeList,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const taskDetailsFunction = (\r\n    //Dates sending from Card to DetailsComponenet (by doubleClick Card)\r\n    nameUpdatedTask,\r\n    nameUpdatedList,\r\n    listId,\r\n    cardId\r\n  ) => {\r\n    setIdUpdatedList(listId);\r\n    setTaskTitleList(nameUpdatedList);\r\n    setTaskName(nameUpdatedTask);\r\n    setTaskId(cardId);\r\n    setVisibilityTaskDetails(true);\r\n  };\r\n\r\n  const updateCard = (e, updatedTitle, listId, taskId) => {\r\n    // For changing taskName by detailCover component and optionCover\r\n    if (\r\n      e.target.className.includes(\"cover\") ||\r\n      e.target.className.includes(\"cover_saveBtn\") ||\r\n      e.which === 13\r\n    ) {\r\n      const correctList = wholeList.filter((list) => list.id === listId);\r\n      if (updatedTitle.length === 0) return setVisibilityTaskDetails(false);\r\n      const index = correctList[0].tasks.findIndex((ele) => ele.id === taskId);\r\n      correctList[0].tasks[index].taskName = updatedTitle;\r\n      setVisibilityTaskDetails(false);\r\n      setVisibilityOptionCover(false);\r\n      setLabelsVisibility(false);\r\n    }\r\n\r\n    // For changing taskName by detailCover component without closing this componentView\r\n    if (\r\n      !e.target.className.includes(\"input\") &&\r\n      !e.target.className.includes(\"suggested\") &&\r\n      !e.target.className.includes(\"close\") &&\r\n      !e.target.className.includes(\"delete\") &&\r\n      !e.target.className.includes(\"cover_textArea\")\r\n    ) {\r\n      const correctList = wholeList.filter((list) => list.id === listId);\r\n      if (updatedTitle.length === 0) return setVisibilityTaskDetails(false);\r\n      if (correctList[0]) {\r\n        const index = correctList[0].tasks.findIndex(\r\n          (ele) => ele.id === taskId\r\n        );\r\n        correctList[0].tasks[index].taskName = updatedTitle;\r\n        setTaskName(updatedTitle);\r\n      }\r\n    }\r\n\r\n    if (e.target.className.includes(\"close\")) {\r\n      setVisibilityTaskDetails(false);\r\n      setVisibilityOptionCover(false);\r\n      setLabelsVisibility(false);\r\n    }\r\n  };\r\n\r\n  const changeListInDetails = (byElement) => {\r\n    if (byElement === \"byListName\") {\r\n      setChangeListInDetails(!visibilityChangeListInDetails);\r\n    } else if (\r\n      byElement === \"byNavMove\" ||\r\n      byElement === \"byOptionMove\" ||\r\n      byElement === \"byNavCopy\"\r\n    ) {\r\n      setToggleDetailMove(!toggleDetailMove);\r\n      if (byElement === \"byNavCopy\") {\r\n        setCopyVisibility(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const moveCardToAnotherList = (\r\n    taskTitle,\r\n    currentList,\r\n    taskId,\r\n    clickedListId,\r\n    byOptionCover,\r\n    copy,\r\n    canCopyLabels\r\n  ) => {\r\n    //FindListWhereDelete\r\n    const deleteFromList = wholeList.filter(\r\n      (list) => list.title === currentList\r\n    );\r\n\r\n    //AddToAnotherList\r\n    const addToList = wholeList.filter((list) => list.id === clickedListId);\r\n    if (addToList[0].id === deleteFromList[0].id) return;\r\n    if (!copy) {\r\n      deleteCard(deleteFromList[0].id, taskId);\r\n      addNewCard(addToList[0].id, taskTitle, taskId);\r\n    } else {\r\n      if (taskTitle.length === 0) return;\r\n      const theBiggestId = Math.max(...listOfAllTasksId);\r\n      const unicalIdForCopy = `${theBiggestId + 1}`;\r\n      listOfAllTasksId.push(unicalIdForCopy);\r\n      copyCard(\r\n        addToList[0].id,\r\n        taskTitle,\r\n        unicalIdForCopy,\r\n        taskId,\r\n        canCopyLabels\r\n      );\r\n    }\r\n    setChangeListInDetails(false);\r\n    setToggleDetailMove(false);\r\n\r\n    taskDetailsFunction(taskTitle, addToList[0].title, addToList[0].id, taskId);\r\n    if (byOptionCover || copy) {\r\n      setVisibilityTaskDetails(false);\r\n    }\r\n  };\r\n\r\n  const copyCard = (\r\n    listId,\r\n    taskTitle,\r\n    copyId,\r\n    preventCardId,\r\n    canCopyLabels\r\n  ) => {\r\n    const lablesToCopy = listOfAllBadges.filter(\r\n      (ele) => ele.id === preventCardId\r\n    );\r\n    const commentToCopy = listOfAllComments.filter(\r\n      (ele) => ele.id === preventCardId\r\n    );\r\n\r\n    const dateToCopy = listOfAllTerms.filter((ele) => ele.id === preventCardId);\r\n\r\n    if (lablesToCopy.length !== 0 && canCopyLabels) {\r\n      lablesToCopy.forEach((ele) => {\r\n        listOfAllBadges.push({\r\n          id: copyId,\r\n          color: ele.color,\r\n          labelId: `${ele.color}${copyId}`,\r\n          name: ele.name,\r\n        });\r\n      });\r\n    }\r\n\r\n    if (commentToCopy.length !== 0) {\r\n      listOfAllComments.push({ id: copyId, comment: commentToCopy[0].comment });\r\n    }\r\n\r\n    if (dateToCopy.length !== 0) {\r\n      listOfAllTerms.push({\r\n        id: copyId,\r\n        term: dateToCopy[0].term,\r\n        day: dateToCopy[0].day,\r\n        month: dateToCopy[0].month,\r\n        year: dateToCopy[0].year,\r\n        monthName: dateToCopy[0].monthName,\r\n        time: dateToCopy[0].time,\r\n        status: dateToCopy[0].status,\r\n      });\r\n    }\r\n\r\n    addNewCard(listId, taskTitle, copyId);\r\n  };\r\n\r\n  const moveListToAnotherPlace = (draggedListIndex, addToThisIndex) => {\r\n    const copy = [...wholeList];\r\n    const splicedElement = copy.splice(draggedListIndex, 1);\r\n    copy.splice(addToThisIndex, 0, ...splicedElement);\r\n    setWholeList(copy);\r\n  };\r\n\r\n  const clearAllBlankSpan = (e) => {\r\n    const allBlank = document.querySelectorAll(\".blank\");\r\n\r\n    allBlank.forEach((blank) => {\r\n      blank.style.width = \"0\";\r\n      blank.style.height = \"0\";\r\n      blank.style.backgroundColor = \"transparent\";\r\n      blank.style.borderRadius = \"0\";\r\n    });\r\n  };\r\n\r\n  //LABLES FEATURES\r\n  const handleLabelsVisibility = (toggle) => {\r\n    setLabelsVisibility(toggle);\r\n  };\r\n\r\n  const handleLabelsVisibilityDetailsComp = (toggle) => {\r\n    setLabelsVisibilityDetailsComp(toggle);\r\n  };\r\n\r\n  const toggleLabelColorToCard = (color, taskId) => {\r\n    const alreadyExistedBadges = listOfAllBadges.filter(\r\n      (ele) => ele.id === taskId\r\n    );\r\n\r\n    const matchedBages = [];\r\n    alreadyExistedBadges.forEach((ele) => {\r\n      if (ele.color === color) {\r\n        matchedBages.push(color);\r\n      }\r\n    });\r\n\r\n    if (matchedBages.length === 0) {\r\n      //Add only if this color and Id don't exist already\r\n      const nameBadge = labelColors.filter((ele) => ele.color === color);\r\n      // const dataForClasses = color.slice(1, -1);\r\n\r\n      listOfAllBadges.push({\r\n        id: taskId,\r\n        color: color,\r\n        name: nameBadge[0].value,\r\n        labelId: `${color}${taskId}`,\r\n      });\r\n\r\n      createLabelsElement(color, taskId, nameBadge[0].value);\r\n\r\n      //CheckIcon Visible\r\n      const checkIcon = document.getElementById(`${color}Check`);\r\n      checkIcon.style.display = \"block\";\r\n      setToggle(!toggle);\r\n    } else {\r\n      const indexToDelete = listOfAllBadges.findIndex(\r\n        (ele) => ele.id === taskId && ele.color === color\r\n      );\r\n\r\n      //Delete from list of badges when exist and from DOM\r\n      listOfAllBadges.splice(indexToDelete, 1);\r\n      const matchedColor = document.getElementById(`${color}${taskId}`);\r\n      matchedColor.remove();\r\n\r\n      //CheckIcon Visible\r\n      const checkIcon = document.getElementById(`${color}Check`);\r\n      checkIcon.style.display = \"none\";\r\n      setToggle(!toggle);\r\n    }\r\n  };\r\n\r\n  const createLabelsElement = (color, taskId, nameLabel) => {\r\n    const currentTask = document.getElementById(taskId);\r\n\r\n    const newLabel = document.createElement(\"div\");\r\n    newLabel.classList.add(`labelElement`);\r\n    newLabel.setAttribute(\"id\", `${color}${taskId}`);\r\n    newLabel.style.backgroundColor = `${color}`;\r\n    newLabel.textContent = nameLabel;\r\n    currentTask.children[0].appendChild(newLabel);\r\n  };\r\n\r\n  const addPriorityForCards = (e, cardId, byElement) => {\r\n    if (!listOfAllPriorityTasks.includes(cardId)) {\r\n      setListOfPriority([...listOfAllPriorityTasks, cardId]);\r\n      const clickedCardDOM = document.getElementById(cardId);\r\n      clickedCardDOM.style.border = \"1px solid #db4a36\";\r\n      e.target.style.color = \"#db4a36\";\r\n      e.target.children[0].style.color = \"#db4a36\";\r\n    } else if (listOfAllPriorityTasks.includes(cardId)) {\r\n      const indexToDelete = listOfAllPriorityTasks.findIndex(\r\n        (ele) => ele === cardId\r\n      );\r\n      listOfAllPriorityTasks.splice(indexToDelete, 1);\r\n      const clickedCardDOM = document.getElementById(cardId);\r\n      clickedCardDOM.style.border = null;\r\n      if (byElement === \"detailCover\") {\r\n        e.target.style.color = \"#42516e\";\r\n        e.target.children[0].style.color = \"#42516e\";\r\n      } else {\r\n        e.target.style.color = \"#fff\";\r\n        e.target.children[0].style.color = \"#fff\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleCommentFeature = (toggle) => {\r\n    setToggleCommentVisibility(toggle);\r\n  };\r\n\r\n  const toggleDateVisibility = () => {\r\n    setDateVisibility(!dateVisibility);\r\n  };\r\n\r\n  const toggleTermToCard = (\r\n    taskId,\r\n    date,\r\n    day,\r\n    month,\r\n    year,\r\n    monthName,\r\n    time,\r\n    status,\r\n    buttonType\r\n  ) => {\r\n    if (buttonType === \"save\") {\r\n      const termExistAlready = listOfAllTerms.filter(\r\n        (ele) => ele.id === taskId\r\n      );\r\n      if (termExistAlready.length !== 0) {\r\n        const existingTermIndex = listOfAllTerms.findIndex(\r\n          (ele) => ele.id === taskId\r\n        );\r\n        const currentCard = document.getElementById(`${taskId}term`);\r\n        currentCard.innerHTML = \"\";\r\n        listOfAllTerms.splice(existingTermIndex, 1);\r\n      }\r\n      const currentCard = document.getElementById(`${taskId}term`);\r\n      const termSpan = document.createElement(\"span\");\r\n      termSpan.classList.add(\"termSpan\");\r\n      termSpan.textContent = `${day} ${monthName} ${status}`;\r\n      currentCard.appendChild(termSpan);\r\n\r\n      setListOfallTerms([\r\n        ...listOfAllTerms,\r\n        {\r\n          id: taskId,\r\n          term: date,\r\n          day,\r\n          month,\r\n          year,\r\n          monthName,\r\n          time,\r\n          status,\r\n        },\r\n      ]);\r\n      setDateVisibility(!dateVisibility);\r\n    } else {\r\n      //When btnDelete clicked, delete from list and form card DOM\r\n      const termToDeleteIndex = listOfAllTerms.findIndex(\r\n        (ele) => ele.id === taskId\r\n      );\r\n      listOfAllTerms.splice(termToDeleteIndex, 1);\r\n      const currentCardTerm = document.getElementById(`${taskId}term`);\r\n      currentCardTerm.innerHTML = \"\";\r\n      if (termToDeleteIndex !== -1) {\r\n        setDateVisibility(!dateVisibility);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <Navigations\r\n        themeToggle={showThemeOptionFunction}\r\n        themeOption={showThemeOption}\r\n        elementHoverEnter={elementHoverEnter}\r\n        elementHoverLeave={elementHoverLeave}\r\n      />\r\n      <ThemeField themeOption={showThemeOption} setWhichColor={setWhichColor} />\r\n      <CoreField\r\n        wholeList={wholeList}\r\n        setWholeList={setWholeList}\r\n        listOption={listOption}\r\n        addNewCard={addNewCard}\r\n        deleteCard={deleteCard}\r\n        addNewList={addNewList}\r\n        elementHoverEnter={elementHoverEnter}\r\n        elementHoverLeave={elementHoverLeave}\r\n        visibilityOptionFunction={visibilityOptionFunction}\r\n        taskDetailsFunction={taskDetailsFunction}\r\n        updateListTitle={updateListTitle}\r\n        moveListToAnotherPlace={moveListToAnotherPlace}\r\n        clearAllBlankSpan={clearAllBlankSpan}\r\n        hideFontSizeLabel={hideFontSizeLabel}\r\n        setHideFontSizeLabel={setHideFontSizeLabel}\r\n      />\r\n      {visibilityOptionsCover ? (\r\n        <OptionCover\r\n          optionCoverData={optionCoverData}\r\n          taskName={taskName}\r\n          updateCard={updateCard}\r\n          deleteCard={deleteCard}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          labelsVisibility={labelsVisibility}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          addPriorityForCards={addPriorityForCards}\r\n          toggleDetailMove={toggleDetailMove}\r\n          changeListInDetails={changeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          listOfAllPriorityTasks={listOfAllPriorityTasks}\r\n          copyVisibility={copyVisibility}\r\n          dateVisibility={dateVisibility}\r\n          toggleDateVisibility={toggleDateVisibility}\r\n          toggleTermToCard={toggleTermToCard}\r\n          listOfAllTerms={listOfAllTerms}\r\n        />\r\n      ) : null}\r\n      {visibilityTaskDetails ? (\r\n        <DetailCover\r\n          taskName={taskName}\r\n          taskId={taskId}\r\n          taskTitleList={taskTitleList}\r\n          updateCard={updateCard}\r\n          deleteCard={deleteCard}\r\n          idUpdatedList={idUpdatedList}\r\n          changeListInDetails={changeListInDetails}\r\n          visibilityChangeListInDetails={visibilityChangeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          handleLabelsVisibility={handleLabelsVisibilityDetailsComp}\r\n          labelsVisibility={labelsVisibilityDetailsComp}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          labelColors={labelColors}\r\n          setLabelColors={setLabelColors}\r\n          listOfAllTasksId={listOfAllTasksId}\r\n          addPriorityForCards={addPriorityForCards}\r\n          toggleCommentFeature={toggleCommentFeature}\r\n          toggleCommentVisibility={toggleCommentVisibility}\r\n          listOfAllComments={listOfAllComments}\r\n          setListOfAllComments={setListOfAllComments}\r\n          toggleDetailMove={toggleDetailMove}\r\n          listOfAllPriorityTasks={listOfAllPriorityTasks}\r\n          copyVisibility={copyVisibility}\r\n          toggleDateVisibility={toggleDateVisibility}\r\n          toggleTermToCard={toggleTermToCard}\r\n          dateVisibility={dateVisibility}\r\n          listOfAllTerms={listOfAllTerms}\r\n        />\r\n      ) : null}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { device } from \"../MediaQuery/mq\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin:0;\r\n    padding:0;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    box-sizing:border-box;\r\n    border:none;\r\n    outline:none;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n\r\n  html{\r\n    font-size:10px;\r\n  }\r\n\r\n  body{\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n  }\r\n\r\n  .card{\r\n  top:0;\r\n  left:0;\r\n  display:flex;\r\n  justify-content:space-between;\r\n  flex-wrap:wrap;\r\n  width: 100%;\r\n  max-width:260px;\r\n  word-break: break-all;\r\n  margin: 10px 0px;\r\n  padding: 9px 7.5px;\r\n  font-size: 1.4rem;\r\n  box-shadow: 0px 0.5px 0px 0.5px #aaa;\r\n  background-color: #fff;\r\n  border-radius:3px;\r\n  cursor: pointer;\r\n  color:black;\r\n\r\n  &:hover {\r\n    background-color: #F4F5F7;\r\n  }\r\n\r\n      &:hover .fa-highlighter {\r\n     color:#777; \r\n    }\r\n  }\r\n\r\n  .card_cardWrapContent{\r\n    display:flex;\r\n    justify-content:space-around\r\n  }\r\n\r\n  .card_wrapLabel{\r\n    display:flex;\r\n    flex-wrap:wrap;\r\n    width:100%;\r\n    transition:0.1s linear;\r\n\r\n    &:hover{\r\n      opacity:0.6;\r\n    }\r\n  }\r\n\r\n  .labelElement{\r\n    align-self:center;\r\n    min-width: 15%;\r\n    min-height:8px;\r\n    border-radius:5px;\r\n    margin-bottom:4px;\r\n    margin-right:4px;\r\n    padding: 3px;\r\n    color:white;\r\n    transition: 0.1s linear;\r\n  }\r\n\r\n  .labelElement_DetailCover{\r\n    min-width:40px;\r\n    width:auto;\r\n    height:32px;\r\n    border-radius:3px;\r\n    margin: 3px 3px 3px 0px;\r\n    cursor:pointer;\r\n    transition: 0.1s linear;\r\n    padding: 8px 5px;\r\n    color:white;\r\n    font-size:14px;\r\n    font-weight:600;\r\n\r\n    &:hover{\r\n      opacity: 0.85;\r\n    }\r\n  }\r\n\r\n  .lists{\r\n  top:0;\r\n  left:0;\r\n  width: 275px;\r\n  max-height: 80vh;\r\n  margin-right: 10px;\r\n  align-self: flex-start;\r\n  background-color: #ebecf0;\r\n  border-radius: 4px;\r\n  padding: 10px 7.5px;\r\n  margin-bottom: 15px;\r\n  cursor: pointer;\r\n  overflow-y:scroll;\r\n\r\n  &::-webkit-scrollbar{\r\n    width:1px;\r\n}\r\n\r\n&::-webkit-scrollbar-track{\r\n    background:rgba(0,0,0,0);\r\n}\r\n\r\n&::-webkit-scrollbar-thumb{\r\n  background:rgba(0,0,0,0);\r\n  border-radius: 10px;\r\n  height:10px;\r\n}\r\n&::-webkit-scrollbar-thumb:hover{\r\n  background:rgba(0,0,0,0);\r\n}\r\n  }\r\n  \r\n  .singleListWrap{\r\n     position:relative;\r\n     width: 285px;\r\n     display:flex;\r\n     flex-direction:column;\r\n   }\r\n\r\n  .fa-highlighter{\r\n    color:#777;\r\n    align-self:center;\r\n    margin:2px;\r\n    margin-bottom:0px;\r\n    color:#000;\r\n    @media ${device.laptop} {\r\n      color:#fff;\r\n\r\n      &:hover{\r\n        color:#000;\r\n      }\r\n  }\r\n  }\r\n  \r\n  .fa-ellipsis-h{\r\n   padding: 9px ;\r\n   margin-left:2px;\r\n   margin-bottom: 5px;\r\n   font-size: 13px;\r\n   color: #777;\r\n   cursor: pointer;\r\n\r\n   &:hover{\r\n    background-color: #dddfe5;\r\n   }\r\n  }\r\n\r\n  .fa-credit-card{\r\n    margin-right: 7.5px;\r\n     color:#42526E;\r\n     font-size: 19px;\r\n     \r\n   }\r\n\r\n   .detail > .fa-times{\r\n     position: absolute;\r\n     top:15px;\r\n     right:15px;\r\n     font-size: 20px;\r\n     color:#42526E;\r\n     cursor: pointer;\r\n   }\r\n\r\n   .termSpan{\r\n    color: #888;\r\n    font-size: 12.5px;\r\n    letter-spacing: 0.5px;\r\n    margin-left:3px;\r\n   }\r\n\r\n::-webkit-scrollbar{\r\n    height:17.5px;\r\n}::-webkit-scrollbar-track{\r\n    background:rgba(0,0,0,0.5);\r\n}\r\n::-webkit-scrollbar-thumb{\r\n  background:rgba(0,0,0,0.3);\r\n  border-radius: 10px;\r\n  height:10px;\r\n}\r\n::-webkit-scrollbar-thumb:hover{\r\n  background:rgba(0,0,0,0.5);\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\nimport Main from \"../Containers/Main/main\";\nimport GlobalStyle from \"../Style/GlobalStyle/globalStyle\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}