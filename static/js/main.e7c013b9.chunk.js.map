{"version":3,"sources":["components/Navigation/navigation.js","components/mq.js","components/List/List.js","components/CoreField/CoreField.js","components/ThemeField/themeField.js","components/main.js","components/GlobalStyle/globalStyle.js","components/App.js","serviceWorker.js","index.js"],"names":["StyledNav","styled","nav","StyledUl","ul","StyledList","li","props","lastEle","Link","a","StyledInput","input","Navigation","themeToggle","themeOption","whichColor","navHoverEnter","e","arrayClassList","target","classList","forEach","item","push","includes","currentLiColor","Color","style","backgroundColor","lighten","navHoverLeave","className","onMouseEnter","onMouseLeave","onClick","placeholder","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","section","StyledTextArea","button","textarea","showStyle","StyledAddButton","StyledSpanX","span","List","state","inputTitle","title","showAddField","textAreaValue","hideAll","searchingClass","setState","showListHandle","setListInput","setListTitle","value","swapAddFieldFeature","buttonId","setTextAreaValue","addNewCardFeature","id","addNewCard","addNewCardFeatureByKey","which","deleteCardFeature","deleteCard","document","addEventListener","this","removeEventListener","listOption","tasks","onChange","map","task","key","Component","StyledMain","main","StyledListInput","StyledWrapList","div","StyledButton","StyledWrapAddListBtn","bgc","MainField","wholeList","addNewList","useState","showList","listInputValue","list","listInputHandle","onKeyPress","addNewListByKey","StyledThemeDiv","showTheme","StyledColorDiv","StyledThemeDivTitle","h3","ThemeField","setWhichColor","changeColor","mainColor","navColor","listColor","inputColor","querySelector","querySelectorAll","Main","showThemeOption","showThemeOptionFunction","useEffect","hideTheme","activeList","setWholeList","CoreField","listId","filterWholeList","filter","sort","b","newTask","correctList","length","taskValue","parentNode","textContent","taskIndex","findIndex","element","splice","activeInput","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e7c013b9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Color from \"color\";\r\n\r\nconst StyledNav = styled.nav`\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: #40a35b;\r\n  padding: 0px 4px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledUl = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  flex-shrink: 1;\r\n  width: 100%;\r\n  height: 40px;\r\n  list-style: none;\r\n  cursor: pointer;\r\n  padding: 4px 0px;\r\n`;\r\n\r\nconst StyledList = styled.li`\r\n  width: ${(props) => (props.lastEle ? \"auto\" : \"75px\")};\r\n  height: 100%;\r\n  text-align: center;\r\n  background-color: #76ce8e;\r\n  border-radius: 4px;\r\n  transition: 0.1s linear;\r\n  margin-right: 4px;\r\n  margin-left: ${(props) => (props.lastEle ? \"auto\" : \"initial\")};\r\n  padding: ${(props) => (props.lastEle ? \"initial\" : \"8px 0px\")};\r\n`;\r\n\r\nconst Link = styled.a`\r\n  text-decoration: none;\r\n  font-size: 1.5rem;\r\n  color: #fff;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 120px;\r\n  height: 100%;\r\n  border-radius: 4px;\r\n  padding: 7.5px;\r\n  background-color: #79be8c;\r\n  font-size: 1.6rem;\r\n  color: #fff;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    background-color: #64b37a;\r\n  }\r\n\r\n  &::placeholder {\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\n//FEATURES\r\n\r\nconst Navigation = ({ themeToggle, themeOption, whichColor }) => {\r\n  const themeFunction = () => {\r\n    themeToggle(!themeOption);\r\n  };\r\n\r\n  const navHoverEnter = (e) => {\r\n    const arrayClassList = [];\r\n    e.target.classList.forEach((item) => {\r\n      arrayClassList.push(item);\r\n    });\r\n\r\n    if (arrayClassList.includes(\"list\")) {\r\n      const currentLiColor = Color(\r\n        `${\r\n          e.target.style.backgroundColor\r\n            ? e.target.style.backgroundColor\r\n            : \"#76ce8e\"\r\n        }`\r\n      );\r\n      return (e.target.style.backgroundColor = currentLiColor.lighten(0.1));\r\n    }\r\n  };\r\n\r\n  const navHoverLeave = (e) => {\r\n    const arrayClassList = [];\r\n    e.target.classList.forEach((item) => {\r\n      arrayClassList.push(item);\r\n    });\r\n\r\n    if (arrayClassList.includes(\"list\")) {\r\n      return (e.target.style.backgroundColor = whichColor);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledNav className=\"nav\">\r\n      <StyledUl>\r\n        <StyledList\r\n          className={\"list\"}\r\n          onMouseEnter={(e) => navHoverEnter(e)}\r\n          onMouseLeave={(e) => navHoverLeave(e)}\r\n        >\r\n          <Link>Your List</Link>\r\n        </StyledList>\r\n        <StyledList\r\n          className={\"list\"}\r\n          onClick={themeFunction}\r\n          onMouseEnter={(e) => navHoverEnter(e)}\r\n          onMouseLeave={(e) => navHoverLeave(e)}\r\n        >\r\n          <Link>Theme</Link>\r\n        </StyledList>\r\n        <StyledList\r\n          className={\"list\"}\r\n          onMouseEnter={(e) => navHoverEnter(e)}\r\n          onMouseLeave={(e) => navHoverLeave(e)}\r\n        >\r\n          <Link>Help</Link>\r\n        </StyledList>\r\n        <StyledList className={\"list\"} lastEle>\r\n          <StyledInput className={\"item\"} placeholder=\"Search...\" />\r\n        </StyledList>\r\n      </StyledUl>\r\n    </StyledNav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","const size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n  desktop: \"2560px\",\r\n};\r\n\r\nexport const device = {\r\n  mobileS: `(min-width: ${size.mobileS})`,\r\n  mobileM: `(min-width: ${size.mobileM})`,\r\n  mobileL: `(min-width: ${size.mobileL})`,\r\n  tablet: `(min-width: ${size.tablet})`,\r\n  laptop: `(min-width: ${size.laptop})`,\r\n  laptopL: `(min-width: ${size.laptopL})`,\r\n  desktop: `(min-width: ${size.desktop})`,\r\n  desktopL: `(min-width: ${size.desktop})`,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../mq\";\r\n\r\nconst StyledList = styled.section`\r\n  width: 275px;\r\n  background-color: #ebecf0;\r\n  border-radius: 4px;\r\n  padding: 10px 7.5px;\r\n  margin-bottom: 15px;\r\n\r\n  @media ${device.laptop} {\r\n    margin-right: 10px;\r\n    align-self: flex-start;\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 220px;\r\n  background-color: #ebecf0;\r\n  border-radius: 1px;\r\n  padding: 5px 4px;\r\n  font-size: 1.4rem;\r\n  font-weight: 600;\r\n  color: #172b4d;\r\n\r\n  &:focus {\r\n    background-color: white;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 100%;\r\n  text-align: left;\r\n  margin-left: 5px;\r\n  padding: 7.5px 3px;\r\n  color: #779;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #dddfe5;\r\n  }\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 100%;\r\n  height: 35px;\r\n  background-color: ${(props) => (props.showStyle ? \"#fff\" : \"#ebecf0\")};\r\n  border-radius: 5px;\r\n  padding: 7.5px;\r\n  color: #779;\r\n  resize: none;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.showStyle ? null : \"#dddfe5\")};\r\n  }\r\n`;\r\n\r\nconst StyledAddButton = styled.button`\r\n  background-color: #5aac44;\r\n  border-radius: 5px;\r\n  color: white;\r\n  padding: 8px 20px;\r\n  margin: 5px 0px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #67ba50;\r\n  }\r\n`;\r\n\r\nconst StyledSpanX = styled.span`\r\n  font-size: 2.3rem;\r\n  vertical-align: middle;\r\n  color: #666;\r\n  cursor: pointer;\r\n`;\r\n\r\nclass List extends Component {\r\n  state = {\r\n    inputTitle: this.props.title,\r\n    showAddField: false,\r\n    textAreaValue: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"click\", this.hideAll);\r\n    document.addEventListener(\"keypress\", (e) =>\r\n      this.addNewCardFeatureByKey(e, this.props.id, this.state.textAreaValue)\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"click\", this.hideAll);\r\n    document.removeEventListener(\"keypress\", (e) =>\r\n      this.addNewCardFeatureByKey(e, this.props.id, this.state.textAreaValue)\r\n    );\r\n  }\r\n\r\n  hideAll = (e) => {\r\n    const searchingClass = e.target.className;\r\n    if (\r\n      searchingClass.includes(\"main\") ||\r\n      searchingClass.includes(\"input\") ||\r\n      searchingClass.includes(\"nav\")\r\n    ) {\r\n      this.setState({\r\n        showAddField: false,\r\n      });\r\n      this.props.showListHandle(false);\r\n      this.props.setListInput(\"\");\r\n    }\r\n  };\r\n\r\n  setListTitle = (e) => {\r\n    this.setState({\r\n      inputTitle: e.target.value,\r\n    });\r\n  };\r\n\r\n  swapAddFieldFeature = (buttonId) => {\r\n    if (buttonId === \"textArea\") {\r\n      this.setState({\r\n        showAddField: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showAddField: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  setTextAreaValue = (e) => {\r\n    this.setState({\r\n      textAreaValue: e.target.value,\r\n    });\r\n  };\r\n\r\n  addNewCardFeature = (id, textAreaValue) => {\r\n    this.props.addNewCard(id, textAreaValue);\r\n    this.setState({\r\n      showAddField: false,\r\n      textAreaValue: \"\",\r\n    });\r\n  };\r\n\r\n  addNewCardFeatureByKey = (e, id, textAreaValue) => {\r\n    if (e.which === 13 && this.state.showAddField) {\r\n      this.props.addNewCard(id, textAreaValue);\r\n      this.setState({\r\n        showAddField: false,\r\n        textAreaValue: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteCardFeature = (e) => {\r\n    this.props.deleteCard(e, this.props.id);\r\n    this.setState({\r\n      textAreaValue: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { listOption, id, tasks } = this.props;\r\n    const { showAddField, textAreaValue } = this.state;\r\n    return (\r\n      <StyledList>\r\n        <StyledInput\r\n          value={this.state.inputTitle}\r\n          onChange={(e) => this.setListTitle(e)}\r\n          className=\"input\"\r\n        />\r\n        <span\r\n          className=\"fas fa-ellipsis-h\"\r\n          onClick={() => listOption(id)}\r\n        ></span>\r\n        {tasks.map((task) => (\r\n          <div key={task} className=\"card\">\r\n            {task}\r\n            <span\r\n              className=\"fas fa-highlighter\"\r\n              onClick={(e) => this.deleteCardFeature(e)}\r\n            />\r\n          </div>\r\n        ))}\r\n        <StyledTextArea\r\n          value={showAddField ? textAreaValue : \"Add Another Card\"}\r\n          onChange={(e) => this.setTextAreaValue(e)}\r\n          onClick={() => this.swapAddFieldFeature(\"textArea\")}\r\n          showStyle={showAddField}\r\n        />\r\n        {showAddField ? (\r\n          <>\r\n            <StyledAddButton\r\n              onClick={() => this.addNewCardFeature(id, textAreaValue)}\r\n            >\r\n              Add Card\r\n            </StyledAddButton>\r\n            <StyledSpanX\r\n              className=\"fas fa-times\"\r\n              onClick={() => this.swapAddFieldFeature(\"SpanX\")}\r\n            />\r\n          </>\r\n        ) : null}\r\n      </StyledList>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport List from \"../List/List\";\r\nimport { device } from \"../mq\";\r\n\r\nconst StyledMain = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100vw;\r\n  min-height: calc(100vh - 40px);\r\n  background-color: #4bbf6b;\r\n  padding: 40px 15px 0px 15px;\r\n\r\n  @media ${device.laptop} {\r\n    flex-direction: row;\r\n    align-items: flex-start;\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n\r\nconst StyledListInput = styled.input`\r\n  width: 265px;\r\n  background-color: #76ce8e;\r\n  border-radius: 4px;\r\n  padding: 12px 7.5px;\r\n  text-align: left;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  box-shadow: 0px 0px 1px 0px #888;\r\n\r\n  &::placeholder {\r\n    color: white;\r\n  }\r\n\r\n  &:focus {\r\n    background-color: #fff !important;\r\n    ::placeholder {\r\n      color: black;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledWrapList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 275px;\r\n  height: auto;\r\n  background-color: transparent;\r\n  margin-bottom: 10px;\r\n  padding: 3px 5px;\r\n  border-radius: 5px;\r\n  transition: 0.1s linear;\r\n\r\n  @media ${device.laptop} {\r\n    width: auto;\r\n    max-width: 100vw;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  align-self: flex-start;\r\n  width: 50%;\r\n  background-color: #5aac44;\r\n  border-radius: 5px;\r\n  color: white;\r\n  padding: 8px 20px;\r\n  margin-top: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #67ba50;\r\n  }\r\n`;\r\n\r\nconst StyledWrapAddListBtn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  align-self: flex-start;\r\n  width: 275px;\r\n  border-radius: 4px;\r\n  padding: 0px 5px 5px 5px;\r\n  padding-top: ${(props) => (props.bgc ? \"5px\" : \"0px\")};\r\n  background-color: ${(props) => (props.bgc ? \"#ebecf0\" : \"transparent\")};\r\n  transition: 0.1s linear;\r\n`;\r\n\r\n// COMPONENT //\r\n\r\nconst MainField = ({\r\n  wholeList,\r\n  listOption,\r\n  addNewCard,\r\n  deleteCard,\r\n  addNewList,\r\n}) => {\r\n  const [showList, showListHandle] = useState(false);\r\n\r\n  const showAddListHandle = () => {\r\n    showListHandle(true);\r\n  };\r\n\r\n  const [listInputValue, setListInput] = useState(\"\");\r\n\r\n  const listInputHandle = (e) => {\r\n    setListInput(e.target.value);\r\n  };\r\n\r\n  const addNewListByKey = (e) => {\r\n    if (e.which === 13 && showList) {\r\n      addNewList(listInputValue, showListHandle, setListInput);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledMain className=\"main\">\r\n      <StyledWrapList>\r\n        {wholeList.map((list) => (\r\n          <List\r\n            key={list.id}\r\n            id={list.id}\r\n            title={list.title}\r\n            tasks={list.tasks}\r\n            listOption={listOption}\r\n            addNewCard={addNewCard}\r\n            deleteCard={deleteCard}\r\n            showListHandle={showListHandle}\r\n            setListInput={setListInput}\r\n          />\r\n        ))}\r\n        <StyledWrapAddListBtn bgc={showList ? true : false}>\r\n          <StyledListInput\r\n            bgc={showList ? true : false}\r\n            placeholder=\"Add another list\"\r\n            onClick={showAddListHandle}\r\n            onChange={(e) => listInputHandle(e)}\r\n            className=\"list\"\r\n            value={listInputValue}\r\n            onKeyPress={(e) => addNewListByKey(e)}\r\n          />\r\n          {showList ? (\r\n            <StyledButton\r\n              onClick={() =>\r\n                addNewList(listInputValue, showListHandle, setListInput)\r\n              }\r\n            >\r\n              Add List\r\n            </StyledButton>\r\n          ) : null}\r\n        </StyledWrapAddListBtn>\r\n      </StyledWrapList>\r\n    </StyledMain>\r\n  );\r\n};\r\n\r\nexport default MainField;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../mq\";\r\n\r\nconst StyledThemeDiv = styled.div`\r\n  position: fixed;\r\n  bottom: 0;\r\n  right: calc(50% - (375px / 2));\r\n  width: 375px;\r\n  transform: ${(props) =>\r\n    props.showTheme ? \"translateX(0px)\" : \"translateX(100vw)\"};\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  background-color: #f4f5f7;\r\n  padding: 10px;\r\n  transition: 0.3s linear;\r\n\r\n  @media ${device.laptop} {\r\n    top: calc(0% + 40px);\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 375px;\r\n    align-content: flex-start;\r\n  }\r\n`;\r\n\r\nconst StyledColorDiv = styled.div`\r\n  width: 75px;\r\n  height: 75px;\r\n  border-radius: 5px;\r\n  margin-right: 5px;\r\n  margin-left: 5px;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    opacity: 0.75;\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    width: 45%;\r\n    height: 85px;\r\n  }\r\n`;\r\n\r\nconst StyledThemeDivTitle = styled.h3`\r\n  width: 100%;\r\n  padding: 10px 0px;\r\n  text-align: center;\r\n  font-size: 2rem;\r\n`;\r\n\r\nfunction ThemeField({ themeOption, setWhichColor }) {\r\n  const changeColor = (mainColor, navColor, listColor, inputColor) => {\r\n    const main = document.querySelector(\".main\");\r\n    main.style.backgroundColor = mainColor;\r\n\r\n    const nav = document.querySelector(\".nav\");\r\n    nav.style.backgroundColor = navColor;\r\n\r\n    const lists = document.querySelectorAll(\".list\");\r\n    lists.forEach((list) => {\r\n      list.style.backgroundColor = listColor;\r\n    });\r\n\r\n    const inputs = document.querySelectorAll(\".item\");\r\n    inputs.forEach((input) => {\r\n      input.style.backgroundColor = inputColor;\r\n    });\r\n\r\n    setWhichColor([listColor]);\r\n  };\r\n  return (\r\n    <StyledThemeDiv showTheme={themeOption}>\r\n      <StyledThemeDivTitle>Colors</StyledThemeDivTitle>\r\n      <StyledColorDiv\r\n        onClick={() =>\r\n          changeColor(\"#0079BF\", \"#0067A3\", \"#3D99CE\", \"#4D95BE\", 1)\r\n        }\r\n        style={{ backgroundColor: \"#0079BF\" }}\r\n      />\r\n      <StyledColorDiv\r\n        onClick={() =>\r\n          changeColor(\"#D29034\", \"#B37B2C\", \"#DDAB65\", \"#C9A26C\", 2)\r\n        }\r\n        style={{ backgroundColor: \"#D29034\" }}\r\n      />\r\n      <StyledColorDiv\r\n        onClick={() =>\r\n          changeColor(\"#519839\", \"#458131\", \"#7BB168\", \"#7DA76F\", 3)\r\n        }\r\n        style={{ backgroundColor: \"#519839\" }}\r\n      />\r\n      <StyledColorDiv\r\n        onClick={() =>\r\n          changeColor(\"#B04632\", \"#963C2B\", \"#C37263\", \"#B5766B\", 4)\r\n        }\r\n        style={{ backgroundColor: \"#B04632\" }}\r\n      />\r\n      <StyledColorDiv\r\n        onClick={() =>\r\n          changeColor(\"#89609E\", \"#755286\", \"#A586B5\", \"#9E86AB\", 5)\r\n        }\r\n        style={{ backgroundColor: \"#89609E\" }}\r\n      />\r\n      <StyledColorDiv\r\n        onClick={() =>\r\n          changeColor(\"#CD5A91\", \"#AE4D7B\", \"#D981AB\", \"#C682A3\", 6)\r\n        }\r\n        style={{ backgroundColor: \"#CD5A91\" }}\r\n      />\r\n      <StyledColorDiv\r\n        onClick={() =>\r\n          changeColor(\"#4BBF6B\", \"#40A35B\", \"#76CE8E\", \"#79BE8C\", 7)\r\n        }\r\n        style={{ backgroundColor: \"#4BBF6B\" }}\r\n      />\r\n      <StyledColorDiv\r\n        onClick={() =>\r\n          changeColor(\"#00AECC\", \"#0094AE\", \"#3DC1D8\", \"#4DB4C6\", 8)\r\n        }\r\n        style={{ backgroundColor: \"#00AECC\" }}\r\n      />\r\n      <StyledColorDiv\r\n        onClick={() =>\r\n          changeColor(\"#838C91\", \"#6F777B\", \"#A1A8AB\", \"#9BA0A3\", 9)\r\n        }\r\n        style={{ backgroundColor: \"#838C91\" }}\r\n      />\r\n    </StyledThemeDiv>\r\n  );\r\n}\r\n\r\nexport default ThemeField;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Navigation from \"./Navigation/navigation\";\r\nimport CoreField from \"./CoreField/CoreField\";\r\nimport ThemeField from \"./ThemeField/themeField\";\r\n\r\nconst Main = () => {\r\n  const [showThemeOption, showThemeOptionFunction] = useState(false);\r\n  const [whichColor, setWhichColor] = useState([\"#76ce8e\"]);\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", hideTheme);\r\n  });\r\n\r\n  const [wholeList, setWholeList] = useState([\r\n    {\r\n      id: 0,\r\n      title: \"To Do\",\r\n      tasks: [],\r\n      activeList: false,\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"In Progress\",\r\n      tasks: [],\r\n      activeList: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Finished\",\r\n      tasks: [],\r\n      activeList: false,\r\n    },\r\n  ]);\r\n\r\n  const hideTheme = (e) => {\r\n    const searchingClass = e.target.className;\r\n    if (\r\n      searchingClass.includes(\"main\") ||\r\n      searchingClass.includes(\"input\") ||\r\n      searchingClass.includes(\"item\")\r\n    ) {\r\n      showThemeOptionFunction(false);\r\n    }\r\n  };\r\n\r\n  const listOption = (listId) => {\r\n    const copyWholeList = [...wholeList];\r\n    const filterWholeList = copyWholeList.filter((list) => list.id !== listId);\r\n\r\n    filterWholeList.sort(function (a, b) {\r\n      return a.id - b.id;\r\n    });\r\n\r\n    setWholeList(filterWholeList);\r\n  };\r\n\r\n  const addNewCard = (listId, newTask) => {\r\n    const correctList = wholeList.filter((list) => list.id === listId);\r\n\r\n    if (correctList[0].tasks.includes(newTask)) return;\r\n    if (newTask.length < 2) return;\r\n    correctList[0].tasks.push(newTask);\r\n  };\r\n\r\n  const deleteCard = (e, listId) => {\r\n    const correctList = wholeList.filter((list) => list.id === listId);\r\n\r\n    const taskValue = e.target.parentNode.textContent;\r\n\r\n    const taskIndex = correctList[0].tasks.findIndex(\r\n      (element) => element === taskValue\r\n    );\r\n\r\n    correctList[0].tasks.splice(taskIndex, 1);\r\n  };\r\n\r\n  const addNewList = (listInputValue, showListHandle, setListInput) => {\r\n    showListHandle(false);\r\n    setListInput(\"\");\r\n    if (listInputValue === \"\") return;\r\n    if (listInputValue.length < 2) return;\r\n    setWholeList([\r\n      ...wholeList,\r\n      {\r\n        title: listInputValue,\r\n        id: `${\r\n          wholeList.length !== 0 ? wholeList[wholeList.length - 1].id + 1 : 0\r\n        }`,\r\n        tasks: [],\r\n        activeInput: false,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <Navigation\r\n        themeToggle={showThemeOptionFunction}\r\n        themeOption={showThemeOption}\r\n        whichColor={whichColor}\r\n      />\r\n      <ThemeField themeOption={showThemeOption} setWhichColor={setWhichColor} />\r\n      <CoreField\r\n        wholeList={wholeList}\r\n        setWholeList={setWholeList}\r\n        listOption={listOption}\r\n        addNewCard={addNewCard}\r\n        deleteCard={deleteCard}\r\n        addNewList={addNewList}\r\n      />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin:0;\r\n    padding:0;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    box-sizing:border-box;\r\n    border:none;\r\n    outline:none;\r\n  }\r\n\r\n  html{\r\n    font-size:10px;\r\n  }\r\n\r\n  body{\r\n    min-width:350px;\r\n  }\r\n\r\n  .card{\r\n  display:flex;\r\n  justify-content:space-between;\r\n  width: 100%;\r\n  word-break: break-all;\r\n  margin: 10px 0px;\r\n  padding: 9px 7.5px;\r\n  font-size: 1.4rem;\r\n  box-shadow: 0px 1px 0.5px 0.5px #bbb;\r\n  background-color: #fff;\r\n  border-radius:3px;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  color:black;\r\n\r\n  &:hover {\r\n    background-color: #ebecf0;\r\n  }\r\n\r\n  &:hover > *{\r\n  color:#777;\r\n  }\r\n  }\r\n\r\n  .fa-highlighter{\r\n    color:#fff;\r\n    align-self:center;\r\n    margin-left:2px;\r\n  }\r\n  \r\n  .fa-ellipsis-h{\r\n   padding: 9px ;\r\n   margin-left:2px;\r\n   margin-bottom: 5px;\r\n   font-size: 13px;\r\n   color: #777;\r\n   cursor: pointer;\r\n\r\n   &:hover{\r\n    background-color: #dddfe5;\r\n   }\r\n  }\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\nimport Main from \"./main\";\nimport GlobalStyle from \"./GlobalStyle/globalStyle\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}