{"version":3,"sources":["components/Navigation/navigation.js","components/mq.js","components/TaskStatus/taskStatus.js","components/Main/mainField.js","components/ThemeField/themeField.js","components/main.js","components/GlobalStyle/globalStyle.js","components/App.js","serviceWorker.js","index.js"],"names":["StyledNav","styled","nav","StyledUl","ul","StyledList","li","props","lastEle","Link","a","StyledInput","input","navigation","themeToggle","themeOption","className","onClick","placeholder","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","StyledTaskSection","section","StyledButton","button","StyledAddButton","StyledTextArea","textarea","StyledSpan","span","StyledSpanX","TaskStatus","title","addListFeature","tasks","addNewCard","id","taskEditCard","clickListOption","useState","inputValue","setInputValue","textArea","handletextArea","toDoInput","handleToDoInput","useEffect","document","addEventListener","hideAll","refresh","e","searchingClass","target","includes","onChange","value","handleInputValue","map","task","key","textAreaFeature","StyledMain","main","StyledWrapDiv","div","bgc","StyledListInput","StyledListContainer","MainField","addList","showAddList","activeInput","newListItem","setAllList","newTask","closeAddInput","clearTextArea","returnCloseFunc","returnClearFunc","filter","list","push","currentTask","tasksAfterDelete","copyStayElement","newList","sort","b","listItemAfterDelete","i","length","style","margin","StyledThemeDiv","showTheme","StyledColorDiv","StyledThemeDivTitle","h3","themeField","changeColor","mainColor","navColor","listColor","inputColor","querySelector","backgroundColor","querySelectorAll","forEach","Main","showThemeOption","showThemeOptionFunction","hideTheme","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9f99a3ad.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledNav = styled.nav`\r\n  width: 100%;\r\n  height: 40px;\r\n  background-color: #40a35b;\r\n  padding: 0px 4px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledUl = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  flex-shrink: 1;\r\n  width: 100%;\r\n  height: 40px;\r\n  list-style: none;\r\n  cursor: pointer;\r\n  padding: 4px 0px;\r\n`;\r\n\r\nconst StyledList = styled.li`\r\n  width: ${(props) => (props.lastEle ? \"auto\" : \"75px\")};\r\n  height: 100%;\r\n  text-align: center;\r\n  background-color: ${(props) => (props.lastEle ? \"none\" : \"#76CE8E\")};\r\n  border-radius: 4px;\r\n  transition: 0.1s linear;\r\n  margin-right: 4px;\r\n  margin-left: ${(props) => (props.lastEle ? \"auto\" : \"initial\")};\r\n  padding: ${(props) => (props.lastEle ? \"initial\" : \"8px 0px\")};\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.lastEle ? \"none\" : \"#64b37a\")};\r\n  }\r\n`;\r\n\r\nconst Link = styled.a`\r\n  text-decoration: none;\r\n  font-size: 1.5rem;\r\n  color: #fff;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 120px;\r\n  height: 100%;\r\n  border-radius: 4px;\r\n  padding: 7.5px;\r\n  background-color: #79be8c;\r\n  font-size: 1.6rem;\r\n  color: #fff;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    background-color: #64b37a;\r\n  }\r\n\r\n  &::placeholder {\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst navigation = ({ themeToggle, themeOption }) => {\r\n  const themeFunction = () => {\r\n    themeToggle(!themeOption);\r\n  };\r\n  return (\r\n    <StyledNav className=\"nav\">\r\n      <StyledUl>\r\n        <StyledList className={\"list\"}>\r\n          <Link>Your List</Link>\r\n        </StyledList>\r\n        <StyledList className={\"list\"} onClick={themeFunction}>\r\n          <Link>Theme</Link>\r\n        </StyledList>\r\n        <StyledList className={\"list\"}>\r\n          <Link>Help</Link>\r\n        </StyledList>\r\n        <StyledList className={\"list\"} lastEle>\r\n          <StyledInput className={\"item\"} placeholder=\"Search...\" />\r\n        </StyledList>\r\n      </StyledUl>\r\n    </StyledNav>\r\n  );\r\n};\r\n\r\nexport default navigation;\r\n","const size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n  desktop: \"2560px\",\r\n};\r\n\r\nexport const device = {\r\n  mobileS: `(min-width: ${size.mobileS})`,\r\n  mobileM: `(min-width: ${size.mobileM})`,\r\n  mobileL: `(min-width: ${size.mobileL})`,\r\n  tablet: `(min-width: ${size.tablet})`,\r\n  laptop: `(min-width: ${size.laptop})`,\r\n  laptopL: `(min-width: ${size.laptopL})`,\r\n  desktop: `(min-width: ${size.desktop})`,\r\n  desktopL: `(min-width: ${size.desktop})`,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../mq\";\r\n\r\nconst StyledTaskSection = styled.section`\r\n  width: 275px;\r\n  background-color: #ebecf0;\r\n  border-radius: 4px;\r\n  padding: 10px 7.5px;\r\n  margin: 0 auto;\r\n  margin-bottom: 15px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n\r\n  @media ${device.laptop} {\r\n    margin-right: 15px;\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  flex-grow: 1;\r\n  background-color: #ebecf0;\r\n  padding: 5px 4px;\r\n  font-size: 1.4rem;\r\n  font-weight: 600;\r\n  color: #172b4d;\r\n  box-sizing: border-box;\r\n  margin-bottom: 5px;\r\n\r\n  &:focus {\r\n    background-color: white;\r\n    box-shadow: 0px 0px 2px 1px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 100%;\r\n  text-align: left;\r\n  margin-left: 5px;\r\n  padding: 7.5px 3px;\r\n  color: #779;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #dddfe5;\r\n  }\r\n`;\r\n\r\nconst StyledAddButton = styled.button`\r\n  background-color: #5aac44;\r\n  border-radius: 5px;\r\n  color: white;\r\n  padding: 8px 20px;\r\n  margin: 5px 0px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #67ba50;\r\n  }\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 100%;\r\n  height: 50px;\r\n  border-radius: 5px;\r\n  padding: 7.5px;\r\n  resize: none;\r\n`;\r\n\r\nconst StyledSpan = styled.span`\r\n  margin-right: 5px;\r\n`;\r\n\r\nconst StyledSpanX = styled.span`\r\n  font-size: 2.3rem;\r\n  vertical-align: middle;\r\n  color: #666;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TaskStatus = ({\r\n  title,\r\n  addListFeature,\r\n  tasks,\r\n  addNewCard,\r\n  id,\r\n  taskEditCard,\r\n  clickListOption,\r\n}) => {\r\n  const [inputValue, setInputValue] = useState(title);\r\n\r\n  const [textArea, handletextArea] = useState(\"\");\r\n  const [toDoInput, handleToDoInput] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", hideAll);\r\n    refresh();\r\n  });\r\n\r\n  const refresh = () => {\r\n    setInputValue(title);\r\n    //Is it fine?\r\n  };\r\n\r\n  const hideAll = (e) => {\r\n    const searchingClass = e.target.className;\r\n    if (\r\n      searchingClass.includes(\"main\") ||\r\n      searchingClass.includes(\"input\") ||\r\n      searchingClass.includes(\"nav\")\r\n    ) {\r\n      handleToDoInput(false);\r\n      addListFeature(false);\r\n    }\r\n  };\r\n\r\n  const handleInputValue = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const nameNewCard = (e) => {\r\n    handleToDoInput(!toDoInput);\r\n  };\r\n\r\n  const textAreaFeature = (e) => {\r\n    handletextArea(e.target.value);\r\n  };\r\n\r\n  const handleEscapeButton = () => {\r\n    handleToDoInput(!toDoInput);\r\n    handletextArea(\"\");\r\n  };\r\n\r\n  return (\r\n    <StyledTaskSection className=\"listCard\">\r\n      <StyledInput\r\n        onChange={(e) => handleInputValue(e)}\r\n        className=\"inputs\"\r\n        value={inputValue}\r\n      />\r\n      <span\r\n        className=\"fas fa-ellipsis-h\"\r\n        onClick={() => clickListOption(id)}\r\n      ></span>\r\n      {tasks.map((task) => (\r\n        <div key={task} className=\"card\">\r\n          {task}\r\n          <span\r\n            className=\"fas fa-highlighter\"\r\n            onClick={() => taskEditCard(id, task)}\r\n          ></span>\r\n        </div>\r\n      ))}\r\n      {toDoInput ? (\r\n        <StyledTextArea\r\n          placeholder=\"Enter title for this card...\"\r\n          value={textArea}\r\n          onChange={(e) => textAreaFeature(e)}\r\n        />\r\n      ) : null}\r\n      {toDoInput ? (\r\n        <>\r\n          <StyledAddButton\r\n            onClick={() =>\r\n              addNewCard(textArea, id, handleToDoInput, handletextArea)\r\n            }\r\n          >\r\n            Add Card\r\n          </StyledAddButton>\r\n          <StyledSpanX className=\"fas fa-times\" onClick={handleEscapeButton} />\r\n        </>\r\n      ) : (\r\n        <StyledButton onClick={(e) => nameNewCard(e)}>\r\n          <StyledSpan className=\"fas fa-plus\" />\r\n          Add another card\r\n        </StyledButton>\r\n      )}\r\n    </StyledTaskSection>\r\n  );\r\n};\r\n\r\nexport default TaskStatus;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TaskStatus from \"../TaskStatus/taskStatus\";\r\nimport { device } from \"../mq\";\r\n\r\nconst StyledMain = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  width: 100vw;\r\n  min-height: calc(100vh - 40px);\r\n  background-color: #4bbf6b;\r\n  padding: 40px 15px 0px 15px;\r\n\r\n  @media ${device.laptop} {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nconst StyledWrapDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 275px;\r\n  height: auto;\r\n  background-color: ${(props) => (props.bgc ? \"#ebecf0\" : \"#79be8c\")};\r\n  margin: 0 auto;\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  transition: 0.1s linear;\r\n\r\n  @media ${device.laptop} {\r\n    margin: 0 auto 0 0;\r\n  }\r\n`;\r\n\r\nconst StyledListInput = styled.input`\r\n  width: 265px;\r\n  background-color: #79be8c;\r\n  border-radius: 4px;\r\n  padding: 12px 7.5px;\r\n  text-align: left;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n\r\n  &::placeholder {\r\n    color: white;\r\n  }\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    ::placeholder {\r\n      color: black;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  width: 50%;\r\n  background-color: #5aac44;\r\n  border-radius: 5px;\r\n  color: white;\r\n  padding: 8px 20px;\r\n  margin: 5px 0px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #67ba50;\r\n  }\r\n`;\r\n\r\nconst StyledListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  @media ${device.laptop} {\r\n    flex-direction: row;\r\n    margin: 0 0 0 0 !important;\r\n  }\r\n`;\r\n\r\n// COMPONENT //\r\n\r\nconst MainField = () => {\r\n  const [addList, showAddList] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const [newListItem, setAllList] = useState([\r\n    {\r\n      title: \"To Do\",\r\n      id: 0,\r\n      tasks: [],\r\n      activeInput: false,\r\n    },\r\n    {\r\n      title: \"In Progress\",\r\n      id: 1,\r\n      tasks: [],\r\n      activeInput: false,\r\n    },\r\n    {\r\n      title: \"Finished\",\r\n      id: 2,\r\n      tasks: [],\r\n      activeInput: false,\r\n    },\r\n  ]);\r\n\r\n  const showAddListHandle = () => {\r\n    showAddList(true);\r\n  };\r\n\r\n  const addNewList = () => {\r\n    showAddList(false);\r\n    setInputValue(\"\");\r\n    if (inputValue === \"\") return;\r\n    setAllList([\r\n      ...newListItem,\r\n      {\r\n        title: inputValue,\r\n        id: newListItem.length,\r\n        tasks: [],\r\n        activeInput: false,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleInputValue = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const addNewCard = (newTask, id, closeAddInput, clearTextArea) => {\r\n    if (newTask === \"\") return closeAddInput(false);\r\n    if (newListItem[id].tasks.includes(newTask)) {\r\n      const returnCloseFunc = closeAddInput(false);\r\n      const returnClearFunc = clearTextArea(\"\");\r\n      return returnCloseFunc && returnClearFunc;\r\n    }\r\n\r\n    const copyListItem = newListItem.filter((list) => list.id === id);\r\n    copyListItem[0].tasks.push(newTask);\r\n    closeAddInput(false);\r\n    clearTextArea(\"\");\r\n  };\r\n\r\n  const taskEditCard = (id, currentTask) => {\r\n    const copyListForDelete = newListItem.filter((list) => list.id === id);\r\n    const tasksAfterDelete = copyListForDelete[0].tasks.filter(\r\n      (task) => task !== currentTask\r\n    );\r\n\r\n    const copyStayElement = newListItem.filter((list) => list.id !== id);\r\n    const newList = {\r\n      title: newListItem[id].title,\r\n      id: id,\r\n      tasks: tasksAfterDelete,\r\n      activeInput: false,\r\n    };\r\n\r\n    copyStayElement.push(newList);\r\n    copyStayElement.sort(function (a, b) {\r\n      return a.id - b.id;\r\n    });\r\n\r\n    setAllList(copyStayElement);\r\n  };\r\n\r\n  const clickListOption = (id) => {\r\n    const listItemCopy = newListItem;\r\n    const listItemAfterDelete = listItemCopy.filter((list) => list.id !== id);\r\n    for (let i = 0; i < listItemAfterDelete.length; i++) {\r\n      listItemAfterDelete[i].id = i;\r\n    }\r\n\r\n    listItemAfterDelete.sort(function (a, b) {\r\n      return a.id - b.id;\r\n    });\r\n\r\n    setAllList(listItemAfterDelete);\r\n  };\r\n\r\n  return (\r\n    <StyledMain className=\"main\">\r\n      <StyledListContainer style={{ margin: \"0 auto\" }}>\r\n        {newListItem.map((list) => (\r\n          <TaskStatus\r\n            key={list.id}\r\n            title={list.title}\r\n            tasks={list.tasks}\r\n            addListFeature={showAddList}\r\n            addNewCard={addNewCard}\r\n            id={list.id}\r\n            taskEditCard={taskEditCard}\r\n            list={list}\r\n            clickListOption={clickListOption}\r\n          />\r\n        ))}\r\n      </StyledListContainer>\r\n      <StyledWrapDiv bgc={addList ? true : false} className={\"item\"}>\r\n        <StyledListInput\r\n          onClick={showAddListHandle}\r\n          onChange={(e) => handleInputValue(e)}\r\n          value={inputValue}\r\n          placeholder=\"+ Add another list\"\r\n          className={\"item\"}\r\n        />\r\n        {addList ? (\r\n          <StyledButton onClick={addNewList}>Enter title of list</StyledButton>\r\n        ) : null}\r\n      </StyledWrapDiv>\r\n    </StyledMain>\r\n  );\r\n};\r\n\r\nexport default MainField;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../mq\";\r\n\r\nconst StyledThemeDiv = styled.div`\r\n  position: fixed;\r\n  bottom: 0;\r\n  right: calc(50% - (375px / 2));\r\n  width: 375px;\r\n  transform: ${(props) =>\r\n    props.showTheme ? \"translateX(0px)\" : \"translateX(100vw)\"};\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  background-color: #f4f5f7;\r\n  padding: 10px;\r\n  transition: 0.3s linear;\r\n\r\n  @media ${device.laptop} {\r\n    top: calc(0% + 40px);\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 375px;\r\n    align-content: flex-start;\r\n  }\r\n`;\r\n\r\nconst StyledColorDiv = styled.div`\r\n  width: 75px;\r\n  height: 75px;\r\n  border-radius: 5px;\r\n  margin-right: 5px;\r\n  margin-left: 5px;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    opacity: 0.75;\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    width: 45%;\r\n    height: 85px;\r\n  }\r\n`;\r\n\r\nconst StyledThemeDivTitle = styled.h3`\r\n  width: 100%;\r\n  padding: 10px 0px;\r\n  text-align: center;\r\n  font-size: 2rem;\r\n`;\r\n\r\nfunction themeField({ themeOption }) {\r\n  const changeColor = (mainColor, navColor, listColor, inputColor) => {\r\n    const main = document.querySelector(\".main\");\r\n    main.style.backgroundColor = mainColor;\r\n\r\n    const nav = document.querySelector(\".nav\");\r\n    nav.style.backgroundColor = navColor;\r\n\r\n    const lists = document.querySelectorAll(\".list\");\r\n    lists.forEach((list) => {\r\n      list.style.backgroundColor = listColor;\r\n    });\r\n\r\n    const inputs = document.querySelectorAll(\".item\");\r\n    inputs.forEach((input) => {\r\n      input.style.backgroundColor = inputColor;\r\n    });\r\n  };\r\n  return (\r\n    <StyledThemeDiv showTheme={themeOption}>\r\n      <StyledThemeDivTitle>Colors</StyledThemeDivTitle>\r\n      <StyledColorDiv\r\n        onClick={() => changeColor(\"#0079BF\", \"#0067A3\", \"#3D99CE\", \"#4D95BE\")}\r\n        style={{ backgroundColor: \"#0079BF\" }}\r\n      />\r\n      <StyledColorDiv\r\n        onClick={() => changeColor(\"#D29034\", \"#B37B2C\", \"#DDAB65\", \"#C9A26C\")}\r\n        style={{ backgroundColor: \"#D29034\" }}\r\n      />\r\n      <StyledColorDiv\r\n        onClick={() => changeColor(\"#519839\", \"#458131\", \"#7BB168\", \"#7DA76F\")}\r\n        style={{ backgroundColor: \"#519839\" }}\r\n      />\r\n      <StyledColorDiv\r\n        onClick={() => changeColor(\"#B04632\", \"#963C2B\", \"#C37263\", \"#B5766B\")}\r\n        style={{ backgroundColor: \"#B04632\" }}\r\n      />\r\n      <StyledColorDiv\r\n        onClick={() => changeColor(\"#89609E\", \"#755286\", \"#A586B5\", \"#9E86AB\")}\r\n        style={{ backgroundColor: \"#89609E\" }}\r\n      />\r\n      <StyledColorDiv\r\n        onClick={() => changeColor(\"#CD5A91\", \"#AE4D7B\", \"#D981AB\", \"#C682A3\")}\r\n        style={{ backgroundColor: \"#CD5A91\" }}\r\n      />\r\n      <StyledColorDiv\r\n        onClick={() => changeColor(\"#4BBF6B\", \"#40A35B\", \"#76CE8E\", \"#79BE8C\")}\r\n        style={{ backgroundColor: \"#4BBF6B\" }}\r\n      />\r\n      <StyledColorDiv\r\n        onClick={() => changeColor(\"#00AECC\", \"#0094AE\", \"#3DC1D8\", \"#4DB4C6\")}\r\n        style={{ backgroundColor: \"#00AECC\" }}\r\n      />\r\n      <StyledColorDiv\r\n        onClick={() => changeColor(\"#838C91\", \"#6F777B\", \"#A1A8AB\", \"#9BA0A3\")}\r\n        style={{ backgroundColor: \"#838C91\" }}\r\n      />\r\n    </StyledThemeDiv>\r\n  );\r\n}\r\n\r\nexport default themeField;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Navigation from \"./Navigation/navigation\";\r\nimport MainField from \"./Main/mainField\";\r\nimport ThemeField from \"./ThemeField/themeField\";\r\n\r\nconst Main = () => {\r\n  const [showThemeOption, showThemeOptionFunction] = useState(false);\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", hideTheme);\r\n  });\r\n\r\n  const hideTheme = (e) => {\r\n    const searchingClass = e.target.className;\r\n    if (\r\n      searchingClass.includes(\"main\") ||\r\n      searchingClass.includes(\"input\") ||\r\n      searchingClass.includes(\"item\")\r\n    ) {\r\n      showThemeOptionFunction(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <Navigation\r\n        themeToggle={showThemeOptionFunction}\r\n        themeOption={showThemeOption}\r\n      />\r\n      <ThemeField themeOption={showThemeOption} />\r\n      <MainField />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin:0;\r\n    padding:0;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    box-sizing:border-box;\r\n    border:none;\r\n    outline:none;\r\n  }\r\n\r\n  html{\r\n    font-size:10px;\r\n  }\r\n\r\n  body{\r\n    min-width:350px;\r\n  }\r\n\r\n  .card{\r\n  display:flex;\r\n  justify-content:space-between;\r\n  width: 100%;\r\n  word-break: break-all;\r\n  margin: 10px 0px;\r\n  padding: 9px 7.5px;\r\n  font-size: 1.4rem;\r\n  box-shadow: 0px 1px 0.5px 0.5px #bbb;\r\n  background-color: #fff;\r\n  border-radius:3px;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  color:black;\r\n\r\n  &:hover {\r\n    background-color: #ebecf0;\r\n  }\r\n\r\n  &:hover > *{\r\n  color:#777;\r\n  }\r\n  }\r\n\r\n  .fa-highlighter{\r\n    color:#fff;\r\n    align-self:center;\r\n    margin-left:2px;\r\n  }\r\n  \r\n  .fa-ellipsis-h{\r\n   padding: 9px ;\r\n   margin-left:2px;\r\n   margin-bottom: 5px;\r\n   font-size: 13px;\r\n   color: #777;\r\n   cursor: pointer;\r\n\r\n   &:hover{\r\n    background-color: #dddfe5;\r\n   }\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\nimport Main from \"./main\";\nimport GlobalStyle from \"./GlobalStyle/globalStyle\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}