{"version":3,"sources":["components/Navigation/NavListView/NavListView.js","components/Navigation/NavigationView.js","Containers/Naviagtion/Navigations.js","components/Card/Card.js","components/List/ListButtons/ListButtons.js","components/List/ListInput/ListInput.js","components/List/ListView.js","Containers/List/List.js","components/CoreField/CoreFieldView.js","Containers/CoreField/CoreField.js","Style/MediaQuery/mq.js","components/ThemeField/ThemeFieldView.js","Containers/ThemeField/ThemeField.js","components/OptionCover/OptionCoverListView/OptionCoverListView.js","components/Labels/LabelView/LabelsNameColors.js","components/Labels/LabelView/LabelsChooseColors.js","components/Labels/LabelsView.js","Containers/Labels/Labels.js","components/OptionCover/OptionCoverView.js","Containers/OptionCover/OptionCover.js","components/DetailCover/DetailElements/DetailInputElement.js","components/DetailCover/DetailElements/DetailSuggestedElement.js","components/DetailCover/DetailTools/DetailCoverNav/DetailCoverNav.js","components/DetailCover/DetailTools/DetailCoverMarks/DetailCoverMarks.js","components/DetailCover/DetailTools/DetailTools.js","components/DetailCover/DetailCoverView/DetailCoverView.js","Containers/DetailCover/DetailCover.js","Containers/Main/main.js","Style/GlobalStyle/globalStyle.js","components/App.js","serviceWorker.js","index.js"],"names":["StyledList","styled","li","props","lastEle","Link","a","NavListView","elementHoverEnter","elementHoverLeave","themeFunction","linkTitle","className","onMouseEnter","e","onMouseLeave","onClick","StyledNav","nav","StyledUl","ul","StyledInput","input","navigationElements","Navigation","map","element","key","placeholder","Navigations","themeToggle","themeOption","this","NavigationView","Component","Card","state","selected","scrollHeight","mouseDownFeature","target","classList","setState","style","zIndex","mouseUpFeature","cursor","position","transform","scrollPosition","wholeList","addNewCardFeature","deleteCardFeatureByMove","listId","scrollHeighFromMain","Math","floor","taskId","getAttribute","document","querySelectorAll","forEach","ele","width","pageX","id","mouseLeaveFeature","textContent","i","length","isDragAndDropTrue","clearAllBlankSpan","mouseMoveFeature","left","clientX","top","clientY","allBlankSpan","all","height","backgroundColor","borderRadius","task","inputTitle","taskDetailsFunction","visibilityOptionFunction","onDoubleClick","onMouseDown","onMouseUp","onMouseMove","badges","color","labelId","name","taskName","StyledAddButton","button","StyledSpanX","span","ListButtons","showAddField","textAreaValue","swapAddFieldFeature","StyledInputCover","div","ListInput","selectedList","listOption","setListTitle","onChange","value","StyledTextArea","textarea","showStyle","ListView","tasks","setTextAreaValue","List","hideAll","searchingClass","includes","showListHandle","setListInput","updateListTitle","buttonId","addNewCard","addNewCardFeatureByKey","which","preventDefault","deleteCard","boxShadow","display","marginRight","draggedListIndex","findIndex","list","moveListToAnotherPlace","addEventListener","main","querySelector","mainWidth","offsetWidth","scroll","behavior","title","removeEventListener","StyledMain","StyledListInput","StyledWrapList","StyledButton","StyledWrapAddListBtn","bgc","CoreFieldView","mousePositionX","showList","showAddListHandle","listInputHandle","listInputValue","addNewList","addNewListByKey","onScroll","onKeyPress","MainField","useState","updatedScrollPosition","isDragDropTrue","isDragDropTrueFeature","scrollLeft","isTrue","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","StyledColorDiv","StyledThemeDivTitle","h3","StyledThemeDiv","showTheme","ThemeFieldView","changeColor","blockOfColors","block","mainColor","navColor","listColor","inputColor","ThemeField","setWhichColor","StyledListBlock","StyledIcon","OptionCoverListView","handleLabelsVisibility","addPriorityForCards","optionCoverData","clickedCard","clickedCardId","StyledBack","StyledNameLabels","detailCover","StyledLabelTitle","h2","StyledLabelInput","marginTop","StyledName","StyledWrapColors","StyledColorSquar","StyledX","LabelsNameColors","nameLabelVisibility","filteredColors","StyledLabels","StyledLabelWrapEle","StyledLabelElement","StyledBtn","StyledIconCheck","LabelsChooseColors","toggleLabelColorToCard","generateCheckIcon","searchLabelColor","searchInputLabel","useEffect","LabelsView","labelVisibility","Labels","labelColors","colorName","toggle","matchedBadges","listOfAllBadges","filter","currentCheckIcon","getElementById","substr","addLabelColor","toUpperCase","StyledCover","StyledOptionBox","StyledSaveButton","StyledWrapLabels","StyledWrapTextAndLabels","OptionCover","taskTitleFeature","taskTitle","updateCard","labelsVisibility","matchedColorsToThisCard","setOptionCoverPostion","taskData","mainOffsetTop","offsetTop","coverBox","coverBoxHeight","offsetHeight","listIndex","positionY","positionX","OptionCoverView","StyledTaskName","Detail_Input","idUpdatedList","StyledLightText","StyledStrongText","strong","StyledChangeListDetails","StyledReplaceTitle","alignCenter","border","biggerMargin","StyledSuggestList","DetailSuggestedElement","changeListInDetails","taskTitleList","visibilityChangeListInDetails","moveCardToAnotherList","StyledDetailNav","StyledDetailUl","StyledDetailList","first","DetailCoverNav","StyledDetailMarks","StyledDetailDescription","StyledTitle","StyledLabelsWrap","DetailCoverMarks","StyledDetailToolsWrap","DetailTools","StyledDetail","DetailCoverView","DetailInputElement","DetailCover","React","Main","showThemeOption","showThemeOptionFunction","numberOfTask","numberOfTaskFunction","whichColor","visibilityOptionsCover","setVisibilityOptionCover","setOptionCoverData","visibilityTaskDetails","setVisibilityTaskDetails","setTaskTitleList","setTaskName","setTaskId","setIdUpdatedList","setChangeListInDetails","setLabelsVisibility","labelsVisibilityDetailsComp","setLabelsVisibilityDetailsComp","setToggle","listOfAllTasksId","setListOfAllTasksId","hideTheme","activeList","setWholeList","newTask","correctList","theBiggestId","max","push","currentList","comment","priority","date","cover","byButton","taskIndex","indexOfBadgedToDelete","splice","matchedIdList","arrayClassList","item","currentLiColor","Color","lighten","nameUpdatedTask","nameUpdatedList","cardId","updatedTitle","index","alreadyExistedBadges","matchedBages","createLabelsElement","indexToDelete","remove","currentTask","newLabel","createElement","add","setAttribute","children","appendChild","CoreField","filterWholeList","biggerThanLast","theBiggest","activeInput","parentNode","offsetLeft","clickedCardWrapLabel","newTitle","addToThisIndex","copy","splicedElement","blank","clickedListId","deleteFromList","addToList","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.452ddddc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledList = styled.li`\r\n  width: ${(props) => (props.lastEle ? \"auto\" : \"75px\")};\r\n  height: 100%;\r\n  text-align: center;\r\n  background-color: #76ce8e;\r\n  border-radius: 4px;\r\n  transition: 0.1s linear;\r\n  margin-right: 4px;\r\n  margin-left: ${(props) => (props.lastEle ? \"auto\" : \"initial\")};\r\n  padding: ${(props) => (props.lastEle ? \"initial\" : \"8px 0px\")};\r\n`;\r\n\r\nconst Link = styled.a`\r\n  text-decoration: none;\r\n  font-size: 1.5rem;\r\n  color: #fff;\r\n`;\r\n\r\nfunction NavListView({\r\n  elementHoverEnter,\r\n  elementHoverLeave,\r\n  themeFunction,\r\n  linkTitle,\r\n}) {\r\n  return (\r\n    <StyledList\r\n      className=\"list\"\r\n      onMouseEnter={(e) => elementHoverEnter(e)}\r\n      onMouseLeave={(e) => elementHoverLeave(e)}\r\n      onClick={themeFunction}\r\n    >\r\n      <Link>{linkTitle}</Link>\r\n    </StyledList>\r\n  );\r\n}\r\n\r\nexport default NavListView;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NavListView from \"./NavListView/NavListView\";\r\n\r\nconst StyledNav = styled.nav`\r\n  width: 100vw;\r\n  height: 40px;\r\n  background-color: #40a35b;\r\n  padding: 0px 4px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledUl = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  flex-shrink: 1;\r\n  width: 100%;\r\n  height: 40px;\r\n  list-style: none;\r\n  cursor: pointer;\r\n  padding: 4px 0px;\r\n`;\r\n\r\nconst StyledList = styled.li`\r\n  width: ${(props) => (props.lastEle ? \"auto\" : \"75px\")};\r\n  height: 100%;\r\n  text-align: center;\r\n  background-color: #76ce8e;\r\n  border-radius: 4px;\r\n  transition: 0.1s linear;\r\n  margin-right: 4px;\r\n  margin-left: ${(props) => (props.lastEle ? \"auto\" : \"initial\")};\r\n  padding: ${(props) => (props.lastEle ? \"initial\" : \"8px 0px\")};\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 120px;\r\n  height: 100%;\r\n  border-radius: 4px;\r\n  padding: 7.5px;\r\n  background-color: #79be8c;\r\n  font-size: 1.6rem;\r\n  color: #fff;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    background-color: #64b37a;\r\n  }\r\n\r\n  &::placeholder {\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst navigationElements = [\"Your list\", \"Theme\", \"Help\"];\r\n\r\nconst Navigation = ({\r\n  elementHoverEnter,\r\n  elementHoverLeave,\r\n  themeFunction,\r\n}) => {\r\n  return (\r\n    <StyledNav className=\"nav\">\r\n      <StyledUl>\r\n        {navigationElements.map((element) => (\r\n          <NavListView\r\n            themeFunction={element === \"Theme\" ? themeFunction : null}\r\n            elementHoverEnter={(e) => elementHoverEnter(e)}\r\n            elementHoverLeave={(e) => elementHoverLeave(e)}\r\n            linkTitle={element}\r\n            key={element}\r\n          />\r\n        ))}\r\n        <StyledList lastEle>\r\n          <StyledInput className=\"item\" placeholder=\"Search...\" />\r\n        </StyledList>\r\n      </StyledUl>\r\n    </StyledNav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport NavigationView from \"../../components/Navigation/NavigationView\";\r\n\r\nclass Navigations extends Component {\r\n  themeFunction = () => {\r\n    this.props.themeToggle(!this.props.themeOption);\r\n  };\r\n\r\n  render() {\r\n    const { elementHoverEnter, elementHoverLeave } = this.props;\r\n    return (\r\n      <>\r\n        <NavigationView\r\n          elementHoverEnter={elementHoverEnter}\r\n          elementHoverLeave={elementHoverLeave}\r\n          themeFunction={this.themeFunction}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigations;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Card extends Component {\r\n  state = {\r\n    selected: false,\r\n    scrollHeight: 0,\r\n  };\r\n\r\n  mouseDownFeature = (e) => {\r\n    if (e.target.classList[0] !== \"card\") return;\r\n    this.setState({\r\n      selected: true,\r\n    });\r\n    e.target.style.zIndex = 999;\r\n  };\r\n\r\n  mouseUpFeature = (e) => {\r\n    if (e.target.classList[0] !== \"card\") return;\r\n\r\n    e.target.style.cursor = \"pointer\";\r\n    e.target.style.position = \"static\";\r\n    e.target.style.transform = \"rotate(0deg)\";\r\n    e.target.style.zIndex = 0;\r\n\r\n    const {\r\n      scrollPosition,\r\n      wholeList,\r\n      addNewCardFeature,\r\n      deleteCardFeatureByMove,\r\n      listId,\r\n    } = this.props;\r\n\r\n    const scrollHeighFromMain = Math.floor(scrollPosition);\r\n    const taskId = e.target.getAttribute(\"id\");\r\n\r\n    const wrapLabels = document.querySelectorAll(\".card_wrapLabel\");\r\n    wrapLabels.forEach((ele) => {\r\n      ele.style.width = \"100%\";\r\n    });\r\n\r\n    if (e.pageX < 285 - scrollHeighFromMain) {\r\n      if (wholeList[0].id === listId) return this.mouseLeaveFeature(e); //When put card in this same place\r\n      deleteCardFeatureByMove(listId, taskId);\r\n      addNewCardFeature(wholeList[0].id, e.target.textContent, taskId);\r\n    }\r\n\r\n    for (let i = 1; i <= 10; i++) {\r\n      if (\r\n        e.pageX > 285 * i - scrollHeighFromMain &&\r\n        e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n        wholeList.length >= i + 1\r\n      ) {\r\n        if (wholeList[i].id === listId) return this.mouseLeaveFeature(e);\r\n        deleteCardFeatureByMove(listId, taskId);\r\n        addNewCardFeature(wholeList[i].id, e.target.textContent, taskId);\r\n      }\r\n    }\r\n\r\n    this.props.isDragAndDropTrue(false);\r\n    this.props.clearAllBlankSpan();\r\n\r\n    this.setState({\r\n      selected: false,\r\n    });\r\n  };\r\n\r\n  mouseMoveFeature = (e) => {\r\n    const scrollHeighFromMain = Math.floor(this.props.scrollPosition);\r\n    if (this.state.selected && e.target.classList[0] === \"card\") {\r\n      e.target.style.left = `${e.clientX - 130}px`;\r\n      e.target.style.top = `${e.clientY - 27.5}px`;\r\n      e.target.style.position = \"fixed\";\r\n      e.target.style.cursor = \"grabbing\";\r\n      e.target.style.transform = \"rotate(5deg)\";\r\n      e.target.style.zIndex = 999;\r\n\r\n      const wrapLabels = document.querySelectorAll(\".card_wrapLabel\");\r\n      wrapLabels.forEach((ele) => {\r\n        ele.style.width = \"25%\";\r\n      });\r\n\r\n      const allBlankSpan = document.querySelectorAll(\".blank\");\r\n      allBlankSpan.forEach((all) => {\r\n        all.style.width = \"0\";\r\n        all.style.height = \"0\";\r\n        all.style.backgroundColor = \"transparent\";\r\n      });\r\n\r\n      for (let i = 1; i < 10; i++) {\r\n        if (e.pageX < 285 - scrollHeighFromMain) {\r\n          allBlankSpan[0].style.width = \"100%\";\r\n          allBlankSpan[0].style.height = \"35px\";\r\n          allBlankSpan[0].style.backgroundColor = \"#dddfe5\";\r\n          allBlankSpan[0].style.borderRadius = \"5px\";\r\n        } else if (\r\n          e.pageX > 285 * i - scrollHeighFromMain &&\r\n          e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n          this.props.wholeList.length >= i + 1\r\n        ) {\r\n          allBlankSpan[i].style.width = \"100%\";\r\n          allBlankSpan[i].style.height = \"35px\";\r\n          allBlankSpan[i].style.backgroundColor = \"#dddfe5\";\r\n          allBlankSpan[i].style.borderRadius = \"5px\";\r\n        }\r\n      }\r\n    }\r\n\r\n    this.props.isDragAndDropTrue(true);\r\n  };\r\n\r\n  mouseLeaveFeature = (e) => {\r\n    e.target.style.cursor = \"pointer\";\r\n    e.target.style.position = \"static\";\r\n    e.target.style.transform = \"rotate(0deg)\";\r\n    e.target.style.zIndex = 0;\r\n    this.props.clearAllBlankSpan();\r\n    this.props.isDragAndDropTrue(false);\r\n    this.setState({\r\n      selected: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      task,\r\n      inputTitle,\r\n      listId,\r\n      taskDetailsFunction,\r\n      visibilityOptionFunction,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div\r\n        id={task.id}\r\n        className=\"card\"\r\n        onDoubleClick={(e) =>\r\n          taskDetailsFunction(e.target.textContent, inputTitle, listId, task.id)\r\n        }\r\n        onMouseDown={(e) => this.mouseDownFeature(e)}\r\n        onMouseUp={(e) => this.mouseUpFeature(e)}\r\n        onMouseMove={(e) => this.mouseMoveFeature(e)}\r\n        onMouseLeave={(e) => this.mouseLeaveFeature(e)}\r\n      >\r\n        <div className=\"card_wrapLabel\">\r\n          {task.badges.map((ele) => (\r\n            <div\r\n              key={ele.color}\r\n              id={ele.labelId}\r\n              className=\"labelElement\"\r\n              style={{ backgroundColor: ele.color }}\r\n            >\r\n              {ele.name}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {task.taskName}\r\n        <span\r\n          className=\"fas fa-highlighter\"\r\n          onClick={(e) =>\r\n            visibilityOptionFunction(e, true, task, listId, task.id)\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledAddButton = styled.button`\r\n  background-color: #5aac44;\r\n  border-radius: 5px;\r\n  color: white;\r\n  padding: 8px 20px;\r\n  margin: 5px 0px;\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #67ba50;\r\n  }\r\n`;\r\n\r\nconst StyledSpanX = styled.span`\r\n  font-size: 2.3rem;\r\n  vertical-align: middle;\r\n  color: #666;\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction ListButtons({\r\n  showAddField,\r\n  id,\r\n  textAreaValue,\r\n  addNewCardFeature,\r\n  swapAddFieldFeature,\r\n}) {\r\n  return (\r\n    <>\r\n      {showAddField ? (\r\n        <>\r\n          <StyledAddButton onClick={() => addNewCardFeature(id, textAreaValue)}>\r\n            Add Card\r\n          </StyledAddButton>\r\n          <StyledSpanX\r\n            className=\"fas fa-times\"\r\n            onClick={() => swapAddFieldFeature(\"SpanX\")}\r\n          />\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListButtons;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledInput = styled.input`\r\n  width: 220px;\r\n  background-color: #ebecf0;\r\n  border-radius: 1px;\r\n  padding: 5px 4px;\r\n  font-size: 1.4rem;\r\n  font-weight: 600;\r\n  color: #172b4d;\r\n\r\n  &:focus {\r\n    background-color: white;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledInputCover = styled.div`\r\n  display: inline-block;\r\n  width: 220px;\r\n  background-color: #ebecf0;\r\n  border-radius: 1px;\r\n  padding: 5px 4px;\r\n  font-size: 1.4rem;\r\n  font-weight: 600;\r\n  color: #172b4d;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nfunction ListInput({ selectedList, id, inputTitle, listOption, setListTitle }) {\r\n  return (\r\n    <>\r\n      {selectedList ? (\r\n        <StyledInputCover\r\n          onChange={(e) => setListTitle(e, id)}\r\n          className=\"input\"\r\n        >\r\n          {inputTitle}\r\n        </StyledInputCover>\r\n      ) : (\r\n        <StyledInput\r\n          value={inputTitle}\r\n          onChange={(e) => setListTitle(e, id)}\r\n          className=\"input\"\r\n        />\r\n      )}\r\n      <span className=\"fas fa-ellipsis-h\" onClick={() => listOption(id)} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ListInput;\r\n","import React from \"react\";\r\nimport Card from \"../../components/Card/Card\";\r\nimport ListButtons from \"./ListButtons/ListButtons\";\r\nimport ListInput from \"./ListInput/ListInput\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 100%;\r\n  height: ${(props) => (props.showStyle ? \"60px\" : \"31px\")};\r\n  background-color: ${(props) => (props.showStyle ? \"#fff\" : \"#ebecf0\")};\r\n  border-radius: 5px;\r\n  padding: 7.5px;\r\n  color: #779;\r\n  resize: none;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  box-shadow: ${(props) =>\r\n    props.showStyle ? \"0px 0.5px 0px 0.5px #aaa\" : \"none\"};\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.showStyle ? null : \"#dddfe5\")};\r\n  }\r\n`;\r\n\r\nfunction ListView({\r\n  mouseDownFeature,\r\n  mouseMoveFeature,\r\n  mouseUpFeature,\r\n  mouseLeaveFeature,\r\n  selectedList,\r\n  listOption,\r\n  wholeList,\r\n  id,\r\n  tasks,\r\n  scrollPosition,\r\n  isDragAndDropTrue,\r\n  visibilityOptionFunction,\r\n  taskDetailsFunction,\r\n  inputTitle,\r\n  clearAllBlankSpan,\r\n  showAddField,\r\n  textAreaValue,\r\n  setTextAreaValue,\r\n  swapAddFieldFeature,\r\n  setListTitle,\r\n  addNewCardFeature,\r\n  deleteCardFeatureByMove,\r\n}) {\r\n  return (\r\n    <div\r\n      className=\"lists\"\r\n      onMouseDown={(e) => mouseDownFeature(e)}\r\n      onMouseMove={(e) => mouseMoveFeature(e)}\r\n      onMouseUp={(e) => mouseUpFeature(e)}\r\n      onMouseLeave={(e) => mouseLeaveFeature(e)}\r\n    >\r\n      <ListInput\r\n        selectedList={selectedList}\r\n        id={id}\r\n        inputTitle={inputTitle}\r\n        listOption={listOption}\r\n        setListTitle={setListTitle}\r\n      />\r\n\r\n      {tasks.map((task) => (\r\n        <Card\r\n          wholeList={wholeList}\r\n          key={task.id}\r\n          task={task}\r\n          listId={id}\r\n          addNewCardFeature={addNewCardFeature}\r\n          deleteCardFeatureByMove={deleteCardFeatureByMove}\r\n          scrollPosition={scrollPosition}\r\n          isDragAndDropTrue={isDragAndDropTrue}\r\n          visibilityOptionFunction={visibilityOptionFunction}\r\n          taskDetailsFunction={taskDetailsFunction}\r\n          inputTitle={inputTitle}\r\n          clearAllBlankSpan={clearAllBlankSpan}\r\n        />\r\n      ))}\r\n      <div className=\"blank\" />\r\n      <StyledTextArea\r\n        value={showAddField ? textAreaValue : \"Add Another Card\"}\r\n        onChange={(e) => setTextAreaValue(e)}\r\n        onClick={() => swapAddFieldFeature(\"textArea\")}\r\n        showStyle={showAddField}\r\n      />\r\n      <ListButtons\r\n        showAddField={showAddField}\r\n        id={id}\r\n        textAreaValue={textAreaValue}\r\n        addNewCardFeature={addNewCardFeature}\r\n        swapAddFieldFeature={swapAddFieldFeature}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default ListView;\r\n","import React, { Component } from \"react\";\r\nimport ListView from \"../../components/List/ListView\";\r\n\r\nclass List extends Component {\r\n  state = {\r\n    inputTitle: \"\",\r\n    showAddField: false,\r\n    textAreaValue: \"\",\r\n    selectedList: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"click\", this.hideAll);\r\n    document.addEventListener(\"keypress\", (e) =>\r\n      this.addNewCardFeatureByKey(e, this.props.id, this.state.textAreaValue)\r\n    );\r\n    const main = document.querySelector(\".main\");\r\n    const mainWidth = main.offsetWidth;\r\n    main.scroll({\r\n      left: mainWidth + 285 * (this.props.wholeList.length + 1),\r\n      behavior: \"smooth\",\r\n    });\r\n\r\n    this.setState({\r\n      inputTitle: this.props.title,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"click\", this.hideAll);\r\n    document.removeEventListener(\"keypress\", (e) =>\r\n      this.addNewCardFeatureByKey(e, this.props.id, this.state.textAreaValue)\r\n    );\r\n  }\r\n\r\n  hideAll = (e) => {\r\n    const searchingClass = e.target.className;\r\n    if (\r\n      searchingClass.includes(\"main\") ||\r\n      searchingClass.includes(\"input\") ||\r\n      searchingClass.includes(\"nav\") ||\r\n      searchingClass.includes(\"wrapList\") ||\r\n      searchingClass.includes(\"singleListWrap\")\r\n    ) {\r\n      this.setState({\r\n        showAddField: false,\r\n      });\r\n      this.props.showListHandle(false);\r\n      this.props.setListInput(\"\");\r\n    }\r\n  };\r\n\r\n  setListTitle = (e, listId) => {\r\n    this.setState({\r\n      inputTitle: e.target.value,\r\n    });\r\n    this.props.updateListTitle(e.target.value, listId);\r\n  };\r\n\r\n  swapAddFieldFeature = (buttonId) => {\r\n    if (buttonId === \"textArea\") {\r\n      this.setState({\r\n        showAddField: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        showAddField: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  setTextAreaValue = (e) => {\r\n    this.setState({\r\n      textAreaValue: e.target.value,\r\n    });\r\n  };\r\n\r\n  addNewCardFeature = (listId, textAreaValue, taskId) => {\r\n    this.props.addNewCard(listId, textAreaValue, taskId);\r\n    this.setState({\r\n      showAddField: false,\r\n      textAreaValue: \"\",\r\n    });\r\n  };\r\n\r\n  addNewCardFeatureByKey = (e, listId, textAreaValue, taskId) => {\r\n    if (e.which === 13 && this.state.showAddField) {\r\n      e.preventDefault();\r\n      this.props.addNewCard(listId, textAreaValue, taskId);\r\n      this.setState({\r\n        textAreaValue: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteCardFeatureByMove = (listId, taskId) => {\r\n    this.props.deleteCard(listId, taskId);\r\n    this.setState({\r\n      textAreaValue: \"\",\r\n    });\r\n  };\r\n\r\n  mouseDownFeature = (e) => {\r\n    if (e.target.classList[0] !== \"lists\") return;\r\n    this.setState({\r\n      selectedList: true,\r\n    });\r\n    e.target.style.zIndex = 999;\r\n    e.target.style.cursor = \"grabbing\";\r\n    e.target.style.boxShadow = \"0px 0px 20px 0.5px rgba(0,0,0,0.1\";\r\n  };\r\n\r\n  mouseMoveFeature = (e) => {\r\n    const scrollHeighFromMain = Math.floor(this.props.scrollPosition);\r\n    if (this.state.selectedList && e.target.classList[0] === \"lists\") {\r\n      e.target.style.left = `${e.clientX - 135}px`;\r\n      e.target.style.top = `${e.clientY - 45}px`;\r\n      e.target.style.position = \"fixed\";\r\n      e.target.style.transform = \"rotate(5deg)\";\r\n\r\n      const allBlankSpan = document.querySelectorAll(\".frontBlankList\");\r\n      allBlankSpan.forEach((all) => {\r\n        all.style.display = \"none\";\r\n      });\r\n\r\n      for (let i = 1; i < 10; i++) {\r\n        if (e.pageX < 285 - scrollHeighFromMain) {\r\n          allBlankSpan[0].style.width = \"275px\";\r\n          allBlankSpan[0].style.height = \"10px\";\r\n          allBlankSpan[0].style.backgroundColor = \"rgba(0,0,0,0.15)\";\r\n          allBlankSpan[0].style.marginRight = \"10px\";\r\n          allBlankSpan[0].style.borderRadius = \"4px\";\r\n          allBlankSpan[0].style.display = \"initial\";\r\n          allBlankSpan[0].style.position = \"absolute\";\r\n          allBlankSpan[0].style.top = \"-17.5px\";\r\n        } else if (\r\n          e.pageX > 285 * i - scrollHeighFromMain &&\r\n          e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n          this.props.wholeList.length >= i + 1\r\n        ) {\r\n          allBlankSpan[i].style.width = \"275px\";\r\n          allBlankSpan[i].style.height = \"10px\";\r\n          allBlankSpan[i].style.backgroundColor = \"rgba(0,0,0,0.15)\";\r\n          allBlankSpan[i].style.marginRight = \"10px\";\r\n          allBlankSpan[i].style.borderRadius = \"4px\";\r\n          allBlankSpan[i].style.display = \"initial\";\r\n          allBlankSpan[i].style.position = \"absolute\";\r\n          allBlankSpan[i].style.top = \"-17.5px\";\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  mouseUpFeature = (e) => {\r\n    if (e.target.classList[0] !== \"lists\") return;\r\n    e.target.style.position = \"static\";\r\n    e.target.style.cursor = \"pointer\";\r\n    e.target.style.zIndex = null;\r\n    e.target.style.boxShadow = null;\r\n    e.target.style.transform = null;\r\n\r\n    const { scrollPosition, wholeList } = this.props;\r\n    const scrollHeighFromMain = Math.floor(scrollPosition);\r\n\r\n    const allBlankSpan = document.querySelectorAll(\".frontBlankList\");\r\n    allBlankSpan.forEach((all) => {\r\n      all.style.display = \"none\";\r\n    });\r\n\r\n    const draggedListIndex = this.props.wholeList.findIndex(\r\n      (list) => list.id === this.props.id\r\n    );\r\n\r\n    if (e.pageX < 285 - scrollHeighFromMain) {\r\n      this.props.moveListToAnotherPlace(draggedListIndex, 0);\r\n    }\r\n\r\n    for (let i = 1; i < 10; i++) {\r\n      if (\r\n        e.pageX > 285 * i - scrollHeighFromMain &&\r\n        e.pageX < 285 * i + 285 - scrollHeighFromMain &&\r\n        wholeList.length >= i + 1\r\n      ) {\r\n        this.props.moveListToAnotherPlace(draggedListIndex, i);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      selectedList: false,\r\n    });\r\n  };\r\n\r\n  mouseLeaveFeature = () => {\r\n    const list = document.querySelectorAll(\".lists\");\r\n    list.forEach((all) => {\r\n      all.style.position = \"static\";\r\n      all.style.cursor = \"pointer\";\r\n      all.style.boxShadow = null;\r\n      all.style.transform = null;\r\n      all.style.zIndex = null;\r\n    });\r\n\r\n    const allBlankSpan = document.querySelectorAll(\".frontBlankList\");\r\n    allBlankSpan.forEach((all) => {\r\n      all.style.display = \"none\";\r\n    });\r\n\r\n    this.setState({\r\n      selectedList: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      listOption,\r\n      id,\r\n      tasks,\r\n      wholeList,\r\n      scrollPosition,\r\n      isDragAndDropTrue,\r\n      visibilityOptionFunction,\r\n      taskDetailsFunction,\r\n      clearAllBlankSpan,\r\n    } = this.props;\r\n    const {\r\n      showAddField,\r\n      textAreaValue,\r\n      inputTitle,\r\n      selectedList,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"singleListWrap\">\r\n        <div className=\"frontBlankList\"></div>\r\n        <ListView\r\n          selectedList={selectedList}\r\n          listOption={listOption}\r\n          wholeList={wholeList}\r\n          id={id}\r\n          tasks={tasks}\r\n          scrollPosition={scrollPosition}\r\n          isDragAndDropTrue={isDragAndDropTrue}\r\n          visibilityOptionFunction={visibilityOptionFunction}\r\n          taskDetailsFunction={taskDetailsFunction}\r\n          inputTitle={inputTitle}\r\n          clearAllBlankSpan={clearAllBlankSpan}\r\n          showAddField={showAddField}\r\n          textAreaValue={textAreaValue}\r\n          mouseDownFeature={this.mouseDownFeature}\r\n          mouseMoveFeature={this.mouseMoveFeature}\r\n          mouseUpFeature={this.mouseUpFeature}\r\n          mouseLeaveFeature={this.mouseLeaveFeature}\r\n          setTextAreaValue={this.setTextAreaValue}\r\n          swapAddFieldFeature={this.swapAddFieldFeature}\r\n          setListTitle={this.setListTitle}\r\n          addNewCardFeature={this.addNewCardFeature}\r\n          deleteCardFeatureByMove={this.deleteCardFeatureByMove}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport List from \"../../Containers/List/List\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMain = styled.main`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  width: auto;\r\n  min-height: calc(100vh - 40px);\r\n  background-color: #4bbf6b;\r\n  padding: 40px 6px 0px 6px;\r\n  overflow-x: scroll;\r\n`;\r\n\r\nconst StyledListInput = styled.input`\r\n  width: 265px;\r\n  background-color: #76ce8e;\r\n  border-radius: 4px;\r\n  padding: 12px 7.5px;\r\n  text-align: left;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n  box-shadow: 0px 0px 1px 0px #888;\r\n  font-size: 15px;\r\n\r\n  &::placeholder {\r\n    color: white;\r\n  }\r\n\r\n  &:focus {\r\n    background-color: #fff !important;\r\n    ::placeholder {\r\n      color: black;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledWrapList = styled.div`\r\n  display: flex;\r\n  width: auto;\r\n  flex-direction: row;\r\n  height: auto;\r\n  background-color: transparent;\r\n  margin-bottom: 10px;\r\n  padding: 3px 5px;\r\n  border-radius: 5px;\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  align-self: flex-start;\r\n  width: 50%;\r\n  background-color: #5aac44;\r\n  border-radius: 5px;\r\n  color: white;\r\n  padding: 8px 20px;\r\n  margin-top: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #67ba50;\r\n  }\r\n`;\r\n\r\nconst StyledWrapAddListBtn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  align-self: flex-start;\r\n  width: 275px;\r\n  border-radius: 4px;\r\n  padding: 0px 5px 5px 5px;\r\n  padding-top: ${(props) => (props.bgc ? \"5px\" : \"0px\")};\r\n  background-color: ${(props) => (props.bgc ? \"#ebecf0\" : \"transparent\")};\r\n  transition: 0.1s linear;\r\n`;\r\n\r\nfunction CoreFieldView({\r\n  scroll,\r\n  mousePositionX,\r\n  wholeList,\r\n  listOption,\r\n  addNewCard,\r\n  deleteCard,\r\n  showListHandle,\r\n  setListInput,\r\n  scrollPosition,\r\n  isDragAndDropTrue,\r\n  visibilityOptionFunction,\r\n  taskDetailsFunction,\r\n  updateListTitle,\r\n  moveListToAnotherPlace,\r\n  clearAllBlankSpan,\r\n  showList,\r\n  showAddListHandle,\r\n  listInputHandle,\r\n  listInputValue,\r\n  addNewList,\r\n  addNewListByKey,\r\n  elementHoverEnter,\r\n  elementHoverLeave,\r\n}) {\r\n  return (\r\n    <StyledMain\r\n      className=\"main\"\r\n      onScroll={(e) => scroll(e)}\r\n      onMouseMove={(e) => mousePositionX(e)}\r\n    >\r\n      <StyledWrapList className=\"wrapList\">\r\n        {wholeList.map((list) => (\r\n          <List\r\n            wholeList={wholeList}\r\n            key={list.id}\r\n            id={list.id}\r\n            title={list.title}\r\n            tasks={list.tasks}\r\n            listOption={listOption}\r\n            addNewCard={addNewCard}\r\n            deleteCard={deleteCard}\r\n            showListHandle={showListHandle}\r\n            setListInput={setListInput}\r\n            scrollPosition={scrollPosition}\r\n            isDragAndDropTrue={isDragAndDropTrue}\r\n            visibilityOptionFunction={visibilityOptionFunction}\r\n            taskDetailsFunction={taskDetailsFunction}\r\n            updateListTitle={updateListTitle}\r\n            moveListToAnotherPlace={moveListToAnotherPlace}\r\n            clearAllBlankSpan={clearAllBlankSpan}\r\n          />\r\n        ))}\r\n        <StyledWrapAddListBtn bgc={showList ? true : false}>\r\n          <StyledListInput\r\n            bgc={showList ? true : false}\r\n            placeholder=\"Add another list\"\r\n            onClick={showAddListHandle}\r\n            onChange={(e) => listInputHandle(e)}\r\n            className=\"list\"\r\n            value={listInputValue}\r\n            onKeyPress={(e) => addNewListByKey(e)}\r\n            onMouseEnter={(e) => elementHoverEnter(e)}\r\n            onMouseLeave={(e) => elementHoverLeave(e)}\r\n          />\r\n          {showList ? (\r\n            <StyledButton\r\n              onClick={() =>\r\n                addNewList(listInputValue, showListHandle, setListInput)\r\n              }\r\n            >\r\n              Add List\r\n            </StyledButton>\r\n          ) : null}\r\n        </StyledWrapAddListBtn>\r\n      </StyledWrapList>\r\n    </StyledMain>\r\n  );\r\n}\r\n\r\nexport default CoreFieldView;\r\n","import React, { useState } from \"react\";\r\nimport CoreFieldView from \"../../components/CoreField/CoreFieldView\";\r\n\r\nconst MainField = ({\r\n  wholeList,\r\n  listOption,\r\n  addNewCard,\r\n  deleteCard,\r\n  addNewList,\r\n  updateListTitle,\r\n  elementHoverEnter,\r\n  elementHoverLeave,\r\n  visibilityOptionFunction,\r\n  taskDetailsFunction,\r\n  moveListToAnotherPlace,\r\n  clearAllBlankSpan,\r\n}) => {\r\n  const [showList, showListHandle] = useState(false);\r\n  const [scrollPosition, updatedScrollPosition] = useState(0);\r\n  const [isDragDropTrue, isDragDropTrueFeature] = useState(\"\");\r\n\r\n  const showAddListHandle = () => {\r\n    showListHandle(true);\r\n  };\r\n\r\n  const [listInputValue, setListInput] = useState(\"\");\r\n\r\n  const listInputHandle = (e) => {\r\n    setListInput(e.target.value);\r\n  };\r\n\r\n  const addNewListByKey = (e) => {\r\n    if (e.which === 13 && showList) {\r\n      addNewList(listInputValue, showListHandle, setListInput);\r\n      showListHandle(true);\r\n    }\r\n  };\r\n\r\n  const scroll = (e) => {\r\n    const scrollPosition = e.target.scrollLeft;\r\n    updatedScrollPosition(scrollPosition);\r\n  };\r\n\r\n  const mousePositionX = (e) => {\r\n    const main = document.querySelector(\".main\");\r\n    const mainWidth = main.offsetWidth;\r\n    const mousePositionX = e.clientX;\r\n    if (mousePositionX <= 75 && isDragDropTrue) {\r\n      main.scroll({\r\n        left: 0,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n\r\n    if (mousePositionX >= mainWidth - 75 && isDragDropTrue) {\r\n      main.scroll({\r\n        left: mainWidth + 285 * (wholeList.length + 1),\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const isDragAndDropTrue = (isTrue) => {\r\n    isDragDropTrueFeature(isTrue);\r\n  };\r\n\r\n  return (\r\n    <CoreFieldView\r\n      scroll={scroll}\r\n      mousePositionX={mousePositionX}\r\n      wholeList={wholeList}\r\n      listOption={listOption}\r\n      addNewCard={addNewCard}\r\n      deleteCard={deleteCard}\r\n      showListHandle={showListHandle}\r\n      setListInput={setListInput}\r\n      scrollPosition={scrollPosition}\r\n      isDragAndDropTrue={isDragAndDropTrue}\r\n      visibilityOptionFunction={visibilityOptionFunction}\r\n      taskDetailsFunction={taskDetailsFunction}\r\n      updateListTitle={updateListTitle}\r\n      moveListToAnotherPlace={moveListToAnotherPlace}\r\n      clearAllBlankSpan={clearAllBlankSpan}\r\n      showList={showList}\r\n      showAddListHandle={showAddListHandle}\r\n      listInputHandle={listInputHandle}\r\n      listInputValue={listInputValue}\r\n      addNewList={addNewList}\r\n      addNewListByKey={addNewListByKey}\r\n      elementHoverEnter={elementHoverEnter}\r\n      elementHoverLeave={elementHoverLeave}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MainField;\r\n","const size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n  desktop: \"2560px\",\r\n};\r\n\r\nexport const device = {\r\n  mobileS: `(min-width: ${size.mobileS})`,\r\n  mobileM: `(min-width: ${size.mobileM})`,\r\n  mobileL: `(min-width: ${size.mobileL})`,\r\n  tablet: `(min-width: ${size.tablet})`,\r\n  laptop: `(min-width: ${size.laptop})`,\r\n  laptopL: `(min-width: ${size.laptopL})`,\r\n  desktop: `(min-width: ${size.desktop})`,\r\n  desktopL: `(min-width: ${size.desktop})`,\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../Style/MediaQuery/mq\";\r\n\r\nconst StyledColorDiv = styled.div`\r\n  width: 75px;\r\n  height: 75px;\r\n  border-radius: 5px;\r\n  margin-right: 5px;\r\n  margin-left: 5px;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    opacity: 0.75;\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    width: 45%;\r\n    height: 85px;\r\n  }\r\n`;\r\n\r\nconst StyledThemeDivTitle = styled.h3`\r\n  width: 100%;\r\n  padding: 10px 0px;\r\n  text-align: center;\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst StyledThemeDiv = styled.div`\r\n  position: fixed;\r\n  bottom: 17.5px;\r\n  right: 0;\r\n  width: 100%;\r\n  transform: ${(props) =>\r\n    props.showTheme ? \"translateX(0px)\" : \"translateX(100vw)\"};\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  background-color: #f4f5f7;\r\n  padding: 10px;\r\n  transition: 0.3s linear;\r\n  z-index: 999;\r\n\r\n  @media ${device.laptop} {\r\n    top: calc(0% + 40px);\r\n    right: 0;\r\n    width: 375px;\r\n    align-content: flex-start;\r\n  }\r\n`;\r\n\r\nfunction ThemeFieldView({ themeOption, changeColor, blockOfColors }) {\r\n  return (\r\n    <StyledThemeDiv showTheme={themeOption}>\r\n      <StyledThemeDivTitle>Colors</StyledThemeDivTitle>\r\n      {blockOfColors.map((block) => (\r\n        <StyledColorDiv\r\n          onClick={() =>\r\n            changeColor(\r\n              block.mainColor,\r\n              block.navColor,\r\n              block.listColor,\r\n              block.inputColor\r\n            )\r\n          }\r\n          style={{ backgroundColor: block.mainColor }}\r\n          key={block.mainColor}\r\n        />\r\n      ))}\r\n    </StyledThemeDiv>\r\n  );\r\n}\r\n\r\nexport default ThemeFieldView;\r\n","import React from \"react\";\r\nimport ThemeFieldView from \"../../components/ThemeField/ThemeFieldView\";\r\n\r\nfunction ThemeField({ themeOption, setWhichColor }) {\r\n  const changeColor = (mainColor, navColor, listColor, inputColor) => {\r\n    const main = document.querySelector(\".main\");\r\n    main.style.backgroundColor = mainColor;\r\n\r\n    const nav = document.querySelector(\".nav\");\r\n    nav.style.backgroundColor = navColor;\r\n\r\n    const lists = document.querySelectorAll(\".list\");\r\n    lists.forEach((list) => {\r\n      list.style.backgroundColor = listColor;\r\n    });\r\n\r\n    const inputs = document.querySelectorAll(\".item\");\r\n    inputs.forEach((input) => {\r\n      input.style.backgroundColor = inputColor;\r\n    });\r\n\r\n    setWhichColor([listColor]);\r\n  };\r\n\r\n  const blockOfColors = [\r\n    {\r\n      mainColor: \"#0079BF\",\r\n      navColor: \"#0067A3\",\r\n      listColor: \"#3D99CE\",\r\n      inputColor: \"#4D95BE\",\r\n    },\r\n    {\r\n      mainColor: \"#D29034\",\r\n      navColor: \"#B37B2C\",\r\n      listColor: \"#DDAB65\",\r\n      inputColor: \"#C9A26C\",\r\n    },\r\n    {\r\n      mainColor: \"#519839\",\r\n      navColor: \"#458131\",\r\n      listColor: \"#7BB168\",\r\n      inputColor: \"#7DA76F\",\r\n    },\r\n    {\r\n      mainColor: \"#B04632\",\r\n      navColor: \"#963C2B\",\r\n      listColor: \"#C37263\",\r\n      inputColor: \"#B5766B\",\r\n    },\r\n    {\r\n      mainColor: \"#89609E\",\r\n      navColor: \"#755286\",\r\n      listColor: \"#A586B5\",\r\n      inputColor: \"#9E86AB\",\r\n    },\r\n    {\r\n      mainColor: \"#CD5A91\",\r\n      navColor: \"#AE4D7B\",\r\n      listColor: \"#D981AB\",\r\n      inputColor: \"#C682A3\",\r\n    },\r\n    {\r\n      mainColor: \"#4BBF6B\",\r\n      navColor: \"#40A35B\",\r\n      listColor: \"#76CE8E\",\r\n      inputColor: \"#79BE8C\",\r\n    },\r\n    {\r\n      mainColor: \"#00AECC\",\r\n      navColor: \"#0094AE\",\r\n      listColor: \"#3DC1D8\",\r\n      inputColor: \"#4DB4C6\",\r\n    },\r\n    {\r\n      mainColor: \"#838C91\",\r\n      navColor: \"#6F777B\",\r\n      listColor: \"#A1A8AB\",\r\n      inputColor: \"#9BA0A3\",\r\n    },\r\n  ];\r\n  return (\r\n    <ThemeFieldView\r\n      changeColor={changeColor}\r\n      themeOption={themeOption}\r\n      blockOfColors={blockOfColors}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ThemeField;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledListBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 150px;\r\n  height: 250px;\r\n`;\r\n\r\nconst StyledList = styled.li`\r\n  list-style: none;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  border-radius: 3px;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 5px;\r\n  padding: 7px 10px;\r\n  font-size: 14px;\r\n  color: white;\r\n  transition: 0.1s linear;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.75);\r\n    transform: translateX(7.5px);\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: 13px;\r\n`;\r\n\r\nfunction OptionCoverListView({\r\n  deleteCard,\r\n  listId,\r\n  handleLabelsVisibility,\r\n  addPriorityForCards,\r\n  optionCoverData,\r\n}) {\r\n  return (\r\n    <StyledListBlock className=\"cover_listBlock\">\r\n      <ul>\r\n        <StyledList onClick={() => handleLabelsVisibility(true)}>\r\n          <StyledIcon className=\"fas fa-tag\" />\r\n          Edit labels\r\n        </StyledList>\r\n        <StyledList>\r\n          <StyledIcon className=\"fas fa-long-arrow-alt-right\" />\r\n          Move\r\n        </StyledList>\r\n        <StyledList>\r\n          <StyledIcon className=\"far fa-clipboard\" />\r\n          Copy\r\n        </StyledList>\r\n        <StyledList>\r\n          <StyledIcon className=\"far fa-clock\" />\r\n          Date Change\r\n        </StyledList>\r\n        <StyledList\r\n          onClick={() =>\r\n            addPriorityForCards(\r\n              optionCoverData[0].clickedCard,\r\n              optionCoverData[0].clickedCardId\r\n            )\r\n          }\r\n        >\r\n          <StyledIcon className=\"fas fa-exclamation-circle\" />\r\n          Priority\r\n        </StyledList>\r\n        <StyledList\r\n          onClick={(e) =>\r\n            deleteCard(listId, optionCoverData[0].clickedCardId, \"byButton\")\r\n          }\r\n        >\r\n          <StyledIcon className=\"fas fa-archive\" />\r\n          Archive\r\n        </StyledList>\r\n      </ul>\r\n    </StyledListBlock>\r\n  );\r\n}\r\n\r\nexport default OptionCoverListView;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledBack = styled.span`\r\n  position: fixed;\r\n  left: 10px;\r\n  top: 16px;\r\n  margin-left: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledNameLabels = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: column;\r\n  top: ${(props) => (props.detailCover ? \"96px\" : \"0\")};\r\n  left: ${(props) => (props.detailCover ? \"390px\" : \"0\")};\r\n  width: 310px;\r\n  height: 350px;\r\n  transform: translate(270px);\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst StyledLabelTitle = styled.h2`\r\n  border-bottom: 1px solid #42516e;\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n  margin: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledLabelInput = styled.input`\r\n  width: 95%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 7.5px 5px;\r\n  margin: 15px auto;\r\n  margin-top: ${(props) => (props.marginTop ? \"5px\" : \"15px\")};\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledName = styled.h3`\r\n  margin-left: 7px;\r\n  margin-top: 7px;\r\n`;\r\n\r\nconst StyledWrapColors = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  margin-top: 7px;\r\n`;\r\n\r\nconst StyledColorSquar = styled.div`\r\n  width: 18%;\r\n  height: 40px;\r\n  border-radius: 4px;\r\n  margin-right: 2.5px;\r\n  margin-left: 2.5px;\r\n  margin-bottom: 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.85;\r\n  }\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  position: fixed;\r\n  right: 16px;\r\n  top: 16px;\r\n  margin-left: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction LabelsNameColors({\r\n  nameLabelVisibility,\r\n  filteredColors,\r\n  detailCover,\r\n}) {\r\n  return (\r\n    <StyledNameLabels className=\"label\" detailCover={detailCover}>\r\n      <StyledLabelTitle className=\"label\">\r\n        Change Label <StyledX className=\"fas fa-times\" />\r\n        <StyledBack\r\n          className=\"fas fa-angle-left label\"\r\n          onClick={() => nameLabelVisibility(false)}\r\n        />\r\n      </StyledLabelTitle>\r\n      <StyledName>Name</StyledName>\r\n      <StyledLabelInput className=\"label\" marginTop />\r\n      <StyledName>Colors</StyledName>\r\n      <StyledWrapColors>\r\n        {filteredColors.map((color) => (\r\n          <StyledColorSquar\r\n            style={{ backgroundColor: `${color.color}` }}\r\n            key={color.color}\r\n          />\r\n        ))}\r\n      </StyledWrapColors>\r\n    </StyledNameLabels>\r\n  );\r\n}\r\n\r\nexport default LabelsNameColors;\r\n","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLabels = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  flex-direction: column;\r\n  top: ${(props) => (props.detailCover ? \"96px\" : \"0\")};\r\n  left: ${(props) => (props.detailCover ? \"390px\" : \"0\")};\r\n  width: 310px;\r\n  height: 605px;\r\n  transform: translate(270px);\r\n  background-color: #fff;\r\n  border-radius: 4px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst StyledLabelWrapEle = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledLabelElement = styled.div`\r\n  position: relative;\r\n  width: 80%;\r\n  height: 35px;\r\n  border-radius: 5px;\r\n  margin: 0 10px;\r\n  margin-bottom: 4px;\r\n  list-style: none;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n    border-left: 10px solid rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  align-self: center;\r\n  border-radius: 3px;\r\n  margin: 0 auto;\r\n  margin-bottom: 4px;\r\n  padding: 10.5px;\r\n  font-size: 15px;\r\n  color: #aaa;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #eee;\r\n  }\r\n`;\r\n\r\nconst StyledLabelTitle = styled.h2`\r\n  border-bottom: 1px solid #42516e;\r\n  text-align: center;\r\n  padding-bottom: 10px;\r\n  margin: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledLabelInput = styled.input`\r\n  width: 95%;\r\n  background-color: #fafbfc;\r\n  box-shadow: 0px 0px 1px 1.5px #ccc;\r\n  border-radius: 3px;\r\n  padding: 7.5px 5px;\r\n  margin: 15px auto;\r\n  margin-top: ${(props) => (props.marginTop ? \"5px\" : \"15px\")};\r\n\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledBtn = styled.div`\r\n  width: 95%;\r\n  background-color: #f5f6f8;\r\n  text-align: center;\r\n  padding: 8px 5px;\r\n  margin: 0 auto;\r\n  margin-top: 15px;\r\n  font-size: 13px;\r\n  color: #42516e;\r\n  box-shadow: 0px 0px 1px 1.5px #ebecef;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #e5e6e8;\r\n  }\r\n`;\r\n\r\nconst StyledX = styled.span`\r\n  position: fixed;\r\n  right: 16px;\r\n  top: 16px;\r\n  margin-left: 10px;\r\n  font-size: 15px;\r\n  color: #42516e;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledIconCheck = styled.div`\r\n  display: none;\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 17.5px;\r\n  transform: translate(-50%, -50%);\r\n  font-size: 10px;\r\n  color: #fff;\r\n`;\r\n\r\nfunction LabelsChooseColors({\r\n  detailCover,\r\n  handleLabelsVisibility,\r\n  filteredColors,\r\n  nameLabelVisibility,\r\n  toggleLabelColorToCard,\r\n  taskId,\r\n  generateCheckIcon,\r\n  searchLabelColor,\r\n  searchInputLabel,\r\n}) {\r\n  useEffect(() => {\r\n    generateCheckIcon();\r\n  });\r\n\r\n  return (\r\n    <StyledLabels className=\"label\" detailCover={detailCover}>\r\n      <StyledLabelTitle className=\"label\">\r\n        Labels{\" \"}\r\n        <StyledX\r\n          className=\"fas fa-times\"\r\n          onClick={() => handleLabelsVisibility(false)}\r\n        />\r\n      </StyledLabelTitle>\r\n      <StyledLabelInput\r\n        placeholder=\"Search Labels...\"\r\n        className=\"label\"\r\n        onChange={(e) => searchLabelColor(e)}\r\n        value={searchInputLabel}\r\n      />\r\n      {filteredColors.map((color) => (\r\n        <StyledLabelWrapEle key={color.color} className=\"label\">\r\n          <StyledLabelElement\r\n            onClick={() => toggleLabelColorToCard(color.color, taskId)}\r\n            style={{ backgroundColor: `${color.color}` }}\r\n            className=\"label\"\r\n          >\r\n            <StyledIconCheck\r\n              className=\"fas fa-check\"\r\n              id={`${color.color}Check`}\r\n            />\r\n          </StyledLabelElement>{\" \"}\r\n          <StyledIcon\r\n            className=\"fas fa-pen label\"\r\n            onClick={() => nameLabelVisibility(true)}\r\n          />\r\n        </StyledLabelWrapEle>\r\n      ))}\r\n      <StyledBtn className=\"label\">Create Label</StyledBtn>\r\n    </StyledLabels>\r\n  );\r\n}\r\n\r\nexport default LabelsChooseColors;\r\n","import React from \"react\";\r\nimport LabelsNameColors from \"./LabelView/LabelsNameColors\";\r\nimport LabelsChooseColors from \"./LabelView/LabelsChooseColors\";\r\n\r\nfunction LabelsView({\r\n  handleLabelsVisibility,\r\n  detailCover,\r\n  nameLabelVisibility,\r\n  labelVisibility,\r\n  toggleLabelColorToCard,\r\n  taskId,\r\n  generateCheckIcon,\r\n  searchLabelColor,\r\n  searchInputLabel,\r\n  filteredColors,\r\n}) {\r\n  return (\r\n    <>\r\n      {labelVisibility ? (\r\n        <LabelsNameColors\r\n          nameLabelVisibility={nameLabelVisibility}\r\n          filteredColors={filteredColors}\r\n          detailCover={detailCover}\r\n        />\r\n      ) : (\r\n        <LabelsChooseColors\r\n          detailCover={detailCover}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          filteredColors={filteredColors}\r\n          nameLabelVisibility={nameLabelVisibility}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          taskId={taskId}\r\n          generateCheckIcon={generateCheckIcon}\r\n          searchLabelColor={searchLabelColor}\r\n          searchInputLabel={searchInputLabel}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LabelsView;\r\n","import React, { Component } from \"react\";\r\nimport LabelsView from \"../../components/Labels/LabelsView\";\r\n\r\nclass Labels extends Component {\r\n  state = {\r\n    labelColors: [\r\n      { color: \"#61BD4F\", colorName: \"green\" },\r\n      { color: \"#F2D600\", colorName: \"yellow\" },\r\n      { color: \"#FF9F1A\", colorName: \"orange\" },\r\n      { color: \"#EB5A46\", colorName: \"red\" },\r\n      { color: \"#C377E0\", colorName: \"purple\" },\r\n      { color: \"#0079BF\", colorName: \"blue\" },\r\n      { color: \"#00C2E0\", colorName: \"light blue ocean\" },\r\n      { color: \"#51E898\", colorName: \"light green\" },\r\n      { color: \"#FF78CB\", colorName: \"pink\" },\r\n      { color: \"#344563\", colorName: \"dark blue\" },\r\n      { color: \"#B3BAC5\", colorName: \"grey\" },\r\n    ],\r\n    labelVisibility: false,\r\n    searchInputLabel: \"\",\r\n  };\r\n\r\n  nameLabelVisibility = (toggle) => {\r\n    this.setState({ labelVisibility: toggle });\r\n  };\r\n\r\n  generateCheckIcon = () => {\r\n    const matchedBadges = this.props.listOfAllBadges.filter(\r\n      (ele) => ele.id === this.props.taskId\r\n    );\r\n    if (matchedBadges.length !== 0) {\r\n      matchedBadges.forEach((element) => {\r\n        const currentCheckIcon = document.getElementById(\r\n          `${element.color}Check`\r\n        );\r\n        if (currentCheckIcon) {\r\n          currentCheckIcon.style.display = \"block\";\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  searchLabelColor = (e) => {\r\n    this.setState({\r\n      searchInputLabel: e.target.value.substr(0, 17),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      handleLabelsVisibility,\r\n      detailCover,\r\n      addLabelColor,\r\n      optionCoverData,\r\n      toggleLabelColorToCard,\r\n      taskId,\r\n    } = this.props;\r\n\r\n    const { labelColors, searchInputLabel, labelVisibility } = this.state;\r\n\r\n    const copyOfColorsArray = [...labelColors];\r\n    const filteredColors = copyOfColorsArray.filter((ele) =>\r\n      ele.colorName.toUpperCase().includes(searchInputLabel.toUpperCase())\r\n    );\r\n    return (\r\n      <LabelsView\r\n        handleLabelsVisibility={handleLabelsVisibility}\r\n        detailCover={detailCover}\r\n        nameLabelVisibility={this.nameLabelVisibility}\r\n        labelVisibility={labelVisibility}\r\n        addLabelColor={addLabelColor}\r\n        optionCoverData={optionCoverData}\r\n        toggleLabelColorToCard={toggleLabelColorToCard}\r\n        taskId={taskId}\r\n        generateCheckIcon={this.generateCheckIcon}\r\n        searchLabelColor={this.searchLabelColor}\r\n        searchInputLabel={searchInputLabel}\r\n        filteredColors={filteredColors}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Labels;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport OptionCoverListView from \"./OptionCoverListView/OptionCoverListView\";\r\nimport Labels from \"../../Containers/Labels/Labels\";\r\n\r\nconst StyledCover = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.65);\r\n  z-index: 0;\r\n`;\r\n\r\nconst StyledOptionBox = styled.div`\r\n  position: fixed;\r\n  transform: translate(0, -50%);\r\n  height: 400px;\r\n  width: 450px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  border-radius: 5px;\r\n  z-index: 999;\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  height: 100px;\r\n  width: 260px;\r\n  padding: 7.5px;\r\n  padding-top: 0px;\r\n  border-radius: 5px;\r\n  resize: none;\r\n`;\r\n\r\nconst StyledSaveButton = styled.button`\r\n  width: 75px;\r\n  height: 32.5px;\r\n  background-color: #5aac44;\r\n  border-radius: 4px;\r\n  margin-top: 6px;\r\n  color: white;\r\n  cursor: pointer;\r\n  transition: 0.15s linear;\r\n\r\n  &:hover {\r\n    background-color: #6abc54;\r\n  }\r\n`;\r\n\r\nconst StyledWrapLabels = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 260px;\r\n  min-height: 10px;\r\n  padding: 5px 5px 0px 5px;\r\n  border-radius: 5px;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst StyledWrapTextAndLabels = styled.div`\r\n  width: 260px;\r\n  height: 110px;\r\n  align-self: flex-start;\r\n  border-radius: 5px;\r\n  margin-right: 10px;\r\n  background-color: #fff;\r\n`;\r\n\r\nconst OptionCover = ({\r\n  optionCoverData,\r\n  taskTitleFeature,\r\n  taskTitle,\r\n  updateCard,\r\n  deleteCard,\r\n  handleLabelsVisibility,\r\n  labelsVisibility,\r\n  toggleLabelColorToCard,\r\n  listOfAllBadges,\r\n  matchedColorsToThisCard,\r\n}) => {\r\n  return (\r\n    <StyledCover className=\"coverOption\">\r\n      <StyledOptionBox className=\"cover_box\">\r\n        <StyledWrapTextAndLabels>\r\n          <StyledWrapLabels className=\"coverOption_wrapLabel\">\r\n            {matchedColorsToThisCard.map((ele) => (\r\n              <div\r\n                key={ele.color}\r\n                id={`${ele.labelId}OptionCover`}\r\n                className=\"labelElement\"\r\n                style={{ backgroundColor: ele.color }}\r\n              >\r\n                {ele.name}\r\n              </div>\r\n            ))}\r\n          </StyledWrapLabels>\r\n          <StyledTextArea\r\n            className=\"cover_textArea\"\r\n            onChange={(e) => taskTitleFeature(e)}\r\n            value={taskTitle}\r\n          />\r\n          <StyledSaveButton\r\n            className=\"cover_saveBtn\"\r\n            onClick={(e) =>\r\n              updateCard(\r\n                e,\r\n                taskTitle,\r\n                optionCoverData[0].listId,\r\n                optionCoverData[0].clickedCardId\r\n              )\r\n            }\r\n          >\r\n            Save\r\n          </StyledSaveButton>\r\n        </StyledWrapTextAndLabels>\r\n        <OptionCoverListView\r\n          deleteCard={deleteCard}\r\n          taskTitle={taskTitle}\r\n          listId={optionCoverData[0].listId}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          optionCoverData={optionCoverData}\r\n        />\r\n\r\n        {labelsVisibility ? (\r\n          <Labels\r\n            handleLabelsVisibility={handleLabelsVisibility}\r\n            optionCoverData={optionCoverData}\r\n            toggleLabelColorToCard={toggleLabelColorToCard}\r\n            taskId={optionCoverData[0].clickedCardId}\r\n            listOfAllBadges={listOfAllBadges}\r\n          />\r\n        ) : null}\r\n      </StyledOptionBox>\r\n    </StyledCover>\r\n  );\r\n};\r\n\r\nexport default OptionCover;\r\n","import React, { Component } from \"react\";\r\nimport OptionCoverView from \"../../components/OptionCover/OptionCoverView\";\r\n\r\nclass OptionCover extends Component {\r\n  state = {\r\n    taskTitle: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setOptionCoverPostion(this.props.optionCoverData);\r\n    this.setState({\r\n      taskTitle: this.props.optionCoverData[0].taskTitle.taskName,\r\n    });\r\n  }\r\n\r\n  setOptionCoverPostion = (taskData) => {\r\n    const mainOffsetTop = document.querySelector(\".main\").offsetTop;\r\n    const coverBox = document.querySelector(\".cover_box\");\r\n    const coverBoxHeight = coverBox.offsetHeight;\r\n    const scrollPosition = Math.floor(\r\n      document.querySelector(\".main\").scrollLeft\r\n    );\r\n\r\n    //ListIndex, when list is moving to another place\r\n    const listIndex = taskData[0].wholeList.findIndex(\r\n      (element) => element.id === taskData[0].listId\r\n    );\r\n\r\n    const positionY =\r\n      mainOffsetTop + taskData[0].top - 8 + coverBoxHeight / 1.6;\r\n    const positionX = 285 * listIndex + 18.5 - scrollPosition;\r\n\r\n    //Top and Left BOX Position Calculate\r\n    coverBox.style.top = `${positionY}px`;\r\n    coverBox.style.left = `${positionX}px`;\r\n  };\r\n\r\n  taskTitleFeature = (e) => {\r\n    this.setState({ taskTitle: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      optionCoverData,\r\n      updateCard,\r\n      deleteCard,\r\n      handleLabelsVisibility,\r\n      labelsVisibility,\r\n      toggleLabelColorToCard,\r\n      listOfAllBadges,\r\n    } = this.props;\r\n\r\n    const { taskTitle } = this.state;\r\n\r\n    const copyOfallBadges = [...listOfAllBadges];\r\n\r\n    const matchedColorsToThisCard = copyOfallBadges.filter(\r\n      (ele) => ele.id === optionCoverData[0].clickedCardId\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <OptionCoverView\r\n          optionCoverData={optionCoverData}\r\n          taskTitleFeature={this.taskTitleFeature}\r\n          taskTitle={taskTitle}\r\n          updateCard={updateCard}\r\n          deleteCard={deleteCard}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          labelsVisibility={labelsVisibility}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OptionCover;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledTaskName = styled.input`\r\n  width: calc(100% - 50px);\r\n  background-color: #f4f5f7;\r\n  border-radius: 1px;\r\n  padding: 5px 4px;\r\n  font-size: 1.8rem;\r\n  font-weight: 600;\r\n  color: #172b4d;\r\n\r\n  &:focus {\r\n    background-color: white;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nfunction Detail_Input({\r\n  taskTitle,\r\n  taskTitleFeature,\r\n  updateCard,\r\n  idUpdatedList,\r\n  taskId,\r\n}) {\r\n  return (\r\n    <>\r\n      <StyledTaskName\r\n        className=\"input\"\r\n        value={taskTitle}\r\n        onChange={(e) => taskTitleFeature(e)}\r\n      />\r\n      <span\r\n        className=\"fas fa-times close\"\r\n        onClick={(e) => updateCard(e, taskTitle, idUpdatedList, taskId)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Detail_Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLightText = styled.h3`\r\n  margin-top: 7.5px;\r\n  font-weight: 400;\r\n  font-size: 1.4rem;\r\n  color: #172b4d;\r\n`;\r\n\r\nconst StyledStrongText = styled.strong`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledChangeListDetails = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-wrap: wrap;\r\n  position: fixed;\r\n  width: 300px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  box-shadow: 0px 0px 4px 0.5px #ccc;\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst StyledReplaceTitle = styled.h3`\r\n  width: 100%;\r\n  position: relative;\r\n  flex-grow: 1;\r\n  text-align: ${(props) => (props.alignCenter ? \"center\" : \"left\")};\r\n  font-size: 1.5rem;\r\n  border-bottom: ${(props) => (props.border ? \"1px solid #aaa\" : \"null\")};\r\n  padding-bottom: 6px;\r\n  color: #555;\r\n  font-weight: 400;\r\n  margin-bottom: ${(props) => (props.biggerMargin ? \"27.5px\" : \"5px\")};\r\n\r\n  & > .fa-times {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst StyledSuggestList = styled.div`\r\n  width: 100%;\r\n  max-width: 275px;\r\n  word-break: break-all;\r\n  margin: 0 auto;\r\n  margin-bottom: 7px;\r\n  padding: 9px 7.5px;\r\n  font-size: 1.4rem;\r\n  background-color: #f5f6f8;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  color: black;\r\n  transition: 0.1s linear;\r\n\r\n  &:hover {\r\n    background-color: #e6e8ed;\r\n  }\r\n`;\r\n\r\nfunction DetailSuggestedElement({\r\n  changeListInDetails,\r\n  taskTitleList,\r\n  taskTitle,\r\n  visibilityChangeListInDetails,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  taskId,\r\n}) {\r\n  return (\r\n    <StyledLightText className=\"suggested\">\r\n      On the list{\" \"}\r\n      <StyledStrongText\r\n        onClick={() => changeListInDetails()}\r\n        className=\"suggested\"\r\n      >\r\n        {taskTitleList}\r\n      </StyledStrongText>\r\n      {visibilityChangeListInDetails ? (\r\n        <StyledChangeListDetails className=\"replaceCard suggested\">\r\n          <StyledReplaceTitle\r\n            border\r\n            alignCenter\r\n            biggerMargin\r\n            className=\"suggested\"\r\n          >\r\n            Replace Card\r\n            <span\r\n              className=\"fas fa-times\"\r\n              onClick={() => changeListInDetails()}\r\n            ></span>\r\n          </StyledReplaceTitle>\r\n          <StyledReplaceTitle className=\"suggested\">\r\n            Suggested\r\n          </StyledReplaceTitle>\r\n          {wholeList.map((list) => (\r\n            <StyledSuggestList\r\n              className=\"suggested\"\r\n              onClick={(e) =>\r\n                moveCardToAnotherList(taskTitle, taskTitleList, taskId, list.id)\r\n              }\r\n              key={list.id}\r\n            >\r\n              {list.title}\r\n            </StyledSuggestList>\r\n          ))}\r\n        </StyledChangeListDetails>\r\n      ) : null}\r\n    </StyledLightText>\r\n  );\r\n}\r\n\r\nexport default DetailSuggestedElement;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../../Style/MediaQuery/mq\";\r\n\r\nconst StyledDetailNav = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 300px;\r\n  @media ${device.laptop} {\r\n    width: 200px;\r\n  }\r\n`;\r\n\r\nconst StyledDetailUl = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  @media ${device.laptop} {\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: 13px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledDetailList = styled.li`\r\n  width: ${(props) => (props.first ? \"100%\" : \"45%\")};\r\n  background-color: ${(props) => (props.first ? \"transparent\" : \"#eaecf0\")};\r\n  border-radius: ${(props) => (props.first ? \"null\" : \"3px\")};\r\n  padding: 7.5px;\r\n  margin-right: ${(props) => (props.first ? \"0px\" : \"10px\")};\r\n  margin-bottom: ${(props) => (props.first ? \"5px\" : \"10px\")};\r\n  list-style: none;\r\n  font-size: 14px;\r\n  color: #42516e;\r\n  cursor: ${(props) => (props.first ? \"initial\" : \"pointer\")};\r\n\r\n  &:hover {\r\n    background-color: ${(props) => (props.first ? \"transparent\" : \"#dadce0\")};\r\n  }\r\n\r\n  @media ${device.laptop} {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nfunction DetailCoverNav({\r\n  handleLabelsVisibility,\r\n  labelsVisibility,\r\n  deleteCard,\r\n  idUpdatedList,\r\n  taskId,\r\n}) {\r\n  return (\r\n    <StyledDetailNav>\r\n      <StyledDetailUl>\r\n        <StyledDetailList first> ADD TO CARD</StyledDetailList>\r\n        <StyledDetailList\r\n          onClick={() => handleLabelsVisibility(!labelsVisibility)}\r\n          className=\"label\"\r\n        >\r\n          <StyledIcon className=\"fas fa-tag label\" />\r\n          Edit lables\r\n        </StyledDetailList>\r\n        <StyledDetailList>\r\n          <StyledIcon className=\"fas fa-list-alt\" />\r\n          Tasks list\r\n        </StyledDetailList>\r\n        <StyledDetailList>\r\n          <StyledIcon className=\"far fa-clock\" />\r\n          Term\r\n        </StyledDetailList>\r\n        <StyledDetailList>\r\n          <StyledIcon className=\"far fa-image\" />\r\n          Cover\r\n        </StyledDetailList>\r\n      </StyledDetailUl>\r\n      <StyledDetailUl>\r\n        <StyledDetailList first> ACTIONS</StyledDetailList>\r\n        <StyledDetailList>\r\n          <StyledIcon className=\"fas fa-long-arrow-alt-right\" />\r\n          Move\r\n        </StyledDetailList>\r\n        <StyledDetailList>\r\n          <StyledIcon className=\"far fa-clipboard\" />\r\n          Copy\r\n        </StyledDetailList>\r\n        <StyledDetailList>\r\n          <StyledIcon className=\"fas fa-exclamation-circle\" />\r\n          Priority\r\n        </StyledDetailList>\r\n        <StyledDetailList\r\n          className=\"delete\"\r\n          onClick={(e) => deleteCard(idUpdatedList, taskId, \"byButton\")}\r\n        >\r\n          <StyledIcon className=\"fas fa-archive\" />\r\n          Archive\r\n        </StyledDetailList>\r\n      </StyledDetailUl>\r\n    </StyledDetailNav>\r\n  );\r\n}\r\n\r\nexport default DetailCoverNav;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledDetailMarks = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst StyledDetailDescription = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  margin-top: 25px;\r\n`;\r\n\r\nconst StyledTitle = styled.h2`\r\n  width: 100%;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledTextArea = styled.textarea`\r\n  width: 90%;\r\n  background-color: #eaecf0;\r\n  margin: 10px auto;\r\n  padding: 7.5px 5px;\r\n  border-radius: 3px;\r\n  min-height: 50px;\r\n  resize: none;\r\n  cursor: pointer;\r\n  transition: 0.1s linear;\r\n\r\n  &:focus {\r\n    min-height: 125px;\r\n    background-color: #fff;\r\n    box-shadow: 0px 0px 1px 1.5px #0079bf;\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled.span`\r\n  margin-right: 6px;\r\n  font-size: 17px;\r\n  color: #42516e;\r\n`;\r\n\r\nconst StyledLabelsWrap = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nfunction DetailCoverMarks({ matchedColorsToThisCard }) {\r\n  return (\r\n    <StyledDetailMarks>\r\n      <div>\r\n        <h2>Lables</h2>\r\n        <StyledLabelsWrap className=\"detailCover_labelsWrap\">\r\n          {matchedColorsToThisCard.map((ele) => (\r\n            <div\r\n              key={ele.color}\r\n              id={`${ele.labelId}DetailCover`}\r\n              className=\"labelElement_DetailCover\"\r\n              style={{ backgroundColor: ele.color }}\r\n            >\r\n              {ele.name}\r\n            </div>\r\n          ))}\r\n        </StyledLabelsWrap>\r\n      </div>\r\n      <StyledDetailDescription>\r\n        <StyledTitle>\r\n          <StyledIcon className=\"fas fa-stream\" />\r\n          Description\r\n        </StyledTitle>\r\n        <StyledTextArea\r\n          placeholder=\"Add more detail comment...\"\r\n          className=\"input\"\r\n        ></StyledTextArea>\r\n      </StyledDetailDescription>\r\n    </StyledDetailMarks>\r\n  );\r\n}\r\n\r\nexport default DetailCoverMarks;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { device } from \"../../../Style/MediaQuery/mq\";\r\nimport DetailCoverNav from \"./DetailCoverNav/DetailCoverNav\";\r\nimport DetailCoverMarks from \"./DetailCoverMarks/DetailCoverMarks\";\r\n\r\nconst StyledDetailToolsWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 600px;\r\n  margin-top: 10px;\r\n  @media ${device.laptop} {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nfunction DetailTools({\r\n  labelsVisibility,\r\n  handleLabelsVisibility,\r\n  deleteCard,\r\n  idUpdatedList,\r\n  taskId,\r\n  matchedColorsToThisCard,\r\n}) {\r\n  return (\r\n    <StyledDetailToolsWrap>\r\n      <DetailCoverMarks matchedColorsToThisCard={matchedColorsToThisCard} />\r\n      <DetailCoverNav\r\n        handleLabelsVisibility={handleLabelsVisibility}\r\n        labelsVisibility={labelsVisibility}\r\n        deleteCard={deleteCard}\r\n        idUpdatedList={idUpdatedList}\r\n        taskId={taskId}\r\n      />\r\n    </StyledDetailToolsWrap>\r\n  );\r\n}\r\n\r\nexport default DetailTools;\r\n","import React from \"react\";\r\nimport DetailInputElement from \"../DetailElements/DetailInputElement\";\r\nimport DetailSuggestedElement from \"../DetailElements/DetailSuggestedElement\";\r\nimport DetailTools from \"../DetailTools/DetailTools\";\r\nimport Labels from \"../../../Containers/Labels/Labels\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledCover = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nconst StyledDetail = styled.div`\r\n  position: fixed;\r\n  top: 41px;\r\n  left: 50%;\r\n  bottom: 17.5px;\r\n  transform: translate(-50%, 0%);\r\n  width: 100%;\r\n  max-width: 775px;\r\n  padding: 15px;\r\n  border-radius: 3px;\r\n  background-color: #f4f5f7;\r\n`;\r\n\r\nfunction DetailCoverView({\r\n  updateCard,\r\n  deleteCard,\r\n  idUpdatedList,\r\n  taskTitle,\r\n  taskTitleFeature,\r\n  changeListInDetails,\r\n  taskTitleList,\r\n  visibilityChangeListInDetails,\r\n  wholeList,\r\n  moveCardToAnotherList,\r\n  labelsVisibility,\r\n  handleLabelsVisibility,\r\n  taskId,\r\n  toggleLabelColorToCard,\r\n  listOfAllBadges,\r\n  matchedColorsToThisCard,\r\n}) {\r\n  return (\r\n    <StyledCover\r\n      className=\"cover\"\r\n      onClick={(e) => updateCard(e, taskTitle, idUpdatedList, taskId)}\r\n    >\r\n      <StyledDetail\r\n        className=\"detail\"\r\n        onClick={(e) => updateCard(e, taskTitle, idUpdatedList, taskId)}\r\n      >\r\n        <span className=\"fas fa-credit-card\"></span>\r\n        <DetailInputElement\r\n          taskTitle={taskTitle}\r\n          taskTitleFeature={taskTitleFeature}\r\n          updateCard={updateCard}\r\n          idUpdatedList={idUpdatedList}\r\n          taskId={taskId}\r\n        />\r\n        <DetailSuggestedElement\r\n          changeListInDetails={changeListInDetails}\r\n          taskTitleList={taskTitleList}\r\n          taskTitle={taskTitle}\r\n          visibilityChangeListInDetails={visibilityChangeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          taskId={taskId}\r\n        />\r\n        <DetailTools\r\n          labelsVisibility={labelsVisibility}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          deleteCard={deleteCard}\r\n          idUpdatedList={idUpdatedList}\r\n          taskId={taskId}\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n        />\r\n        {labelsVisibility ? (\r\n          <Labels\r\n            detailCover={true}\r\n            handleLabelsVisibility={handleLabelsVisibility}\r\n            toggleLabelColorToCard={toggleLabelColorToCard}\r\n            listOfAllBadges={listOfAllBadges}\r\n            taskId={taskId}\r\n          />\r\n        ) : null}\r\n      </StyledDetail>\r\n    </StyledCover>\r\n  );\r\n}\r\n\r\nexport default DetailCoverView;\r\n","import React from \"react\";\r\nimport DetailCoverView from \"../../components/DetailCover/DetailCoverView/DetailCoverView\";\r\n\r\nclass DetailCover extends React.Component {\r\n  state = {\r\n    taskTitle: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      taskTitle: this.props.taskName,\r\n    });\r\n  }\r\n\r\n  taskTitleFeature = (e) => {\r\n    this.setState({\r\n      taskTitle: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      taskId,\r\n      taskTitleList,\r\n      updateCard,\r\n      deleteCard,\r\n      idUpdatedList,\r\n      changeListInDetails,\r\n      visibilityChangeListInDetails,\r\n      wholeList,\r\n      moveCardToAnotherList,\r\n      labelsVisibility,\r\n      handleLabelsVisibility,\r\n      toggleLabelColorToCard,\r\n      listOfAllBadges,\r\n    } = this.props;\r\n\r\n    const copyOfallBadges = [...listOfAllBadges];\r\n    const matchedColorsToThisCard = copyOfallBadges.filter(\r\n      (ele) => ele.id === taskId\r\n    );\r\n\r\n    const { taskTitle } = this.state;\r\n    return (\r\n      <>\r\n        <DetailCoverView\r\n          updateCard={updateCard}\r\n          taskTitle={taskTitle}\r\n          taskTitleFeature={this.taskTitleFeature}\r\n          changeListInDetails={changeListInDetails}\r\n          taskTitleList={taskTitleList}\r\n          visibilityChangeListInDetails={visibilityChangeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          labelsVisibility={labelsVisibility}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          deleteCard={deleteCard}\r\n          idUpdatedList={idUpdatedList}\r\n          taskId={taskId}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n          matchedColorsToThisCard={matchedColorsToThisCard}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DetailCover;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Navigations from \"../Naviagtion/Navigations\";\r\nimport CoreField from \"../CoreField/CoreField\";\r\nimport ThemeField from \"../ThemeField/ThemeField\";\r\nimport OptionCover from \"../OptionCover/OptionCover\";\r\nimport DetailCover from \"../DetailCover/DetailCover\";\r\nimport Color from \"color\";\r\n\r\nconst Main = () => {\r\n  const [showThemeOption, showThemeOptionFunction] = useState(false);\r\n  const [numberOfTask, numberOfTaskFunction] = useState(0);\r\n  const [whichColor, setWhichColor] = useState([\"#76ce8e\"]);\r\n  const [visibilityOptionsCover, setVisibilityOptionCover] = useState(false);\r\n  const [optionCoverData, setOptionCoverData] = useState(\"\");\r\n  const [visibilityTaskDetails, setVisibilityTaskDetails] = useState(false);\r\n  const [taskTitleList, setTaskTitleList] = useState();\r\n  const [taskName, setTaskName] = useState(\"\");\r\n  const [taskId, setTaskId] = useState(\"\");\r\n  const [idUpdatedList, setIdUpdatedList] = useState();\r\n  const [visibilityChangeListInDetails, setChangeListInDetails] = useState(\r\n    false\r\n  );\r\n  const [labelsVisibility, setLabelsVisibility] = useState(false);\r\n  const [\r\n    labelsVisibilityDetailsComp,\r\n    setLabelsVisibilityDetailsComp,\r\n  ] = useState(false);\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const [listOfAllTasksId, setListOfAllTasksId] = useState([]);\r\n  const [listOfAllBadges, setListOfAllBadges] = useState([]);\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", hideTheme);\r\n  });\r\n\r\n  const [wholeList, setWholeList] = useState([\r\n    {\r\n      id: 0,\r\n      title: \"To Do\",\r\n      tasks: [],\r\n      activeList: false,\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"In Progress\",\r\n      tasks: [],\r\n      activeList: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Finished\",\r\n      tasks: [],\r\n      activeList: false,\r\n    },\r\n  ]);\r\n\r\n  const hideTheme = (e) => {\r\n    const searchingClass = e.target.className;\r\n    if (\r\n      searchingClass.includes(\"main\") ||\r\n      searchingClass.includes(\"input\") ||\r\n      searchingClass.includes(\"item\")\r\n    ) {\r\n      showThemeOptionFunction(false);\r\n    }\r\n\r\n    if (!searchingClass.includes(\"suggested\")) {\r\n      setChangeListInDetails(false);\r\n    }\r\n\r\n    if (\r\n      searchingClass.includes(\"coverOption\") ||\r\n      searchingClass.includes(\"cover_box\")\r\n    ) {\r\n      setVisibilityOptionCover(false);\r\n      setLabelsVisibility(false);\r\n    }\r\n\r\n    if (searchingClass.includes(\"cover_textArea\")) {\r\n      setLabelsVisibility(false);\r\n    }\r\n\r\n    if (!searchingClass.includes(\"label\")) {\r\n      setLabelsVisibilityDetailsComp(false);\r\n    }\r\n  };\r\n\r\n  const listOption = (listId) => {\r\n    const copyWholeList = [...wholeList];\r\n    const filterWholeList = copyWholeList.filter((list) => list.id !== listId);\r\n\r\n    setWholeList(filterWholeList);\r\n  };\r\n\r\n  const addNewCard = (listId, newTask, taskId) => {\r\n    const correctList = wholeList.filter((list) => list.id === listId);\r\n    if (newTask.length === 0) return;\r\n\r\n    const matchedBadges = listOfAllBadges.filter((ele) => ele.id === taskId);\r\n    const theBiggestId = Math.max(...listOfAllTasksId);\r\n\r\n    //\"Add card\" by move already existing card\r\n    if (taskId) {\r\n      correctList[0].tasks.push({\r\n        id: taskId,\r\n        taskName: newTask,\r\n        currentList: listId,\r\n        comment: \"\",\r\n        badges: matchedBadges,\r\n        priority: false,\r\n        date: \"\",\r\n        cover: \"\",\r\n      });\r\n    } else {\r\n      //Add new card by button 'Add Card'\r\n      correctList[0].tasks.push({\r\n        id: `${listOfAllTasksId.length === 0 ? 0 : theBiggestId + 1}`,\r\n        taskName: newTask,\r\n        currentList: listId,\r\n        comment: \"\",\r\n        badges: [],\r\n        priority: false,\r\n        date: \"\",\r\n        cover: \"\",\r\n      });\r\n      if (listOfAllTasksId.length === 0) {\r\n        setListOfAllTasksId([0]);\r\n      } else {\r\n        setListOfAllTasksId([...listOfAllTasksId, theBiggestId + 1]);\r\n      }\r\n    }\r\n    numberOfTaskFunction(numberOfTask + 1);\r\n  };\r\n\r\n  const deleteCard = (listId, taskId, byButton) => {\r\n    //Delete Card from list( by every way )\r\n    const correctList = wholeList.filter((list) => list.id === listId);\r\n\r\n    const taskIndex = correctList[0].tasks.findIndex(\r\n      (element) => element.id === taskId\r\n    );\r\n\r\n    if (byButton === \"byButton\") {\r\n      //Delete Card Badges from array if matched exist\r\n      const matchedBadges = listOfAllBadges.filter((ele) => ele.id === taskId);\r\n      if (matchedBadges.length !== 0) {\r\n        matchedBadges.forEach((element) => {\r\n          const indexOfBadgedToDelete = listOfAllBadges.findIndex(\r\n            (ele) => ele.id === taskId && ele.color === element.color\r\n          );\r\n          listOfAllBadges.splice(indexOfBadgedToDelete, 1);\r\n        });\r\n      }\r\n\r\n      //Delete Card Id from array\r\n      const matchedIdList = listOfAllTasksId.findIndex((ele) => ele == taskId);\r\n      listOfAllTasksId.splice(matchedIdList, 1);\r\n    }\r\n\r\n    correctList[0].tasks.splice(taskIndex, 1);\r\n    numberOfTaskFunction(numberOfTask - 1);\r\n    setVisibilityOptionCover(false);\r\n    setVisibilityTaskDetails(false);\r\n  };\r\n\r\n  const addNewList = (listInputValue, showListHandle, setListInput) => {\r\n    showListHandle(false);\r\n    setListInput(\"\");\r\n    if (listInputValue === \"\") return;\r\n    if (listInputValue.length < 2) return;\r\n\r\n    let biggerThanLast = [];\r\n    wholeList.forEach((list) => biggerThanLast.push(list.id));\r\n    const theBiggest = Math.max(...biggerThanLast);\r\n    setWholeList([\r\n      ...wholeList,\r\n      {\r\n        title: listInputValue,\r\n        id: `${wholeList.length === 0 ? 0 : theBiggest + 1}`,\r\n        tasks: [],\r\n        activeInput: false,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const updateListTitle = (newTitle, listId) => {\r\n    const updatedList = wholeList.filter((list) => list.id === listId);\r\n    updatedList[0].title = newTitle;\r\n  };\r\n\r\n  const elementHoverEnter = (e) => {\r\n    const arrayClassList = [];\r\n    e.target.classList.forEach((item) => {\r\n      arrayClassList.push(item);\r\n    });\r\n\r\n    if (arrayClassList.includes(\"list\")) {\r\n      const currentLiColor = Color(\r\n        `${\r\n          e.target.style.backgroundColor\r\n            ? e.target.style.backgroundColor\r\n            : \"#76ce8e\"\r\n        }`\r\n      );\r\n      return (e.target.style.backgroundColor = currentLiColor.lighten(0.1));\r\n    }\r\n  };\r\n\r\n  const elementHoverLeave = (e) => {\r\n    const arrayClassList = [];\r\n    e.target.classList.forEach((item) => {\r\n      arrayClassList.push(item);\r\n    });\r\n\r\n    if (arrayClassList.includes(\"list\")) {\r\n      return (e.target.style.backgroundColor = whichColor);\r\n    }\r\n  };\r\n\r\n  const visibilityOptionFunction = (e, toggle, taskName, listId, cardId) => {\r\n    //Dates sending from Card to OptionFunction Comp (by clicked Edit Icon)\r\n    setVisibilityOptionCover(toggle);\r\n    setIdUpdatedList(listId);\r\n    setTaskName(taskName);\r\n    setOptionCoverData([\r\n      {\r\n        listId: listId,\r\n        top: e.target.parentNode.offsetTop,\r\n        left: e.target.parentNode.offsetLeft,\r\n        taskTitle: taskName,\r\n        clickedCard: e.target.parentNode,\r\n        clickedCardWrapLabel: e.target.parentNode.children[0],\r\n        clickedCardId: cardId,\r\n        wholeList: wholeList,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const taskDetailsFunction = (\r\n    //Dates sending from Card to DetailsComponenet (by doubleClick Card)\r\n    nameUpdatedTask,\r\n    nameUpdatedList,\r\n    listId,\r\n    cardId\r\n  ) => {\r\n    setIdUpdatedList(listId);\r\n    setTaskTitleList(nameUpdatedList);\r\n    setTaskName(nameUpdatedTask);\r\n    setTaskId(cardId);\r\n    setVisibilityTaskDetails(true);\r\n  };\r\n\r\n  const updateCard = (e, updatedTitle, listId, taskId) => {\r\n    // For changing taskName by detailCover component\r\n    if (\r\n      e.target.className.includes(\"cover\") ||\r\n      e.target.className.includes(\"cover_saveBtn\")\r\n    ) {\r\n      const correctList = wholeList.filter((list) => list.id === listId);\r\n      if (updatedTitle.length === 0) return setVisibilityTaskDetails(false);\r\n      const index = correctList[0].tasks.findIndex((ele) => ele.id === taskId);\r\n      correctList[0].tasks[index].taskName = updatedTitle;\r\n      setVisibilityTaskDetails(false);\r\n      setVisibilityOptionCover(false);\r\n      setLabelsVisibility(false);\r\n    }\r\n\r\n    // For changing taskName by detailCover component without closing this componentView\r\n    if (\r\n      !e.target.className.includes(\"input\") &&\r\n      !e.target.className.includes(\"suggested\") &&\r\n      !e.target.className.includes(\"close\") &&\r\n      !e.target.className.includes(\"delete\")\r\n    ) {\r\n      const correctList = wholeList.filter((list) => list.id === listId);\r\n      if (updatedTitle.length === 0) return setVisibilityTaskDetails(false);\r\n      if (correctList[0]) {\r\n        const index = correctList[0].tasks.findIndex(\r\n          (ele) => ele.id === taskId\r\n        );\r\n        correctList[0].tasks[index].taskName = updatedTitle;\r\n        setTaskName(updatedTitle);\r\n      }\r\n    }\r\n\r\n    if (e.target.className.includes(\"close\")) {\r\n      setVisibilityTaskDetails(false);\r\n      setVisibilityOptionCover(false);\r\n      setLabelsVisibility(false);\r\n    }\r\n  };\r\n\r\n  const changeListInDetails = () => {\r\n    setChangeListInDetails(!visibilityChangeListInDetails);\r\n  };\r\n\r\n  const moveCardToAnotherList = (\r\n    taskTitle,\r\n    currentList,\r\n    taskId,\r\n    clickedListId\r\n  ) => {\r\n    //FindListWhereDelete\r\n    const deleteFromList = wholeList.filter(\r\n      (list) => list.title === currentList\r\n    );\r\n\r\n    //AddToAnotherList\r\n    const addToList = wholeList.filter((list) => list.id === clickedListId);\r\n    deleteCard(deleteFromList[0].id, taskId);\r\n    addNewCard(addToList[0].id, taskTitle, taskId);\r\n\r\n    setVisibilityTaskDetails(false);\r\n    setChangeListInDetails(false);\r\n\r\n    taskDetailsFunction(taskTitle, addToList[0].title, addToList[0].id, taskId);\r\n  };\r\n\r\n  const moveListToAnotherPlace = (draggedListIndex, addToThisIndex) => {\r\n    const copy = [...wholeList];\r\n    const splicedElement = copy.splice(draggedListIndex, 1);\r\n    copy.splice(addToThisIndex, 0, ...splicedElement);\r\n    setWholeList(copy);\r\n  };\r\n\r\n  const clearAllBlankSpan = (e) => {\r\n    const allBlank = document.querySelectorAll(\".blank\");\r\n\r\n    allBlank.forEach((blank) => {\r\n      blank.style.width = \"0\";\r\n      blank.style.height = \"0\";\r\n      blank.style.backgroundColor = \"transparent\";\r\n      blank.style.borderRadius = \"0\";\r\n    });\r\n  };\r\n\r\n  //LABLES FEATURES\r\n  const handleLabelsVisibility = (toggle) => {\r\n    setLabelsVisibility(toggle);\r\n  };\r\n\r\n  const handleLabelsVisibilityDetailsComp = (toggle) => {\r\n    setLabelsVisibilityDetailsComp(toggle);\r\n  };\r\n\r\n  const toggleLabelColorToCard = (color, taskId) => {\r\n    const alreadyExistedBadges = listOfAllBadges.filter(\r\n      (ele) => ele.id === taskId\r\n    );\r\n\r\n    const matchedBages = [];\r\n    alreadyExistedBadges.forEach((ele) => {\r\n      if (ele.color === color) {\r\n        matchedBages.push(color);\r\n      }\r\n    });\r\n\r\n    if (matchedBages.length === 0) {\r\n      //Add only if this color and Id don't exist already\r\n      listOfAllBadges.push({\r\n        id: taskId,\r\n        color: color,\r\n        name: \"\",\r\n        labelId: `${color}${taskId}`,\r\n      });\r\n\r\n      createLabelsElement(color, taskId);\r\n\r\n      //CheckIcon Visible\r\n      const checkIcon = document.getElementById(`${color}Check`);\r\n      checkIcon.style.display = \"block\";\r\n      setToggle(!toggle);\r\n    } else {\r\n      const indexToDelete = listOfAllBadges.findIndex(\r\n        (ele) => ele.id === taskId && ele.color === color\r\n      );\r\n\r\n      //Delete from list of badges when exist and from DOM\r\n      listOfAllBadges.splice(indexToDelete, 1);\r\n      const matchedColor = document.getElementById(`${color}${taskId}`);\r\n      matchedColor.remove();\r\n\r\n      //CheckIcon Visible\r\n      const checkIcon = document.getElementById(`${color}Check`);\r\n      checkIcon.style.display = \"none\";\r\n      setToggle(!toggle);\r\n    }\r\n  };\r\n\r\n  const createLabelsElement = (color, taskId) => {\r\n    const currentTask = document.getElementById(taskId);\r\n\r\n    const newLabel = document.createElement(\"div\");\r\n    newLabel.classList.add(\"labelElement\");\r\n    newLabel.setAttribute(\"id\", `${color}${taskId}`);\r\n    newLabel.style.backgroundColor = `${color}`;\r\n    currentTask.children[0].appendChild(newLabel);\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <Navigations\r\n        themeToggle={showThemeOptionFunction}\r\n        themeOption={showThemeOption}\r\n        elementHoverEnter={elementHoverEnter}\r\n        elementHoverLeave={elementHoverLeave}\r\n      />\r\n      <ThemeField themeOption={showThemeOption} setWhichColor={setWhichColor} />\r\n      <CoreField\r\n        wholeList={wholeList}\r\n        setWholeList={setWholeList}\r\n        listOption={listOption}\r\n        addNewCard={addNewCard}\r\n        deleteCard={deleteCard}\r\n        addNewList={addNewList}\r\n        elementHoverEnter={elementHoverEnter}\r\n        elementHoverLeave={elementHoverLeave}\r\n        visibilityOptionFunction={visibilityOptionFunction}\r\n        taskDetailsFunction={taskDetailsFunction}\r\n        updateListTitle={updateListTitle}\r\n        moveListToAnotherPlace={moveListToAnotherPlace}\r\n        clearAllBlankSpan={clearAllBlankSpan}\r\n      />\r\n      {visibilityOptionsCover ? (\r\n        <OptionCover\r\n          optionCoverData={optionCoverData}\r\n          taskName={taskName}\r\n          updateCard={updateCard}\r\n          deleteCard={deleteCard}\r\n          handleLabelsVisibility={handleLabelsVisibility}\r\n          labelsVisibility={labelsVisibility}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n        />\r\n      ) : null}\r\n      {visibilityTaskDetails ? (\r\n        <DetailCover\r\n          taskName={taskName}\r\n          taskId={taskId}\r\n          taskTitleList={taskTitleList}\r\n          updateCard={updateCard}\r\n          deleteCard={deleteCard}\r\n          idUpdatedList={idUpdatedList}\r\n          changeListInDetails={changeListInDetails}\r\n          visibilityChangeListInDetails={visibilityChangeListInDetails}\r\n          wholeList={wholeList}\r\n          moveCardToAnotherList={moveCardToAnotherList}\r\n          handleLabelsVisibility={handleLabelsVisibilityDetailsComp}\r\n          labelsVisibility={labelsVisibilityDetailsComp}\r\n          toggleLabelColorToCard={toggleLabelColorToCard}\r\n          listOfAllBadges={listOfAllBadges}\r\n        />\r\n      ) : null}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { device } from \"../MediaQuery/mq\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin:0;\r\n    padding:0;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    box-sizing:border-box;\r\n    border:none;\r\n    outline:none;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n\r\n  html{\r\n    font-size:10px;\r\n  }\r\n\r\n  body{\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n  }\r\n\r\n  .card{\r\n  top:0;\r\n  left:0;\r\n  display:flex;\r\n  justify-content:space-between;\r\n  flex-wrap:wrap;\r\n  width: 100%;\r\n  max-width:260px;\r\n  word-break: break-all;\r\n  margin: 10px 0px;\r\n  padding: 9px 7.5px;\r\n  font-size: 1.4rem;\r\n  box-shadow: 0px 0.5px 0px 0.5px #aaa;\r\n  background-color: #fff;\r\n  border-radius:3px;\r\n  cursor: pointer;\r\n  color:black;\r\n\r\n  &:hover {\r\n    background-color: #F4F5F7;\r\n  }\r\n\r\n  &:hover > *{\r\n  color:#777;\r\n  }\r\n  }\r\n\r\n  .card_wrapLabel{\r\n    display:flex;\r\n    flex-wrap:wrap;\r\n    width:100%;\r\n  }\r\n\r\n  .labelElement{\r\n    width: 15%;\r\n    height:8px;\r\n    border-radius:5px;\r\n    margin-bottom:4px;\r\n    margin-right:4px\r\n  }\r\n\r\n  .labelElement_DetailCover{\r\n    min-width:40px;\r\n    width:auto;\r\n    height:32px;\r\n    border-radius:3px;\r\n    margin: 3px 3px 3px 0px;\r\n    cursor:pointer;\r\n    transition: 0.1s linear;\r\n\r\n    &:hover{\r\n      opacity: 0.85;\r\n    }\r\n  }\r\n\r\n  .lists{\r\n  top:0;\r\n  left:0;\r\n  width: 275px;\r\n  margin-right: 10px;\r\n  align-self: flex-start;\r\n  background-color: #ebecf0;\r\n  border-radius: 4px;\r\n  padding: 10px 7.5px;\r\n  margin-bottom: 15px;\r\n  cursor: pointer;\r\n  }\r\n  \r\n  .singleListWrap{\r\n     position:relative;\r\n     width: 285px;\r\n     display:flex;\r\n     flex-direction:column;\r\n   }\r\n\r\n  .fa-highlighter{\r\n    color:#777;\r\n    align-self:center;\r\n    margin-left:2px;\r\n    @media ${device.laptop} {\r\n      color:#fff;\r\n\r\n      &:hover{\r\n        color:#000;\r\n      }\r\n  }\r\n  }\r\n  \r\n  .fa-ellipsis-h{\r\n   padding: 9px ;\r\n   margin-left:2px;\r\n   margin-bottom: 5px;\r\n   font-size: 13px;\r\n   color: #777;\r\n   cursor: pointer;\r\n\r\n   &:hover{\r\n    background-color: #dddfe5;\r\n   }\r\n  }\r\n\r\n  .fa-credit-card{\r\n    margin-right: 7.5px;\r\n     color:#42526E;\r\n     font-size: 19px;\r\n     \r\n   }\r\n\r\n   .detail > .fa-times{\r\n     position: absolute;\r\n     top:15px;\r\n     right:15px;\r\n     font-size: 20px;\r\n     color:#42526E;\r\n     cursor: pointer;\r\n   }\r\n\r\n::-webkit-scrollbar{\r\n    height:17.5px;\r\n}::-webkit-scrollbar-track{\r\n    background:rgba(0,0,0,0.5);\r\n}\r\n::-webkit-scrollbar-thumb{\r\n  background:rgba(0,0,0,0.3);\r\n  border-radius: 10px;\r\n  height:10px;\r\n}\r\n::-webkit-scrollbar-thumb:hover{\r\n  background:rgba(0,0,0,0.5);\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\nimport Main from \"../Containers/Main/main\";\nimport GlobalStyle from \"../Style/GlobalStyle/globalStyle\";\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}